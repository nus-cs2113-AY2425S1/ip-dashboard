[{"path":"data/Sirius.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"MatchaRRR"},"content":"D | 0 | asd | 123","lastModifiedDate":"2024-10-04","isFullCredit":false}],"authorContributionMap":{"MatchaRRR":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"MatchaRRR"},"content":"# Sirius User Guide","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MatchaRRR"},"content":"Welcome to Sirius, your personal task management chatbot! ","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MatchaRRR"},"content":"This is a command-line-based chatbot designed to help you organize and track your tasks. ","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MatchaRRR"},"content":"It supports various task-related commands, such as adding, marking as done/undone, deleting, finding tasks, and listing all tasks.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MatchaRRR"},"content":"It also saves your tasks to a file so you can pick up where you left off even after restarting the program.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MatchaRRR"},"content":"## Quick Start","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MatchaRRR"},"content":"1. Ensure you have Java 17 or above installed in your Computer.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MatchaRRR"},"content":"2. Download the latest .jar file from here.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MatchaRRR"},"content":"3. Copy the file to the folder you want to use as the home folder for your Task Manager.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MatchaRRR"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar Sirius.jar` command to run the application.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MatchaRRR"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing help and pressing Enter will open the help window.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MatchaRRR"},"content":"   Some example commands you can try:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MatchaRRR"},"content":"    `list` : Lists all tasks.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MatchaRRR"},"content":"    `todo read books`: Adds todo task named read books.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MatchaRRR"},"content":"    `deadline return books /by Friday`: Adds deadline task named return books, and the deadline line is on Friday.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MatchaRRR"},"content":"    `event attend lecture /from 2pm /to 4pm`: Adds event task named attend lecture, and the time is from 2pm to 4pm.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MatchaRRR"},"content":"    `mark 3` : Mark the 3rd task in the task list as done.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MatchaRRR"},"content":"    `unmark 3` : Unmark the 3rd task in the task list.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MatchaRRR"},"content":"    `delete 3` : Deletes the 3rd task in the task list.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MatchaRRR"},"content":"    `find book`: Find all tasks that have the keyword \"book\".","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MatchaRRR"},"content":"    `exit`: Exits and Sirius will save your task list.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MatchaRRR"},"content":"6. Refer to the Features below for details of each command.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MatchaRRR"},"content":"## Features","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MatchaRRR"},"content":"Notes about the command format:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MatchaRRR"},"content":"Words in UPPER_CASE are the parameters to be supplied by the user.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"MatchaRRR"},"content":"e.g. in todo TODO_TASK, TODO_TASK is a parameter which can be used as todo read books.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"MatchaRRR"},"content":"Words in angle brackets are determined by the actual situation.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"MatchaRRR"},"content":"e.g. in todo \u003ctask_num\u003e, task_num refers to the total number of tasks in the list.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"MatchaRRR"},"content":"### Adding a task：  `todo` `deadline` `event`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"MatchaRRR"},"content":"There are three types of tasks you can add to the task list: Todo, Deadline and Event.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"MatchaRRR"},"content":"#### Todo task","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"MatchaRRR"},"content":"Add a simple task without any date/time.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"MatchaRRR"},"content":"Example: `todo TODO_TASK`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"MatchaRRR"},"content":"The expected output:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"MatchaRRR"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"MatchaRRR"},"content":"-----------------------------","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"MatchaRRR"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"MatchaRRR"},"content":"[T][ ] TODO_TASK","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"MatchaRRR"},"content":"Now you have \u003ctask_num\u003e tasks in the list.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"MatchaRRR"},"content":"-----------------------------","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"MatchaRRR"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"MatchaRRR"},"content":"#### Deadline task","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"MatchaRRR"},"content":"Add a task with time for deadline.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"MatchaRRR"},"content":"Example: `deadline DEADLINE_TASK /by DEADLINE_TIME`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"MatchaRRR"},"content":"The expected output:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"MatchaRRR"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"MatchaRRR"},"content":"-----------------------------","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"MatchaRRR"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"MatchaRRR"},"content":"[D][ ] DEADLINE_TASK (by: DEADLINE_TIME)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"MatchaRRR"},"content":"Now you have \u003ctask_num\u003e tasks in the list.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"MatchaRRR"},"content":"-----------------------------","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"MatchaRRR"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"MatchaRRR"},"content":"#### Event task","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"MatchaRRR"},"content":"Add a task with time for deadline.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"MatchaRRR"},"content":"Example: `event EVENT_TASK /from FROM_TIME /to TO_TIME`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"MatchaRRR"},"content":"The expected output:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"MatchaRRR"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"MatchaRRR"},"content":"-----------------------------","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"MatchaRRR"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"MatchaRRR"},"content":"[E][ ] EVENT_TASK (from: FROM_TIME to: TO_TIME)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"MatchaRRR"},"content":"Now you have \u003ctask_num\u003e tasks in the list.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"MatchaRRR"},"content":"-----------------------------","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"MatchaRRR"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"MatchaRRR"},"content":"### Marking a task","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"MatchaRRR"},"content":"Mark a task with the specified index as done.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"MatchaRRR"},"content":"Example: `mark TASK_INDEX`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"MatchaRRR"},"content":"The expected output (assume the corresponding task is project2.1 with a deadline):","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"MatchaRRR"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"MatchaRRR"},"content":"-----------------------------","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"MatchaRRR"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"MatchaRRR"},"content":"[D][X] project2.1 (by: Oct. 12th)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"MatchaRRR"},"content":"-----------------------------","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"MatchaRRR"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"MatchaRRR"},"content":"### Unmarking a task","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"MatchaRRR"},"content":"Unmark a task with the specified index.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"MatchaRRR"},"content":"Example: `unmark TASK_INDEX`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"MatchaRRR"},"content":"The expected output (assume the corresponding task is project2.1 with a deadline):","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"MatchaRRR"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"MatchaRRR"},"content":"-----------------------------","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"MatchaRRR"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"MatchaRRR"},"content":"[D][ ] project2.1 (by: Oct. 12th)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"MatchaRRR"},"content":"-----------------------------","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"MatchaRRR"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"MatchaRRR"},"content":"### Listing a task","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"MatchaRRR"},"content":"List all tasks and their states in the task list.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"MatchaRRR"},"content":"Example: `list`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"MatchaRRR"},"content":"The expected output (assume there is a corresponding task list):","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"MatchaRRR"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"MatchaRRR"},"content":"-----------------------------","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"MatchaRRR"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"MatchaRRR"},"content":"1. [T][ ] read book","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"MatchaRRR"},"content":"2. [D][ ] project2.1 (by: Oct. 12th)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"MatchaRRR"},"content":"3. [E][X] return book (from: Friday 4pm to: 5pm)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"MatchaRRR"},"content":"-----------------------------","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"MatchaRRR"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"MatchaRRR"},"content":"### Deleting a task","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"MatchaRRR"},"content":"Delete a task with the specified index.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"MatchaRRR"},"content":"Example: `delete TASK_INDEX`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"MatchaRRR"},"content":"The expected output (assume the corresponding task is project2.1 with a deadline):","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"MatchaRRR"},"content":"-----------------------------","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"MatchaRRR"},"content":"Got it. I\u0027ve removed this task:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"MatchaRRR"},"content":"[D][ ] project2.1 (by: Oct. 12th)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"MatchaRRR"},"content":"Now you have \u003ctask_num\u003e tasks in the list.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"MatchaRRR"},"content":"-----------------------------","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"MatchaRRR"},"content":"### Finding a task","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"MatchaRRR"},"content":"Find the tasks with the specified keyword.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"MatchaRRR"},"content":"Example: `find KEYWORD`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"MatchaRRR"},"content":"The expected output (assume the keyword is \"book\"):","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"MatchaRRR"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"MatchaRRR"},"content":"-----------------------------","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"MatchaRRR"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"MatchaRRR"},"content":"1. [T][ ] read book","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"MatchaRRR"},"content":"2. [E][X] return book (from: Friday 4pm to: 5pm)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"MatchaRRR"},"content":"-----------------------------","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"MatchaRRR"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"MatchaRRR"},"content":"### Exiting","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"MatchaRRR"},"content":"Exit the program.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"MatchaRRR"},"content":"Example: `bye`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"MatchaRRR"},"content":"The expected output:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"MatchaRRR"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"MatchaRRR"},"content":"-----------------------------","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"MatchaRRR"},"content":"Goodbye! Hope to see you soon!","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"MatchaRRR"},"content":"-----------------------------","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"MatchaRRR"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"MatchaRRR"},"content":"### Saving the data","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"MatchaRRR"},"content":"Data are saved in the hard disk automatically after any command that changes the task list. ","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"MatchaRRR"},"content":"There is no need to save manually.","lastModifiedDate":"2024-10-03","isFullCredit":false}],"authorContributionMap":{"MatchaRRR":171,"-":16}},{"path":"src/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MatchaRRR"},"content":"package commands;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MatchaRRR"},"content":"import exception.IncompleteCommandException;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MatchaRRR"},"content":"import exception.InvalidTaskContentException;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MatchaRRR"},"content":"import storage.Storage;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MatchaRRR"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MatchaRRR"},"content":"import ui.Ui;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MatchaRRR"},"content":"import task.*;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MatchaRRR"},"content":"import static main.Sirius.*;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MatchaRRR"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MatchaRRR"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MatchaRRR"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MatchaRRR"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MatchaRRR"},"content":"/**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MatchaRRR"},"content":" * AddCommand is responsible for adding a new task (Todo, Deadline, or Event) based on user input.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MatchaRRR"},"content":" * It processes the input and adds the appropriate task to the task list.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MatchaRRR"},"content":" */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MatchaRRR"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MatchaRRR"},"content":"    private final String userInput;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MatchaRRR"},"content":"    public AddCommand(String userInput) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MatchaRRR"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MatchaRRR"},"content":"     * Parses the given time string in two possible formats (\"dd/MM/yyyy\" or \"yyyy-MM-dd\").","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MatchaRRR"},"content":"     * If the string matches one of these formats, it will be parsed into a {@link LocalDate} and","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MatchaRRR"},"content":"     * formatted into the output format \"MMM dd yyyy\" (e.g., \"Oct 15 2019\").","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MatchaRRR"},"content":"     * If the input string does not match either format, it will be returned as-is.","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MatchaRRR"},"content":"     * @param time The time string to be parsed and formatted.","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MatchaRRR"},"content":"     * @return The formatted date string in \"MMM dd yyyy\" format if parsing is successful,","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MatchaRRR"},"content":"     *         or the original string if it does not match any of the expected formats.","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MatchaRRR"},"content":"    public String dealWithTimeFormat(String time){","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MatchaRRR"},"content":"        DateTimeFormatter inputFormat1 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MatchaRRR"},"content":"        DateTimeFormatter inputFormat2 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MatchaRRR"},"content":"        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MatchaRRR"},"content":"        LocalDate date \u003d null;","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MatchaRRR"},"content":"        try {","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MatchaRRR"},"content":"            date \u003d LocalDate.parse(time, inputFormat1);","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MatchaRRR"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"MatchaRRR"},"content":"            // If the first format fails, try the second format (yyyy-MM-dd)","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MatchaRRR"},"content":"            try {","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"MatchaRRR"},"content":"                date \u003d LocalDate.parse(time, inputFormat2);","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"MatchaRRR"},"content":"            } catch (DateTimeParseException ex) {","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"MatchaRRR"},"content":"                // If both formats fail, just use the initial format","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"MatchaRRR"},"content":"                return time;","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"MatchaRRR"},"content":"            }","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"MatchaRRR"},"content":"        }","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"MatchaRRR"},"content":"        return date.format(outputFormat);","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"MatchaRRR"},"content":"     * Executes the AddCommand by parsing the user input and adding the corresponding task to the TaskList.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"MatchaRRR"},"content":"     * It supports three types of tasks: Todo, Deadline, and Event.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"MatchaRRR"},"content":"    @Override","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"MatchaRRR"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IncompleteCommandException, InvalidTaskContentException {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"MatchaRRR"},"content":"        String[] slashCommand \u003d userInput.split(SLASH);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"MatchaRRR"},"content":"        String commandContent \u003d slashCommand[0]; //commandContent \u003d commandPrefix + taskName","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"MatchaRRR"},"content":"        String commandPrefix \u003d commandContent.split(SPACE)[0];","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"MatchaRRR"},"content":"        String taskName \u003d commandContent.replace(commandPrefix, EMPTY).trim();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"MatchaRRR"},"content":"        try {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"MatchaRRR"},"content":"            switch (commandPrefix) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"MatchaRRR"},"content":"                case TODO:","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"MatchaRRR"},"content":"                    if (taskName.isEmpty()) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"MatchaRRR"},"content":"                        throw new IncompleteCommandException(commandPrefix);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"MatchaRRR"},"content":"                    } else{","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"MatchaRRR"},"content":"                        tasks.addTask(new Todo(taskName, false));","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"MatchaRRR"},"content":"                    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"MatchaRRR"},"content":"                    break;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"MatchaRRR"},"content":"                case DEADLINE:","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"MatchaRRR"},"content":"                    int indexOfBy \u003d userInput.indexOf(\"/by\");","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"MatchaRRR"},"content":"                    if (taskName.isEmpty()) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"MatchaRRR"},"content":"                        throw new IncompleteCommandException(commandPrefix);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"MatchaRRR"},"content":"                    } else if (indexOfBy \u003d\u003d -1) {  // cannot find \"/by\"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"MatchaRRR"},"content":"                        throw new InvalidTaskContentException(\"You should declare \u0027/by\u0027 for deadline\");","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"MatchaRRR"},"content":"                    } else {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"MatchaRRR"},"content":"                        String byTime \u003d userInput.substring(indexOfBy).replace(\"/by\", EMPTY).trim();;","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"MatchaRRR"},"content":"                        tasks.addTask(new Deadline(taskName, false, dealWithTimeFormat(byTime)));","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"MatchaRRR"},"content":"                    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"MatchaRRR"},"content":"                    break;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"MatchaRRR"},"content":"                case EVENT:","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"MatchaRRR"},"content":"                    int indexOfFrom \u003d userInput.indexOf(\"/from\");","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"MatchaRRR"},"content":"                    int indexOfTo \u003d userInput.indexOf(\"/to\");","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"MatchaRRR"},"content":"                    if (taskName.isEmpty()) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"MatchaRRR"},"content":"                        throw new IncompleteCommandException(commandPrefix);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"MatchaRRR"},"content":"                    } else if (indexOfFrom \u003d\u003d -1 || indexOfTo \u003d\u003d -1) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"MatchaRRR"},"content":"                        throw new InvalidTaskContentException(\"You should declare \u0027/from\u0027 and \u0027/to\u0027 for event\");","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"MatchaRRR"},"content":"                    } else {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"MatchaRRR"},"content":"                        String fromTime \u003d userInput.substring(indexOfFrom, indexOfTo).replace(\"/from\", EMPTY).trim();","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"MatchaRRR"},"content":"                        String toTime \u003d userInput.substring(indexOfTo).replace(\"/to\", EMPTY).trim();;","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"MatchaRRR"},"content":"                        tasks.addTask(new Event(taskName, false, dealWithTimeFormat(fromTime), dealWithTimeFormat(toTime)));","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"MatchaRRR"},"content":"                    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"MatchaRRR"},"content":"            }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"MatchaRRR"},"content":"            ui.showTaskAdded(tasks, tasks.getListSize());","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"MatchaRRR"},"content":"            ui.showCurrentSizeOfList(tasks);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"MatchaRRR"},"content":"        } catch (InvalidTaskContentException | IncompleteCommandException e) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"MatchaRRR"},"content":"            ui.showLine();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"MatchaRRR"},"content":"            ui.print(e.getMessage());","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"MatchaRRR"},"content":"            ui.showLine();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"MatchaRRR"},"content":"        }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"MatchaRRR"},"content":"        storage.saveTaskList(tasks.getList(), ui);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"MatchaRRR"},"content":"}","lastModifiedDate":"2024-09-28","isFullCredit":false}],"authorContributionMap":{"MatchaRRR":110}},{"path":"src/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MatchaRRR"},"content":"package commands;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MatchaRRR"},"content":"import storage.Storage;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MatchaRRR"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MatchaRRR"},"content":"import ui.Ui;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MatchaRRR"},"content":"/**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MatchaRRR"},"content":" * The ByeCommand class handles the termination of the program when the user inputs the \"bye\" command.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MatchaRRR"},"content":" */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MatchaRRR"},"content":"public class ByeCommand extends Command{","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MatchaRRR"},"content":"     * Executes the ByeCommand by calling the `sayGoodbye` method of the Ui class.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MatchaRRR"},"content":"     * This is used to display the goodbye message to the user.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MatchaRRR"},"content":"    @Override","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MatchaRRR"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MatchaRRR"},"content":"        ui.sayGoodbye();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MatchaRRR"},"content":"     * Overrides the isExit method to indicate that this command should terminate the program.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MatchaRRR"},"content":"     * @return true, indicating that the program should exit after this command.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MatchaRRR"},"content":"    @Override","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MatchaRRR"},"content":"    public boolean isExit(){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MatchaRRR"},"content":"        return true;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MatchaRRR"},"content":"}","lastModifiedDate":"2024-09-28","isFullCredit":false}],"authorContributionMap":{"MatchaRRR":29}},{"path":"src/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MatchaRRR"},"content":"package commands;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MatchaRRR"},"content":"import storage.Storage;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MatchaRRR"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MatchaRRR"},"content":"import ui.Ui;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MatchaRRR"},"content":"/**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MatchaRRR"},"content":" * The Command class is an abstract base class for all user commands.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MatchaRRR"},"content":" * Each specific command (e.g., AddCommand, DeleteCommand) will inherit from this class and implement the execute method.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MatchaRRR"},"content":" */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MatchaRRR"},"content":"public abstract class Command {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MatchaRRR"},"content":"     * Executes the command. This method must be implemented by all subclasses.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MatchaRRR"},"content":"     * @param tasks The TaskList object containing the list of tasks.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MatchaRRR"},"content":"     * @param ui The Ui object for user interaction, to display messages or gather input.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MatchaRRR"},"content":"     * @param storage The Storage object for saving or loading tasks from a file.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MatchaRRR"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MatchaRRR"},"content":"     * Indicates whether the command should terminate the application.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MatchaRRR"},"content":"     * This can be overridden by subclasses if the command (like ByeCommand) exits the program.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MatchaRRR"},"content":"     * @return A boolean value indicating whether the command exits the application. Default is false.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MatchaRRR"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MatchaRRR"},"content":"        return false;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MatchaRRR"},"content":"}","lastModifiedDate":"2024-09-28","isFullCredit":false}],"authorContributionMap":{"MatchaRRR":30}},{"path":"src/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MatchaRRR"},"content":"package commands;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MatchaRRR"},"content":"import exception.IncompleteCommandException;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MatchaRRR"},"content":"import storage.Storage;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MatchaRRR"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MatchaRRR"},"content":"import ui.Ui;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MatchaRRR"},"content":"import static main.Sirius.*;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MatchaRRR"},"content":"/**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MatchaRRR"},"content":" * The DeleteCommand class handles the deletion of a task from the task list.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MatchaRRR"},"content":" */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MatchaRRR"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MatchaRRR"},"content":"    private final String userInput;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MatchaRRR"},"content":"    public DeleteCommand(String userInput) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MatchaRRR"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MatchaRRR"},"content":"     * Executes the delete command, which removes a task from the task list.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MatchaRRR"},"content":"     * It first parses the user input to get the task number, deletes the task from the list,","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MatchaRRR"},"content":"     * and then updates the storage and UI.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MatchaRRR"},"content":"    @Override","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MatchaRRR"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IncompleteCommandException {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MatchaRRR"},"content":"        String[] slashCommand \u003d userInput.split(SLASH);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MatchaRRR"},"content":"        String commandContent \u003d slashCommand[0]; //commandContent \u003d commandPrefix + taskName","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MatchaRRR"},"content":"        String commandPrefix \u003d commandContent.split(SPACE)[0];","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MatchaRRR"},"content":"        String taskName \u003d commandContent.replace(commandPrefix, EMPTY).trim();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MatchaRRR"},"content":"        try {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MatchaRRR"},"content":"            if (taskName.isEmpty()) { // input is only mark or unmark","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MatchaRRR"},"content":"                throw new IncompleteCommandException(\"Task index\");","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MatchaRRR"},"content":"            }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MatchaRRR"},"content":"            int taskNumber \u003d Integer.parseInt(taskName);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MatchaRRR"},"content":"            if (taskNumber \u003e tasks.getListSize()) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MatchaRRR"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MatchaRRR"},"content":"            }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MatchaRRR"},"content":"            ui.showTaskDeleted(tasks, taskNumber);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MatchaRRR"},"content":"            tasks.deleteTask(taskNumber);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MatchaRRR"},"content":"            ui.showCurrentSizeOfList(tasks);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"MatchaRRR"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MatchaRRR"},"content":"            ui.showIndexOutOfBoundError();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"MatchaRRR"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"MatchaRRR"},"content":"            ui.showNumberFormatError();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"MatchaRRR"},"content":"        } catch (IncompleteCommandException e){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"MatchaRRR"},"content":"            ui.showLine();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"MatchaRRR"},"content":"            ui.print(e.getMessage());","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"MatchaRRR"},"content":"            ui.showLine();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"MatchaRRR"},"content":"        }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"MatchaRRR"},"content":"        storage.saveTaskList(tasks.getList(), ui);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"MatchaRRR"},"content":"}","lastModifiedDate":"2024-09-28","isFullCredit":false}],"authorContributionMap":{"MatchaRRR":54}},{"path":"src/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MatchaRRR"},"content":"package commands;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MatchaRRR"},"content":"import exception.IncompleteCommandException;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MatchaRRR"},"content":"import storage.Storage;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MatchaRRR"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MatchaRRR"},"content":"import ui.Ui;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MatchaRRR"},"content":"import static main.Sirius.*;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MatchaRRR"},"content":"/**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MatchaRRR"},"content":" * The FindCommand class allows the user to search for tasks in the TaskList that contain a keyword.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MatchaRRR"},"content":" */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MatchaRRR"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MatchaRRR"},"content":"    private final String userInput;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MatchaRRR"},"content":"    public FindCommand(String userInput) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MatchaRRR"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MatchaRRR"},"content":"     * Executes the find command, which searches for tasks that contain the specified keyword.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MatchaRRR"},"content":"     * It first parses the user input to extract the keyword, then uses the UI to display the matching tasks.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MatchaRRR"},"content":"    @Override","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MatchaRRR"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IncompleteCommandException {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MatchaRRR"},"content":"        String[] slashCommand \u003d userInput.split(SLASH);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MatchaRRR"},"content":"        String commandContent \u003d slashCommand[0]; //commandContent \u003d commandPrefix + taskName","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MatchaRRR"},"content":"        String commandPrefix \u003d commandContent.split(SPACE)[0];","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MatchaRRR"},"content":"        String keyWord \u003d commandContent.replace(commandPrefix, EMPTY).trim();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MatchaRRR"},"content":"        try {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MatchaRRR"},"content":"            if (keyWord.isEmpty()) { // input is only mark or unmark","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MatchaRRR"},"content":"                throw new IncompleteCommandException(\"The keyword\");","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MatchaRRR"},"content":"            }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MatchaRRR"},"content":"            ui.showTaskFound(tasks, keyWord);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MatchaRRR"},"content":"        } catch (IncompleteCommandException e){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MatchaRRR"},"content":"            ui.showLine();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MatchaRRR"},"content":"            ui.print(e.getMessage());","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MatchaRRR"},"content":"            ui.showLine();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MatchaRRR"},"content":"        }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MatchaRRR"},"content":"}","lastModifiedDate":"2024-09-28","isFullCredit":false}],"authorContributionMap":{"MatchaRRR":42}},{"path":"src/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MatchaRRR"},"content":"package commands;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MatchaRRR"},"content":"import storage.Storage;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MatchaRRR"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MatchaRRR"},"content":"import ui.Ui;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MatchaRRR"},"content":"/**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MatchaRRR"},"content":" * The ListCommand class handles the \"list\" command, which shows all tasks in the task list.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MatchaRRR"},"content":" */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MatchaRRR"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MatchaRRR"},"content":"     * Executes the list command by calling the UI to display all tasks in the task list.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MatchaRRR"},"content":"    @Override","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MatchaRRR"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MatchaRRR"},"content":"        ui.showTaskListed(tasks);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MatchaRRR"},"content":"}","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false}],"authorContributionMap":{"MatchaRRR":19}},{"path":"src/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MatchaRRR"},"content":"package commands;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MatchaRRR"},"content":"import exception.IncompleteCommandException;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MatchaRRR"},"content":"import storage.Storage;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MatchaRRR"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MatchaRRR"},"content":"import ui.Ui;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MatchaRRR"},"content":"import static main.Sirius.*;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MatchaRRR"},"content":"/**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MatchaRRR"},"content":" * The ListCommand class handles the \"mark\" and \"unmark\" command, which marks a task in the list as done or unmarks it.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MatchaRRR"},"content":" */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MatchaRRR"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MatchaRRR"},"content":"    private final String userInput;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MatchaRRR"},"content":"    private final boolean isMarked;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MatchaRRR"},"content":"    public MarkCommand(String userInput, boolean isMarked) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MatchaRRR"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MatchaRRR"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MatchaRRR"},"content":"     * Executes the mark or unmark command by marking/unmarking the task as complete/incomplete.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MatchaRRR"},"content":"    @Override","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MatchaRRR"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IncompleteCommandException {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MatchaRRR"},"content":"        String[] slashCommand \u003d userInput.split(SLASH);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MatchaRRR"},"content":"        String commandContent \u003d slashCommand[0]; //commandContent \u003d commandPrefix + taskName","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MatchaRRR"},"content":"        String commandPrefix \u003d commandContent.split(SPACE)[0];","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MatchaRRR"},"content":"        String taskName \u003d commandContent.replace(commandPrefix, EMPTY).trim();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MatchaRRR"},"content":"        try{","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MatchaRRR"},"content":"            if (taskName.isEmpty()) { // input is only mark or unmark","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MatchaRRR"},"content":"                throw new IncompleteCommandException(\"Task index\");","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MatchaRRR"},"content":"            }  // note that write in the try block to be caught","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MatchaRRR"},"content":"            int taskNumber \u003d Integer.parseInt(taskName);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MatchaRRR"},"content":"            if (isMarked) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MatchaRRR"},"content":"                tasks.markTask(taskNumber, true);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MatchaRRR"},"content":"                ui.showTaskMarked(tasks, taskNumber);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MatchaRRR"},"content":"            } else {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MatchaRRR"},"content":"                tasks.markTask(taskNumber, false);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MatchaRRR"},"content":"                ui.showTaskUnmarked(tasks, taskNumber);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MatchaRRR"},"content":"            }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"MatchaRRR"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MatchaRRR"},"content":"            ui.showIndexOutOfBoundError();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"MatchaRRR"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"MatchaRRR"},"content":"            ui.showNumberFormatError();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"MatchaRRR"},"content":"        } catch (IncompleteCommandException e){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"MatchaRRR"},"content":"            ui.showIncompleteCommandError(e);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"MatchaRRR"},"content":"        }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"MatchaRRR"},"content":"        storage.saveTaskList(tasks.getList(), ui);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"MatchaRRR"},"content":"}","lastModifiedDate":"2024-09-28","isFullCredit":false}],"authorContributionMap":{"MatchaRRR":52}},{"path":"src/exception/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MatchaRRR"},"content":"package exception;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MatchaRRR"},"content":"/**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MatchaRRR"},"content":" * This class represents an exception that is thrown when an illegal or invalid command is issued.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MatchaRRR"},"content":" * It extends the base Exception class and passes an error message to its constructor.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MatchaRRR"},"content":" */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MatchaRRR"},"content":"public class IllegalCommandException extends Exception { // inherit from the Exception","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MatchaRRR"},"content":"    public IllegalCommandException(String message) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MatchaRRR"},"content":"        super(message);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MatchaRRR"},"content":"}","lastModifiedDate":"2024-09-10","isFullCredit":false}],"authorContributionMap":{"MatchaRRR":11}},{"path":"src/exception/IncompleteCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MatchaRRR"},"content":"package exception;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MatchaRRR"},"content":"/**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MatchaRRR"},"content":" * This class represents an exception that is thrown when a command is incomplete.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MatchaRRR"},"content":" * It extends RuntimeException and provides a custom message to indicate the nature of the error.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MatchaRRR"},"content":" */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MatchaRRR"},"content":"public class IncompleteCommandException extends RuntimeException {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MatchaRRR"},"content":"    public static final String message \u003d \" cannot be empty! Please enter a valid command!\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MatchaRRR"},"content":"    public IncompleteCommandException(String taskName) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MatchaRRR"},"content":"        super(taskName + message);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MatchaRRR"},"content":"}","lastModifiedDate":"2024-09-10","isFullCredit":false}],"authorContributionMap":{"MatchaRRR":13}},{"path":"src/exception/InvalidTaskContentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MatchaRRR"},"content":"package exception;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MatchaRRR"},"content":"/**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MatchaRRR"},"content":" * This class represents an exception that is thrown when the input command is in wrong format.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MatchaRRR"},"content":" * It extends RuntimeException to indicate that it is an unchecked exception.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MatchaRRR"},"content":" */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MatchaRRR"},"content":"public class InvalidTaskContentException extends RuntimeException {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MatchaRRR"},"content":"    public InvalidTaskContentException(String message) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MatchaRRR"},"content":"        super(message);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MatchaRRR"},"content":"}","lastModifiedDate":"2024-09-10","isFullCredit":false}],"authorContributionMap":{"MatchaRRR":11}},{"path":"src/main/Sirius.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MatchaRRR"},"content":"package main;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MatchaRRR"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MatchaRRR"},"content":"import exception.*;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MatchaRRR"},"content":"import commands.*;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MatchaRRR"},"content":"import ui.Ui;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MatchaRRR"},"content":"import storage.Storage;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MatchaRRR"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MatchaRRR"},"content":"import parser.Parser;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MatchaRRR"},"content":"/**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MatchaRRR"},"content":" * Sirius is a chatbot application that interacts with the user to manage tasks.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MatchaRRR"},"content":" * It processes user commands, maintains a task list, and stores the list in a file.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MatchaRRR"},"content":" * The chatbot supports various task-related commands such as adding, deleting, marking, unmarking tasks, and more.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MatchaRRR"},"content":" */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MatchaRRR"},"content":"public class Sirius {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MatchaRRR"},"content":"    private final Storage storage;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MatchaRRR"},"content":"    private final Ui ui;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MatchaRRR"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MatchaRRR"},"content":"    // Command keywords used for parsing user input","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MatchaRRR"},"content":"    public static final String BYE \u003d \"bye\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MatchaRRR"},"content":"    public static final String LIST \u003d \"list\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MatchaRRR"},"content":"    public static final String MARK \u003d \"mark\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MatchaRRR"},"content":"    public static final String UNMARK \u003d \"unmark\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MatchaRRR"},"content":"    public static final String TODO \u003d \"todo\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MatchaRRR"},"content":"    public static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MatchaRRR"},"content":"    public static final String EVENT \u003d \"event\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MatchaRRR"},"content":"    public static final String DELETE \u003d \"delete\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MatchaRRR"},"content":"    public static final String FIND \u003d \"find\";","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MatchaRRR"},"content":"    // Messages shown to the user for different operations","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MatchaRRR"},"content":"    public static final String SPACE \u003d \" \";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MatchaRRR"},"content":"    public static final String EMPTY \u003d \"\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MatchaRRR"},"content":"    public static final String SLASH \u003d \"/\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MatchaRRR"},"content":"    public static final String STATUS_DELIMINATOR \u003d \"\\\\|\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MatchaRRR"},"content":"    public static final String SEPARATOR \u003d \"-----------------------------\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MatchaRRR"},"content":"    // Error messages for some exceptions","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MatchaRRR"},"content":"    public static final String WELCOME_MESSAGE \u003d \"Hello! I\u0027m Sirius, your chatting robot!\\nWhat can I do for you?\";","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MatchaRRR"},"content":"    public static final String GOODBYE_MESSAGE \u003d \"Goodbye! Hope to see you soon!\";","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"MatchaRRR"},"content":"    public static final String ADD_TASK_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MatchaRRR"},"content":"    public static final String DELETE_TASK_MESSAGE \u003d \"Got it. I\u0027ve removed this task:\";","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"MatchaRRR"},"content":"    public static final String MARK_TASK_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"MatchaRRR"},"content":"    public static final String UNMARK_TASK_MESSAGE \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"MatchaRRR"},"content":"    public static final String LIST_TASK_MESSAGE \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"MatchaRRR"},"content":"    public static final String FIND_TASK_MESSAGE \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"MatchaRRR"},"content":"    public static final String NOT_FIND_TASK_MESSAGE \u003d \"No tasks found with the keyword: \";","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"MatchaRRR"},"content":"    public static final String INDEX_BOUND_ERROR_MESSAGE \u003d \"The task index is out of bound! Please enter a valid task index.\";","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"MatchaRRR"},"content":"    public static final String INDEX_FORMAT_ERROR_MESSAGE \u003d \"The task index must be a number! Please enter a valid index number!\";","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"MatchaRRR"},"content":"    public static final String CREATE_NEW_LIST_MESSAGE \u003d\"You have no previous task list. Start with a new task list!\";","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"MatchaRRR"},"content":"    public static final String SAVING_ERROR_MESSAGE \u003d \"An error occurred while saving the tasks.\";","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"MatchaRRR"},"content":"    public static final String ILLEGAL_COMMAND_MESSAGE \u003d \"I don\u0027t understand it. Please enter an illegal command!\";","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"MatchaRRR"},"content":"     * Constructs a Sirius object with the specified file path.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"MatchaRRR"},"content":"     * Initializes the UI, Storage, and TaskList components.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"MatchaRRR"},"content":"     * If the task file is not found, it creates a new TaskList.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"MatchaRRR"},"content":"     * @param filePath The file path where tasks are stored.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"MatchaRRR"},"content":"    public Sirius(String filePath) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"MatchaRRR"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"MatchaRRR"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"MatchaRRR"},"content":"        // final variables (like tasks in this case) can only be assigned once.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"MatchaRRR"},"content":"        try {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"MatchaRRR"},"content":"            tasks \u003d new TaskList(storage.loadTaskList());","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"MatchaRRR"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"MatchaRRR"},"content":"            storage.creatNewFile(ui);","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"MatchaRRR"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"MatchaRRR"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"MatchaRRR"},"content":"        }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"MatchaRRR"},"content":"     * Runs the main logic of the Sirius chatbot.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"MatchaRRR"},"content":"     * Continuously reads and executes user commands until getting an exit command.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"MatchaRRR"},"content":"    public void run() {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"MatchaRRR"},"content":"        ui.sayHello();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"MatchaRRR"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"MatchaRRR"},"content":"        while (!isExit) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"MatchaRRR"},"content":"            try {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"MatchaRRR"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"MatchaRRR"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"MatchaRRR"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"MatchaRRR"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"MatchaRRR"},"content":"            } catch (IllegalCommandException e) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"MatchaRRR"},"content":"                ui.showLine();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"MatchaRRR"},"content":"                ui.print(e.getMessage());","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"MatchaRRR"},"content":"            }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"MatchaRRR"},"content":"            ui.printEmptyLine();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"MatchaRRR"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"MatchaRRR"},"content":"     * The main entry point of the Sirius application.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"MatchaRRR"},"content":"     * Initializes the Sirius object and starts the application.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"MatchaRRR"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"MatchaRRR"},"content":"        new Sirius(\"data/Sirius.txt\").run();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"MatchaRRR"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"MatchaRRR":105}},{"path":"src/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MatchaRRR"},"content":"package parser;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MatchaRRR"},"content":"import commands.*;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MatchaRRR"},"content":"import exception.IllegalCommandException;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MatchaRRR"},"content":"import exception.IncompleteCommandException;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MatchaRRR"},"content":"import exception.InvalidTaskContentException;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MatchaRRR"},"content":"import static main.Sirius.*;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MatchaRRR"},"content":"/**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MatchaRRR"},"content":" * The Parser class is responsible for interpreting user input and returning the corresponding Command object.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MatchaRRR"},"content":" * It does not have any instance variables, so all methods are static.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MatchaRRR"},"content":" */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MatchaRRR"},"content":"public class Parser {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MatchaRRR"},"content":"     * Parses the user\u0027s input and returns a corresponding Command object.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MatchaRRR"},"content":"     * @param userInput The full string of the user\u0027s input.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MatchaRRR"},"content":"     * @return A Command object corresponding to the user input.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MatchaRRR"},"content":"     * @throws InvalidTaskContentException If the input does not contain valid content for a task.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MatchaRRR"},"content":"     * @throws IncompleteCommandException  If the command is incomplete or missing required arguments.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MatchaRRR"},"content":"     * @throws IllegalCommandException     If the command does not match any known command prefix.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MatchaRRR"},"content":"    public static Command parse(String userInput) throws InvalidTaskContentException, IncompleteCommandException, IllegalCommandException {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MatchaRRR"},"content":"        String[] commandPieces \u003d userInput.split(\" \");","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MatchaRRR"},"content":"        String commandPrefix \u003d commandPieces[0];","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MatchaRRR"},"content":"        switch (commandPrefix) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MatchaRRR"},"content":"            case BYE:","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MatchaRRR"},"content":"                return new ByeCommand();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MatchaRRR"},"content":"            case LIST:","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MatchaRRR"},"content":"                return new ListCommand();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MatchaRRR"},"content":"            case MARK:","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MatchaRRR"},"content":"                return new MarkCommand(userInput, true);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MatchaRRR"},"content":"            case UNMARK:","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MatchaRRR"},"content":"                return new MarkCommand(userInput, false);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MatchaRRR"},"content":"            case TODO, DEADLINE, EVENT:","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MatchaRRR"},"content":"                return new AddCommand(userInput);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MatchaRRR"},"content":"            case DELETE:","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MatchaRRR"},"content":"                return new DeleteCommand(userInput);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MatchaRRR"},"content":"            case FIND:","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"MatchaRRR"},"content":"                return new FindCommand(userInput);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MatchaRRR"},"content":"            default:","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"MatchaRRR"},"content":"                throw new IllegalCommandException(ILLEGAL_COMMAND_MESSAGE + \"\\n\" + SEPARATOR);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"MatchaRRR"},"content":"        }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"MatchaRRR"},"content":"}","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false}],"authorContributionMap":{"MatchaRRR":49}},{"path":"src/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MatchaRRR"},"content":"package storage;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MatchaRRR"},"content":"import java.io.File;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MatchaRRR"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MatchaRRR"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MatchaRRR"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MatchaRRR"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MatchaRRR"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MatchaRRR"},"content":"import task.*;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MatchaRRR"},"content":"import ui.Ui;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MatchaRRR"},"content":"//import static main.Sirius.CREATE_DIRECTORY_MESSAGE;","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MatchaRRR"},"content":"//import static main.Sirius.CREATE_FILE_MESSAGE;","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MatchaRRR"},"content":"import static main.Sirius.STATUS_DELIMINATOR;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MatchaRRR"},"content":"/**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MatchaRRR"},"content":" * The Storage class manages reading and writing task data from and to a file in the local file system.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MatchaRRR"},"content":" */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MatchaRRR"},"content":"public class Storage {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MatchaRRR"},"content":"    private final String filePath;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MatchaRRR"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MatchaRRR"},"content":"     * @param filePath Path to the file where tasks will be stored.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MatchaRRR"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MatchaRRR"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MatchaRRR"},"content":"     * Loads the task list from the specified file.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MatchaRRR"},"content":"     * @return An ArrayList of Task objects loaded from the file.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MatchaRRR"},"content":"     * @throws FileNotFoundException If the file does not exist.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MatchaRRR"},"content":"    public ArrayList\u003cTask\u003e loadTaskList() throws FileNotFoundException{","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MatchaRRR"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MatchaRRR"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MatchaRRR"},"content":"        if (file.exists()) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MatchaRRR"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MatchaRRR"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"MatchaRRR"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MatchaRRR"},"content":"                list.add(fromFileFormat(line));","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"MatchaRRR"},"content":"            }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"MatchaRRR"},"content":"            scanner.close();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"MatchaRRR"},"content":"        } else {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"MatchaRRR"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"MatchaRRR"},"content":"        }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"MatchaRRR"},"content":"        return list;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"MatchaRRR"},"content":"     * Saves the given task list to the specified file.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"MatchaRRR"},"content":"     * If the directory or file does not exist, it creates them.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"MatchaRRR"},"content":"     * @param list The list of tasks to be saved.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"MatchaRRR"},"content":"     * @param ui The UI object for printing messages to the user.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"MatchaRRR"},"content":"    public void saveTaskList(ArrayList\u003cTask\u003e list, Ui ui) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"MatchaRRR"},"content":"        try {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"MatchaRRR"},"content":"            File directory \u003d new File(\"./data\");","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"MatchaRRR"},"content":"            File file \u003d new File(directory, \"Sirius.txt\");","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"MatchaRRR"},"content":"            FileWriter writer \u003d new FileWriter(file);  // override the previous contents in txt file.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"MatchaRRR"},"content":"            for (Task task : list) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"MatchaRRR"},"content":"                writer.write(task.toFileFormat() + System.lineSeparator());","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"MatchaRRR"},"content":"            }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"MatchaRRR"},"content":"            writer.close();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"MatchaRRR"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"MatchaRRR"},"content":"            ui.showSavingError();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"MatchaRRR"},"content":"        }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"MatchaRRR"},"content":"     * If the directory or file does not exist, it creates a new file to store the task list.","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"MatchaRRR"},"content":"     * @param ui The UI object for printing messages to the user.","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"MatchaRRR"},"content":"    public void creatNewFile(Ui ui){","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"MatchaRRR"},"content":"        try {","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"MatchaRRR"},"content":"            File directory \u003d new File(\"./data\");","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"MatchaRRR"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"MatchaRRR"},"content":"                boolean mkdirs \u003d directory.mkdirs();","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"MatchaRRR"},"content":"            }","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"MatchaRRR"},"content":"            File file \u003d new File(directory, \"Sirius.txt\");","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"MatchaRRR"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"MatchaRRR"},"content":"                boolean newFile \u003d file.createNewFile();","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"MatchaRRR"},"content":"            }","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"MatchaRRR"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"MatchaRRR"},"content":"            ui.showSavingError();","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"MatchaRRR"},"content":"        }","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"MatchaRRR"},"content":"     * Converts a line from the file format to a Task object.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"MatchaRRR"},"content":"     * @param line A string in the file format representing a task.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"MatchaRRR"},"content":"     * @return The corresponding Task object.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"MatchaRRR"},"content":"    private Task fromFileFormat(String line) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"MatchaRRR"},"content":"        String[] splitLine \u003d line.split(STATUS_DELIMINATOR);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"MatchaRRR"},"content":"        String type \u003d splitLine[0].trim();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"MatchaRRR"},"content":"        boolean isMarked \u003d splitLine[1].trim().equals(\"1\");","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"MatchaRRR"},"content":"        String taskName \u003d splitLine[2].trim();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"MatchaRRR"},"content":"        switch (type) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"MatchaRRR"},"content":"            case \"T\":","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"MatchaRRR"},"content":"                return new Todo(taskName, isMarked);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"MatchaRRR"},"content":"            case \"D\":","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"MatchaRRR"},"content":"                return new Deadline(taskName, isMarked, splitLine[3].trim());","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"MatchaRRR"},"content":"            case \"E\":","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"MatchaRRR"},"content":"                return new Event(taskName, isMarked, splitLine[3].trim(), splitLine[4].trim());","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"MatchaRRR"},"content":"            default:","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"MatchaRRR"},"content":"                throw new IllegalArgumentException(\"Unknown task type\");","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"MatchaRRR"},"content":"        }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"MatchaRRR"},"content":"}","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false}],"authorContributionMap":{"MatchaRRR":118}},{"path":"src/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MatchaRRR"},"content":"package task;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MatchaRRR"},"content":"/**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MatchaRRR"},"content":" * The Deadline class represents a deadline task.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MatchaRRR"},"content":" * It extends the abstract Task class and provides implementations for formatting the task\u0027s display output and file-saving format.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MatchaRRR"},"content":" */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MatchaRRR"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MatchaRRR"},"content":"    protected String by;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MatchaRRR"},"content":"    public Deadline(String taskName, boolean isMarked, String by) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MatchaRRR"},"content":"        super(taskName, isMarked);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MatchaRRR"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MatchaRRR"},"content":"    public String getBy() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MatchaRRR"},"content":"        return by;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MatchaRRR"},"content":"    public void setBy(String by) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MatchaRRR"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MatchaRRR"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MatchaRRR"},"content":"     * The string includes the \"[D]\", followed by the inherited task\u0027s string representation and the deadline information.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MatchaRRR"},"content":"     * @return A string that shows the task type, its completion status, name, and deadline.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MatchaRRR"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MatchaRRR"},"content":"    public String toString() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MatchaRRR"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MatchaRRR"},"content":"     * Converts the deadline task to a format suitable for saving to a file.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MatchaRRR"},"content":"     * The format is \"D | isMarked | taskName | by\".","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MatchaRRR"},"content":"     * @return A string formatted for file storage of the deadline task.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MatchaRRR"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MatchaRRR"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MatchaRRR"},"content":"        return \"D | \" + (isMarked()? \"1\":\"0\") + \" | \" + getTaskName() + \" | \" + getBy();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"MatchaRRR"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"MatchaRRR":44}},{"path":"src/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MatchaRRR"},"content":"package task;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MatchaRRR"},"content":"/**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MatchaRRR"},"content":" * The Event class represents an event task.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MatchaRRR"},"content":" * It extends the abstract Task class and provides implementations for formatting the task\u0027s display output and file-saving format.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MatchaRRR"},"content":" */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MatchaRRR"},"content":"public class Event extends Task {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MatchaRRR"},"content":"    protected String from;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MatchaRRR"},"content":"    protected String to;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MatchaRRR"},"content":"    public Event(String taskName, boolean isMarked, String from, String to) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MatchaRRR"},"content":"        super(taskName, isMarked);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MatchaRRR"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MatchaRRR"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MatchaRRR"},"content":"    public String getFrom() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MatchaRRR"},"content":"        return from;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MatchaRRR"},"content":"    public String getTo() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MatchaRRR"},"content":"        return to;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MatchaRRR"},"content":"    public void setFrom(String from) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MatchaRRR"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MatchaRRR"},"content":"    public void setTo(String to) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MatchaRRR"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MatchaRRR"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MatchaRRR"},"content":"     * The string includes the \"[E]\" , followed by the inherited task\u0027s string representation and the event\u0027s time range.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MatchaRRR"},"content":"     * @return A string that shows the task type, its completion status, name, and event time range.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MatchaRRR"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MatchaRRR"},"content":"    public String toString() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MatchaRRR"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MatchaRRR"},"content":"     * Converts the event task to a format suitable for saving to a file.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"MatchaRRR"},"content":"     * The format is \"E | isMarked | taskName | from | to\".","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"MatchaRRR"},"content":"     * @return A string formatted for file storage of the event task.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"MatchaRRR"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"MatchaRRR"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"MatchaRRR"},"content":"        return \"E | \" + (isMarked()? \"1\":\"0\") + \" | \" + getTaskName() + \" | \" + getFrom() + \" | \" + getTo();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"MatchaRRR"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"MatchaRRR":51}},{"path":"src/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MatchaRRR"},"content":"package task;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MatchaRRR"},"content":"/**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MatchaRRR"},"content":" * The Task class represents a general task with a name and completion status.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MatchaRRR"},"content":" * It is designed to be extended by specific task types (e.g., Todo, Deadline, Event).","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MatchaRRR"},"content":" */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MatchaRRR"},"content":"public abstract class Task{","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MatchaRRR"},"content":"    private String taskName;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MatchaRRR"},"content":"    private boolean isMarked;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MatchaRRR"},"content":"    public Task() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MatchaRRR"},"content":"        this.taskName \u003d \"\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MatchaRRR"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MatchaRRR"},"content":"    public Task(String taskName, boolean isMarked) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MatchaRRR"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MatchaRRR"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MatchaRRR"},"content":"    public String getTaskName() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MatchaRRR"},"content":"        return taskName;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MatchaRRR"},"content":"    public boolean isMarked() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MatchaRRR"},"content":"        return isMarked;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MatchaRRR"},"content":"    public void setTaskName(String taskName) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MatchaRRR"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MatchaRRR"},"content":"    public void setMarked(boolean isMarked) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MatchaRRR"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MatchaRRR"},"content":"     * Returns a string representation of the task, indicating whether it is completed or not, followed by the task name.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MatchaRRR"},"content":"     * @return A string that shows the task\u0027s completion status and name.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MatchaRRR"},"content":"    @Override","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MatchaRRR"},"content":"    public String toString(){","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MatchaRRR"},"content":"        return \"[\" + (isMarked ? \"X\":\" \")  + \"] \" + taskName;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MatchaRRR"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"MatchaRRR"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"MatchaRRR":43}},{"path":"src/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MatchaRRR"},"content":"package task;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MatchaRRR"},"content":"/**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MatchaRRR"},"content":" * The Todo class represents a to-do task.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MatchaRRR"},"content":" * It extends the abstract Task class and provides implementations for formatting the task\u0027s display output and file-saving format.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MatchaRRR"},"content":" */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MatchaRRR"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MatchaRRR"},"content":"    public Todo(String taskName, boolean isMarked) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MatchaRRR"},"content":"        super(taskName, isMarked);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MatchaRRR"},"content":"     * Returns the string representation of the to-do task for display.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MatchaRRR"},"content":"     * The format includes \"[T]\", followed by the task\u0027s completion status and name.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MatchaRRR"},"content":"     * @return A string representing the to-do task for display.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MatchaRRR"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MatchaRRR"},"content":"    public String toString() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MatchaRRR"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MatchaRRR"},"content":"     * Converts the to-do task to a format suitable for saving to a file.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MatchaRRR"},"content":"     * The format is \"T | isMarked | taskName\".","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MatchaRRR"},"content":"     * @return A string formatted for file storage of the to-do task.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MatchaRRR"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MatchaRRR"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MatchaRRR"},"content":"        return \"T | \" + (isMarked()? \"1\":\"0\") + \" | \" + getTaskName();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MatchaRRR"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"MatchaRRR":34}},{"path":"src/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MatchaRRR"},"content":"package tasklist;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MatchaRRR"},"content":"import task.Task;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MatchaRRR"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MatchaRRR"},"content":"/**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MatchaRRR"},"content":" * The TaskList class manages a list of Task objects.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MatchaRRR"},"content":" * It provides methods to add, delete, and mark tasks,","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MatchaRRR"},"content":" * as well as retrieve the list and its size.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MatchaRRR"},"content":" */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MatchaRRR"},"content":"public class TaskList {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MatchaRRR"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MatchaRRR"},"content":"     * Constructor that initializes TaskList with a given list of tasks.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MatchaRRR"},"content":"     * @param list The initial list of tasks.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MatchaRRR"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MatchaRRR"},"content":"        this.list \u003d list;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MatchaRRR"},"content":"     * Default constructor that initializes an empty task list.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MatchaRRR"},"content":"    public TaskList(){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MatchaRRR"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MatchaRRR"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MatchaRRR"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MatchaRRR"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MatchaRRR"},"content":"        return list;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MatchaRRR"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MatchaRRR"},"content":"     * @return The size of the task list.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MatchaRRR"},"content":"    public int getListSize() {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"MatchaRRR"},"content":"        return list.size();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"MatchaRRR"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"MatchaRRR"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"MatchaRRR"},"content":"    public void addTask(Task task){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"MatchaRRR"},"content":"        list.add(task);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"MatchaRRR"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"MatchaRRR"},"content":"     * @param taskNumber The 1-based index of the task to be deleted.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"MatchaRRR"},"content":"    public void deleteTask(int taskNumber){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"MatchaRRR"},"content":"        list.remove(taskNumber - 1);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"MatchaRRR"},"content":"     * Marks or unmarks a task based on the provided boolean value.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"MatchaRRR"},"content":"     * @param taskNumber The 1-based index of the task to be marked.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"MatchaRRR"},"content":"     * @param isMarked If true, marks the task as done; otherwise, unmarks it.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"MatchaRRR"},"content":"    public void markTask(int taskNumber, boolean isMarked){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"MatchaRRR"},"content":"        list.get(taskNumber - 1).setMarked(isMarked);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"MatchaRRR"},"content":"}","lastModifiedDate":"2024-09-28","isFullCredit":false}],"authorContributionMap":{"MatchaRRR":75}},{"path":"src/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MatchaRRR"},"content":"package ui;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MatchaRRR"},"content":"import exception.IncompleteCommandException;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MatchaRRR"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MatchaRRR"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MatchaRRR"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MatchaRRR"},"content":"import static main.Sirius.*;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MatchaRRR"},"content":"/**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MatchaRRR"},"content":" * The Ui class handles all interactions with the user. It includes methods for displaying messages,","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MatchaRRR"},"content":" * reading input, and handling user errors and successes during the execution of commands.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MatchaRRR"},"content":" */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MatchaRRR"},"content":"public class Ui {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MatchaRRR"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MatchaRRR"},"content":"     * Constructor for Ui. Initializes the Scanner to take input from the console.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MatchaRRR"},"content":"    public Ui() {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MatchaRRR"},"content":"        scanner \u003d new Scanner(System.in); // stores the input of the user","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MatchaRRR"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Greeting messages \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MatchaRRR"},"content":"     * Prints the welcome message to the user.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MatchaRRR"},"content":"    public void sayHello(){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(WELCOME_MESSAGE);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MatchaRRR"},"content":"     * Prints the welcome message to the user.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MatchaRRR"},"content":"    public void sayGoodbye(){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(GOODBYE_MESSAGE);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MatchaRRR"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Success messages \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"MatchaRRR"},"content":"     * Displays an message when starting with a new task list.","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"MatchaRRR"},"content":"    public void showLoadingError(){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(CREATE_NEW_LIST_MESSAGE);","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"MatchaRRR"},"content":"     * Displays an error message when the task list file cannot be loaded.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"MatchaRRR"},"content":"    public void showSavingError(){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(SAVING_ERROR_MESSAGE);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"MatchaRRR"},"content":"     * Displays an error message when the user inputs an invalid task index.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"MatchaRRR"},"content":"    public void showIndexOutOfBoundError(){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(INDEX_BOUND_ERROR_MESSAGE);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"MatchaRRR"},"content":"     * Displays an error message when the user inputs an invalid number format.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"MatchaRRR"},"content":"    public void showNumberFormatError(){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(INDEX_FORMAT_ERROR_MESSAGE);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"MatchaRRR"},"content":"     * Displays an error message when the user provides an incomplete command missing the task name.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"MatchaRRR"},"content":"     * @param e The exception that contains the error message.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"MatchaRRR"},"content":"    public void showIncompleteCommandError(IncompleteCommandException e){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"MatchaRRR"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Success messages \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"MatchaRRR"},"content":"     * Displays a message when a task has been successfully added.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"MatchaRRR"},"content":"     * @param tasks The Object that contains the list of tasks.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"MatchaRRR"},"content":"     * @param size The size of the task list after adding the new task.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"MatchaRRR"},"content":"    public void showTaskAdded(TaskList tasks, int size){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(ADD_TASK_MESSAGE);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(tasks.getList().get(size-1).toString());","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"MatchaRRR"},"content":"     * Displays a message when a task has been successfully deleted.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"MatchaRRR"},"content":"     * @param tasks The Object that contains the list of tasks.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"MatchaRRR"},"content":"     * @param taskNumber The task number that was deleted.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"MatchaRRR"},"content":"    public void showTaskDeleted(TaskList tasks, int taskNumber){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(DELETE_TASK_MESSAGE);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(tasks.getList().get(taskNumber - 1).toString());","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"MatchaRRR"},"content":"     * Displays the current number of tasks in the list.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"MatchaRRR"},"content":"     * @param tasks The Object that contains the list of tasks.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"MatchaRRR"},"content":"    public void showCurrentSizeOfList(TaskList tasks){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(\"Now you have \" + tasks.getListSize() + \" tasks in the list.\");","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"MatchaRRR"},"content":"     * Displays a message when a task is successfully marked as done.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"MatchaRRR"},"content":"     * @param tasks The Object that contains the list of tasks.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"MatchaRRR"},"content":"     * @param taskNumber The task number that was marked.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"MatchaRRR"},"content":"    public void showTaskMarked(TaskList tasks, int taskNumber){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(MARK_TASK_MESSAGE);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(tasks.getList().get(taskNumber - 1).toString());","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"MatchaRRR"},"content":"     * Displays a message when a task is successfully unmarked.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"MatchaRRR"},"content":"     * @param tasks The Object that contains the list of tasks.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"MatchaRRR"},"content":"     * @param taskNumber The task number that was unmarked.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"MatchaRRR"},"content":"    public void showTaskUnmarked(TaskList tasks, int taskNumber){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(UNMARK_TASK_MESSAGE);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(tasks.getList().get(taskNumber - 1).toString());","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"MatchaRRR"},"content":"     * Displays all tasks in the task list.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"MatchaRRR"},"content":"     * @param tasks The Object that contains the list of tasks.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"MatchaRRR"},"content":"    public void showTaskListed(TaskList tasks){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(LIST_TASK_MESSAGE);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"MatchaRRR"},"content":"        for (int i \u003d 0; i \u003c tasks.getList().size(); i++) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"MatchaRRR"},"content":"            System.out.println(i + 1 + \". \" + tasks.getList().get(i).toString());","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"MatchaRRR"},"content":"        }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"MatchaRRR"},"content":"     * Searches for tasks in the task list that contain the specified keyword.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"MatchaRRR"},"content":"     * @param tasks The Object that contains the list of tasks.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"MatchaRRR"},"content":"     * @param keyWord The keyword to search for.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"MatchaRRR"},"content":"    public void showTaskFound(TaskList tasks, String keyWord) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"MatchaRRR"},"content":"        boolean found \u003d false;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"MatchaRRR"},"content":"        for (int i \u003d 0; i \u003c tasks.getList().size(); i++) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"MatchaRRR"},"content":"            String taskName \u003d tasks.getList().get(i).getTaskName();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"MatchaRRR"},"content":"            String[] components \u003d taskName.split(SPACE);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"MatchaRRR"},"content":"            if (Arrays.asList(components).contains(keyWord)) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"MatchaRRR"},"content":"                if (!found) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"MatchaRRR"},"content":"                    System.out.println(FIND_TASK_MESSAGE);  // Only the 1st find will print message","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"MatchaRRR"},"content":"                    found \u003d true;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"MatchaRRR"},"content":"                }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"MatchaRRR"},"content":"                System.out.println(i + 1 + \". \" + tasks.getList().get(i).toString());","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"MatchaRRR"},"content":"            }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"MatchaRRR"},"content":"        }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"MatchaRRR"},"content":"        if (!found) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"MatchaRRR"},"content":"            System.out.println(NOT_FIND_TASK_MESSAGE + keyWord);  // 如果没有找到匹配项，可以打印一个提示消息","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"MatchaRRR"},"content":"        }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"MatchaRRR"},"content":"     * Reads the next command input by the user.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"MatchaRRR"},"content":"     * @return The command entered by the user.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"MatchaRRR"},"content":"    public String readCommand(){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"MatchaRRR"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"MatchaRRR"},"content":"     * Prints a horizontal line separator to the console.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"MatchaRRR"},"content":"    public void showLine(){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"MatchaRRR"},"content":"     * Prints the specified message to the console.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"MatchaRRR"},"content":"     *","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"MatchaRRR"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"MatchaRRR"},"content":"    public void print(String message){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println(message);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"MatchaRRR"},"content":"    /**","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"MatchaRRR"},"content":"     * Prints an empty line to the console.","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"MatchaRRR"},"content":"     */","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"MatchaRRR"},"content":"    public void printEmptyLine(){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"MatchaRRR"},"content":"        System.out.println();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"MatchaRRR"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"MatchaRRR"},"content":"}","lastModifiedDate":"2024-09-28","isFullCredit":false}],"authorContributionMap":{"MatchaRRR":225}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"MatchaRRR"},"content":"todo FU Yixuan: Answer CS2113 tutorial questions","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MatchaRRR"},"content":"deadline weekly CS2113 quiz/ Monday 9pm","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MatchaRRR"},"content":"list","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MatchaRRR"},"content":"event CS2113 lecture / from Friday 4 / to 6 pm","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MatchaRRR"},"content":"mark 1","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MatchaRRR"},"content":"list","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MatchaRRR"},"content":"bye","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"MatchaRRR":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MatchaRRR"},"content":"javac  -cp .\\src\\main\\java -Xlint:none -d ..\\bin .\\src\\main\\java\\*.java","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MatchaRRR"},"content":"REM Check if compilation succeeded","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MatchaRRR"},"content":"echo Compilation succeeded","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MatchaRRR"},"content":"java -classpath ..\\bin Sirius \u003c .\\text-ui-test\\input.txt \u003e .\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MatchaRRR"},"content":"REM Remove trailing blank lines from ACTUAL.TXT","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MatchaRRR"},"content":"powershell -Command \"Get-Content .\\text-ui-test\\ACTUAL.TXT | Where-Object { $_.Trim() -ne \u0027\u0027 } | Set-Content .\\text-ui-test\\ACTUAL_NO_TRAILING_BLANKS.TXT\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MatchaRRR"},"content":"powershell -Command \"Get-Content .\\text-ui-test\\EXPECTED.txt | Where-Object { $_.Trim() -ne \u0027\u0027 } | Set-Content .\\text-ui-test\\EXPECTED_NO_TRAILING_BLANKS.TXT\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MatchaRRR"},"content":"REM Check if ACTUAL.TXT was created","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MatchaRRR"},"content":"if exist ACTUAL.TXT (","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MatchaRRR"},"content":"    echo ACTUAL.TXT created successfully","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MatchaRRR"},"content":") else (","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MatchaRRR"},"content":"    echo Failed to create ACTUAL.TXT","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MatchaRRR"},"content":")","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MatchaRRR"},"content":"FC .\\text-ui-test\\ACTUAL_NO_TRAILING_BLANKS.TXT .\\text-ui-test\\EXPECTED_NO_TRAILING_BLANKS.TXT","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MatchaRRR"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MatchaRRR"},"content":"    echo Test result: FAILED","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MatchaRRR"},"content":") ELSE (","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MatchaRRR"},"content":"    echo Test result: PASSED","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MatchaRRR"},"content":")","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MatchaRRR"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"MatchaRRR"},"content":"REM Clean up temporary files","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MatchaRRR"},"content":"del .\\text-ui-test\\ACTUAL_NO_TRAILING_BLANKS.TXT","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"MatchaRRR"},"content":"del .\\text-ui-test\\EXPECTED_NO_TRAILING_BLANKS.TXT","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"MatchaRRR":27,"-":18}}]
