[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Gao327"},"content":"# **Wildpeace User Guide**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Gao327"},"content":"## **Introduction**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Gao327"},"content":"Wildpeace is a command-line interface (CLI)-based task management application designed to help users organize their daily tasks efficiently. It allows for the creation of tasks such as todos, deadlines, and events. Wildpeace supports operations like adding, deleting, marking, unmarking, and listing tasks. It also saves tasks automatically and loads them upon restarting the application.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Gao327"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Gao327"},"content":"## **Quick Start**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Gao327"},"content":"1. Ensure you have Java `17` or above installed on your computer.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Gao327"},"content":"2. Download the latest `.jar` file from the Wildpeace repository.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Gao327"},"content":"3. Open a terminal and navigate to the folder where the `.jar` file is located.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Gao327"},"content":"4. Run the application using the command:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Gao327"},"content":"   java -jar wildpeace.jar","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Gao327"},"content":"5. You can start adding and managing tasks through the following commands.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Gao327"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Gao327"},"content":"## **Features**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Gao327"},"content":"### **1. Adding Tasks**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Gao327"},"content":"Wildpeace supports three types of tasks: `todo`, `deadline`, and `event`.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Gao327"},"content":"#### Adding a Todo Task","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Gao327"},"content":"You can add a simple todo task without any specific date or time associated with it.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Gao327"},"content":"- **Command**: `add todo DESCRIPTION`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Gao327"},"content":"- **Example**:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Gao327"},"content":"   add todo Finish reading book","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Gao327"},"content":"- **Expected Outcome**: A todo task will be added to the task list.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Gao327"},"content":"   Added: [T][ ] Finish reading book","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Gao327"},"content":"#### Adding a Deadline Task","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Gao327"},"content":"For tasks that need to be completed by a certain date, you can add a deadline.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Gao327"},"content":"- **Command**: `add deadline DESCRIPTION /by DEADLINE`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Gao327"},"content":"- **Example**:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Gao327"},"content":"   add deadline Submit assignment /by 2024-12-01","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Gao327"},"content":"- **Expected Outcome**: A deadline task will be added with the specified deadline.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Gao327"},"content":"   Added: [D][ ] Submit assignment (by: 2024-12-01)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Gao327"},"content":"#### Adding an Event Task","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Gao327"},"content":"For events that occur at a specific time, use the event task type.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Gao327"},"content":"- **Command**: `add event DESCRIPTION /at EVENT_TIME`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Gao327"},"content":"- **Example**:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Gao327"},"content":"   add event Project presentation /at 2024-10-05 14:00","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Gao327"},"content":"- **Expected Outcome**: An event task will be added with the event time specified.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Gao327"},"content":"   Added: [E][ ] Project presentation (at: 2024-10-05 14:00)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Gao327"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Gao327"},"content":"### **2. Listing All Tasks**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Gao327"},"content":"You can view all the tasks in your task list, including todos, deadlines, and events.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Gao327"},"content":"- **Command**: `list`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Gao327"},"content":"- **Example**:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Gao327"},"content":"   list","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Gao327"},"content":"- **Expected Outcome**: Displays all the tasks along with their statuses.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Gao327"},"content":"   1. [T][ ] Finish reading book","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Gao327"},"content":"   2. [D][ ] Submit assignment (by: 2024-12-01)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Gao327"},"content":"   3. [E][ ] Project presentation (at: 2024-10-05 14:00)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Gao327"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Gao327"},"content":"### **3. Marking Tasks as Completed**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Gao327"},"content":"You can mark tasks as completed, which changes their status in the list.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Gao327"},"content":"- **Command**: `mark INDEX`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Gao327"},"content":"- **Example**:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Gao327"},"content":"   mark 1","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Gao327"},"content":"- **Expected Outcome**: The task at the specified index will be marked as done.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Gao327"},"content":"   Marked as done: [T][X] Finish reading book","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Gao327"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Gao327"},"content":"### **4. Unmarking Tasks**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Gao327"},"content":"If you mistakenly mark a task as done, you can unmark it.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Gao327"},"content":"- **Command**: `unmark INDEX`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Gao327"},"content":"- **Example**:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Gao327"},"content":"   unmark 1","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Gao327"},"content":"- **Expected Outcome**: The task at the specified index will be unmarked as done.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Gao327"},"content":"   Unmarked: [T][ ] Finish reading book","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Gao327"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Gao327"},"content":"### **5. Deleting Tasks**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Gao327"},"content":"You can remove tasks from your list.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Gao327"},"content":"- **Command**: `delete INDEX`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Gao327"},"content":"- **Example**:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Gao327"},"content":"   delete 1","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Gao327"},"content":"- **Expected Outcome**: The task at the specified index will be deleted.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Gao327"},"content":"   Removed: [T][ ] Finish reading book","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Gao327"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Gao327"},"content":"### **6. Exiting the Application**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Gao327"},"content":"You can exit the application by typing the following command:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Gao327"},"content":"- **Command**: `exit`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Gao327"},"content":"- **Example**:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Gao327"},"content":"   exit","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Gao327"},"content":"   ```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Gao327"},"content":"- **Expected Outcome**: The application will close.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Gao327"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Gao327"},"content":"### **7. Saving Data**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Gao327"},"content":"Wildpeace automatically saves your tasks to a local `tasks.json` file after any modification. You do not need to manually save the tasks. When you restart the application, your tasks will be loaded from this file.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Gao327"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Gao327"},"content":"### **8. Editing the Data File**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Gao327"},"content":"Advanced users can directly modify the `tasks.json` file, which is stored in the application\u0027s directory. This file is formatted as JSON, so be cautious when editing it. Incorrect formatting may cause the application to fail when loading the tasks.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Gao327"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Gao327"},"content":"## **FAQ**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Gao327"},"content":"### **Q:** What happens if I make an invalid command?","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Gao327"},"content":"**A:** Wildpeace will show an error message to indicate that the command was invalid, and will prompt you to try again.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Gao327"},"content":"### **Q:** How do I transfer my tasks to another computer?","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Gao327"},"content":"**A:** You can copy the `tasks.json` file from your current computer to another. Place the file in the same directory as the `.jar` file on the new computer, and Wildpeace will load the tasks upon starting.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Gao327"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Gao327"},"content":"## **Command Summary**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Gao327"},"content":"| **Command**         | **Format**                                         | **Example**                                                |","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Gao327"},"content":"|---------------------|----------------------------------------------------|------------------------------------------------------------|","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Gao327"},"content":"| **Add Todo**        | `add todo DESCRIPTION`                             | `add todo Finish reading book`                              |","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Gao327"},"content":"| **Add Deadline**    | `add deadline DESCRIPTION /by DEADLINE`            | `add deadline Submit assignment /by 2024-12-01`             |","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Gao327"},"content":"| **Add Event**       | `add event DESCRIPTION /at EVENT_TIME`             | `add event Project presentation /at 2024-10-05 14:00`       |","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Gao327"},"content":"| **List Tasks**      | `list`                                             |                                                            |","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Gao327"},"content":"| **Mark Task**       | `mark INDEX`                                       | `mark 1`                                                   |","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Gao327"},"content":"| **Unmark Task**     | `unmark INDEX`                                     | `unmark 1`                                                 |","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Gao327"},"content":"| **Delete Task**     | `delete INDEX`                                     | `delete 1`                                                 |","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Gao327"},"content":"| **Exit Program**    | `exit`                                             |                                                            |","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Gao327"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Gao327"},"content":"This user guide outlines the core functionality of Wildpeace, giving users clear instructions on how to manage their tasks through the command line. Let me know if you need additional sections or adjustments!","lastModifiedDate":"2024-10-03","isFullCredit":false}],"authorContributionMap":{"-":24,"Gao327":162}},{"path":"src/main/java/ArrayListToJson.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gao327"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Gao327"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Gao327"},"content":"import java.io.IOException;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Gao327"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Gao327"},"content":"public class ArrayListToJson {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Gao327"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Gao327"},"content":"        // Create an ArrayList","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Gao327"},"content":"        ArrayList\u003cString\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Gao327"},"content":"        list.add(\"item1\");","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Gao327"},"content":"        list.add(\"item2\");","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Gao327"},"content":"        list.add(\"item3\");","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Gao327"},"content":"        // Create a Gson instance","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Gao327"},"content":"        Gson gson \u003d new Gson();","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Gao327"},"content":"        // Serialize the ArrayList to JSON","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Gao327"},"content":"        String json \u003d gson.toJson(list);","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Gao327"},"content":"        // Print the JSON string (optional)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Gao327"},"content":"        System.out.println(json);","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Gao327"},"content":"        // Store the JSON locally in a file","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Gao327"},"content":"        try (FileWriter writer \u003d new FileWriter(\"list.json\")) {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Gao327"},"content":"            writer.write(json);","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Gao327"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Gao327"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Gao327"},"content":"}","lastModifiedDate":"2024-10-03","isFullCredit":false}],"authorContributionMap":{"Gao327":30}},{"path":"src/main/java/Wildpeace.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gao327"},"content":"import initializer.Initializer;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Gao327"},"content":"import wildpeace.exceptions.EmptyCommandException;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Gao327"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Gao327"},"content":"public class Wildpeace {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Gao327"},"content":"    public static final String LOGO \u003d \"__        ___ _     _                           \\n\" +","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Gao327"},"content":"            \"\\\\ \\\\      / (_) | __| |_ __   ___  __ _  ___ ___ \\n\" +","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Gao327"},"content":"            \" \\\\ \\\\ /\\\\ / /| | |/ _` | \u0027_ \\\\ / _ \\\\/ _` |/ __/ _ \\\\\\n\" +","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Gao327"},"content":"            \"  \\\\ V  V / | | | (_| | |_) |  __/ (_| | (_|  __/\\n\" +","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Gao327"},"content":"            \"   \\\\_/\\\\_/  |_|_|\\\\__,_| .__/ \\\\___|\\\\__,_|\\\\___\\\\___|\\n\" +","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Gao327"},"content":"            \"                     |_|                        \";","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Gao327"},"content":"    public static void main(String[] args) throws EmptyCommandException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Gao327"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Gao327"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Gao327"},"content":"        Initializer.initialise(scanner);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Gao327"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"Gao327":21}},{"path":"src/main/java/initializer/Initializer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gao327"},"content":"package initializer;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Gao327"},"content":"import wildpeace.exceptions.EmptyCommandException;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Gao327"},"content":"import wildpeace.task.TaskManager;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Gao327"},"content":"import wildpeace.echo.Echo;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Gao327"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Gao327"},"content":"import static java.lang.System.exit;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Gao327"},"content":"public class Initializer {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Gao327"},"content":"    public static void initialise(Scanner scanner) throws EmptyCommandException {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Gao327"},"content":"        System.out.println(\"What can I do for you? Enter \u00271\u0027 for echo, \u00272\u0027 for storing your plan, \u00270\u0027 to exit.\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Gao327"},"content":"        Scanner initialInputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Gao327"},"content":"        String initialInput \u003d initialInputScanner.nextLine();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Gao327"},"content":"        switch (initialInput) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Gao327"},"content":"        case \"0\":","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Gao327"},"content":"            exit(0);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Gao327"},"content":"        case \"1\":","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Gao327"},"content":"            Echo.echo(scanner);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Gao327"},"content":"            break;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Gao327"},"content":"        case \"2\":","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Gao327"},"content":"            TaskManager taskManager \u003d new TaskManager();  // Renamed DataStorage to TaskManager","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Gao327"},"content":"            taskManager.run();  // Call run method instead of storeData","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Gao327"},"content":"            break;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Gao327"},"content":"        default:","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Gao327"},"content":"            System.out.println(\"Invalid input\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Gao327"},"content":"            initialise(scanner);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Gao327"},"content":"            break;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Gao327"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"Gao327":32}},{"path":"src/main/java/wildpeace/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gao327"},"content":"package wildpeace.Storage;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Gao327"},"content":"import wildpeace.task.Task;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Gao327"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Gao327"},"content":"import com.google.gson.reflect.TypeToken;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Gao327"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Gao327"},"content":"import java.io.IOException;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Gao327"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Gao327"},"content":"import java.lang.reflect.Type;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Gao327"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Gao327"},"content":"/**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Gao327"},"content":" * Handles the loading and saving of tasks to and from a file using JSON format.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Gao327"},"content":" * The tasks are saved to a file named \"tasks.json\" and can be loaded from it when needed.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Gao327"},"content":" */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Gao327"},"content":"public class Storage {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Gao327"},"content":"    private static final String FILE_PATH \u003d \"tasks.json\";","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Gao327"},"content":"    private Gson gson;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Gao327"},"content":"     * Constructs a Storage object and initializes the Gson instance for JSON processing.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Gao327"},"content":"    public Storage() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Gao327"},"content":"        this.gson \u003d new Gson();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Gao327"},"content":"     * Loads tasks from the JSON file \"tasks.json\".","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Gao327"},"content":"     * If the file is not found or cannot be read, it returns an empty task list.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Gao327"},"content":"     * @return An ArrayList of tasks loaded from the file, or an empty list if no tasks are found.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Gao327"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Gao327"},"content":"        try (FileReader reader \u003d new FileReader(FILE_PATH)) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Gao327"},"content":"            Type listType \u003d new TypeToken\u003cArrayList\u003cTask\u003e\u003e() {}.getType();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Gao327"},"content":"            ArrayList\u003cTask\u003e tasks \u003d gson.fromJson(reader, listType);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Gao327"},"content":"            if (tasks !\u003d null) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Gao327"},"content":"                return tasks;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Gao327"},"content":"            }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Gao327"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Gao327"},"content":"            System.out.println(\"No existing tasks found. Starting fresh.\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Gao327"},"content":"        return new ArrayList\u003c\u003e();  // Return an empty list if no tasks are found","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Gao327"},"content":"     * Saves the given list of tasks to the JSON file \"tasks.json\".","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Gao327"},"content":"     * If the file cannot be written to, an IOException will be printed.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Gao327"},"content":"     * @param tasks The ArrayList of tasks to be saved.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Gao327"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Gao327"},"content":"        try (FileWriter writer \u003d new FileWriter(FILE_PATH)) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Gao327"},"content":"            gson.toJson(tasks, writer);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Gao327"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Gao327"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Gao327"},"content":"}","lastModifiedDate":"2024-10-01","isFullCredit":false}],"authorContributionMap":{"Gao327":59}},{"path":"src/main/java/wildpeace/echo/Echo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gao327"},"content":"package wildpeace.echo;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Gao327"},"content":"import initializer.Initializer;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Gao327"},"content":"import wildpeace.exceptions.EmptyCommandException;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Gao327"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Gao327"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Gao327"},"content":" * Echoes user input back to the console. Continues to echo until the user inputs \"bye\".","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Gao327"},"content":" * Once \"bye\" is input, it will exit the loop and reinitialize the program.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Gao327"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Gao327"},"content":"public class Echo {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Gao327"},"content":"     * Repeatedly echoes user input back to the console until the user types \"bye\".","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Gao327"},"content":"     * After exiting, it reinitializes the program by calling {@link Initializer#initialise(Scanner)}.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Gao327"},"content":"     * @param scanner The scanner used to read user input.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Gao327"},"content":"     * @throws EmptyCommandException If there is an issue during reinitialization.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Gao327"},"content":"    public static void echo(Scanner scanner) throws EmptyCommandException {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Gao327"},"content":"        String line;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Gao327"},"content":"        boolean exit \u003d false;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Gao327"},"content":"        while (!exit) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Gao327"},"content":"            line \u003d scanner.nextLine();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Gao327"},"content":"            if (line.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Gao327"},"content":"                exit \u003d true;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Gao327"},"content":"            }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Gao327"},"content":"            System.out.println(line);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Gao327"},"content":"        Initializer.initialise(scanner);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Gao327"},"content":"}","lastModifiedDate":"2024-10-02","isFullCredit":false}],"authorContributionMap":{"Gao327":32}},{"path":"src/main/java/wildpeace/exceptions/EmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gao327"},"content":"package wildpeace.exceptions;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Gao327"},"content":"public class EmptyCommandException extends Exception{","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Gao327"},"content":"    public EmptyCommandException(String message){","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Gao327"},"content":"        super(message);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Gao327"},"content":"}","lastModifiedDate":"2024-09-11","isFullCredit":false}],"authorContributionMap":{"Gao327":6}},{"path":"src/main/java/wildpeace/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gao327"},"content":"package wildpeace.exceptions;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Gao327"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Gao327"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Gao327"},"content":"        super(message);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Gao327"},"content":"}","lastModifiedDate":"2024-09-18","isFullCredit":false}],"authorContributionMap":{"Gao327":7}},{"path":"src/main/java/wildpeace/task/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gao327"},"content":"package wildpeace.task;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Gao327"},"content":"import wildpeace.exceptions.EmptyCommandException;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Gao327"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Gao327"},"content":" * Parses user input into commands and arguments. Responsible for splitting user input","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Gao327"},"content":" * into command and arguments and handling empty input cases.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Gao327"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Gao327"},"content":"public class Parser {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Gao327"},"content":"     * Parses the user\u0027s input into command and argument components.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Gao327"},"content":"     * The input is split into a command and its arguments. If the input is empty,","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Gao327"},"content":"     * an exception is thrown.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Gao327"},"content":"     * @param input The user\u0027s input string.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Gao327"},"content":"     * @return A string array where the first element is the command and the second is the argument (if any).","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Gao327"},"content":"     * @throws EmptyCommandException If the input is empty or consists of only whitespace.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Gao327"},"content":"    public String[] parse(String input) throws EmptyCommandException {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Gao327"},"content":"        String trimmedInput \u003d input.trim();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Gao327"},"content":"        if (trimmedInput.isEmpty()) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Gao327"},"content":"            throw new EmptyCommandException(\"Input cannot be empty.\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Gao327"},"content":"        return trimmedInput.split(\"\\\\s+\", 2);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Gao327"},"content":"     * Extracts the command from the parsed input.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Gao327"},"content":"     * The command is the first word of the user\u0027s input.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Gao327"},"content":"     * @param parsedInput The parsed input array (result from the parse method).","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Gao327"},"content":"     * @return The command in lowercase form.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Gao327"},"content":"    public String getCommand(String[] parsedInput) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Gao327"},"content":"        return parsedInput[0].toLowerCase();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Gao327"},"content":"     * Extracts the arguments from the parsed input.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Gao327"},"content":"     * The arguments are the part of the input that follows the command.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Gao327"},"content":"     * @param parsedInput The parsed input array (result from the parse method).","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Gao327"},"content":"     * @return The arguments as a string, or an empty string if no arguments were provided.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Gao327"},"content":"    public String getArguments(String[] parsedInput) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Gao327"},"content":"        return parsedInput.length \u003e 1 ? parsedInput[1] : \"\";","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Gao327"},"content":"}","lastModifiedDate":"2024-10-01","isFullCredit":false}],"authorContributionMap":{"Gao327":49}},{"path":"src/main/java/wildpeace/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gao327"},"content":"package wildpeace.task;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Gao327"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Gao327"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Gao327"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Gao327"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Gao327"},"content":"/**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Gao327"},"content":" * Represents a task with a description, a type (TODO, DEADLINE, or EVENT),","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Gao327"},"content":" * and an optional deadline. Each task can be marked or unmarked as completed.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Gao327"},"content":" */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Gao327"},"content":"public class Task {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Gao327"},"content":"    private String description;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Gao327"},"content":"    private String deadline;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Gao327"},"content":"    private final TaskType taskType;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Gao327"},"content":"    private MarkStatus markStatus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Gao327"},"content":"     * Represents the type of a task.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Gao327"},"content":"     * Can be TODO, DEADLINE, or EVENT.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Gao327"},"content":"    public enum TaskType {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Gao327"},"content":"        TODO, DEADLINE, EVENT","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Gao327"},"content":"     * Represents the mark status of a task.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Gao327"},"content":"     * Can be MARKED (completed) or UNMARKED (not completed).","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Gao327"},"content":"    public enum MarkStatus {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Gao327"},"content":"        MARKED, UNMARKED","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Gao327"},"content":"     * Constructs a Task object with a description and a type.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Gao327"},"content":"     * The task is initialized as unmarked by default.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Gao327"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Gao327"},"content":"     * @param taskType    The type of the task (TODO, DEADLINE, or EVENT).","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Gao327"},"content":"    public Task(String description, TaskType taskType) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Gao327"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Gao327"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Gao327"},"content":"        this.markStatus \u003d MarkStatus.UNMARKED; // default status","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Gao327"},"content":"     * Constructs a Task object with a description, a deadline, and a type.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Gao327"},"content":"     * The task is initialized as unmarked by default.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Gao327"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Gao327"},"content":"     * @param deadline    The deadline of the task (applicable to DEADLINE tasks).","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Gao327"},"content":"     * @param taskType    The type of the task (TODO, DEADLINE, or EVENT).","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Gao327"},"content":"    public Task(String description, String deadline, TaskType taskType) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Gao327"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Gao327"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Gao327"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Gao327"},"content":"        this.markStatus \u003d MarkStatus.UNMARKED; // default status","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Gao327"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Gao327"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Gao327"},"content":"    public String getDescription() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Gao327"},"content":"        return description;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Gao327"},"content":"     * Sets the description of the task.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Gao327"},"content":"     * @param description The new description of the task.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Gao327"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Gao327"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Gao327"},"content":"     * Returns the deadline of the task.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Gao327"},"content":"     * @return The deadline of the task, or null if not applicable.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Gao327"},"content":"    public String getDeadline() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Gao327"},"content":"        return deadline;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Gao327"},"content":"     * Sets the deadline of the task.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Gao327"},"content":"     * @param deadline The new deadline of the task.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Gao327"},"content":"    public void setDeadline(String deadline) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Gao327"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Gao327"},"content":"     * Returns the type of the task (TODO, DEADLINE, or EVENT).","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Gao327"},"content":"     * @return The type of the task.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Gao327"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Gao327"},"content":"        return taskType;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Gao327"},"content":"     * Returns the mark status of the task (MARKED or UNMARKED).","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Gao327"},"content":"     * @return The mark status of the task.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Gao327"},"content":"    public MarkStatus getMarkStatus() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Gao327"},"content":"        return markStatus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Gao327"},"content":"     * Marks the task as completed.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Gao327"},"content":"    public void mark() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Gao327"},"content":"        this.markStatus \u003d MarkStatus.MARKED;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Gao327"},"content":"     * Unmarks the task as not completed.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Gao327"},"content":"    public void unmark() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Gao327"},"content":"        this.markStatus \u003d MarkStatus.UNMARKED;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Gao327"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Gao327"},"content":"     * Includes the task type, mark status, description, and (if applicable) the deadline.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Gao327"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Gao327"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Gao327"},"content":"    public String toString() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Gao327"},"content":"        String markStr \u003d (markStatus \u003d\u003d MarkStatus.MARKED) ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Gao327"},"content":"        String taskTypeStr \u003d \"[\" + taskType.toString().charAt(0) + \"]\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Gao327"},"content":"        String deadlineStr \u003d \"\";","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Gao327"},"content":"        if (deadline !\u003d null \u0026\u0026 !deadline.isEmpty()) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Gao327"},"content":"            try {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Gao327"},"content":"                LocalDate ddl \u003d LocalDate.parse(deadline, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Gao327"},"content":"                deadlineStr \u003d \" (by: \" + ddl.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Gao327"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Gao327"},"content":"                deadlineStr \u003d \" (invalid deadline format: \" + deadline + \")\";","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Gao327"},"content":"            }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Gao327"},"content":"        return taskTypeStr + \" \" + markStr + \" \" + description + deadlineStr;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Gao327"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"Gao327":155}},{"path":"src/main/java/wildpeace/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gao327"},"content":"package wildpeace.task;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Gao327"},"content":"import wildpeace.exceptions.InvalidInputException;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Gao327"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Gao327"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Gao327"},"content":" * Manages a list of tasks. Provides operations to add, delete, mark, and unmark tasks.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Gao327"},"content":" * Also prevents duplicate tasks from being added and provides a method to list all tasks.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Gao327"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Gao327"},"content":"public class TaskList {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Gao327"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Gao327"},"content":"     * Constructs a TaskList object with an existing list of tasks.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Gao327"},"content":"     * @param tasks List of tasks to initialize the task list.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Gao327"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Gao327"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Gao327"},"content":"     * Adds a task to the list if it is not a duplicate.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Gao327"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Gao327"},"content":"     * @throws InvalidInputException If the task already exists in the task list.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Gao327"},"content":"    public void addTask(Task task) throws InvalidInputException {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Gao327"},"content":"        if (isDuplicate(task)) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Gao327"},"content":"            throw new InvalidInputException(\"This task already exists in your list: \" + task.getDescription());","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Gao327"},"content":"        tasks.add(task);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Gao327"},"content":"        System.out.println(\"Added: \" + task);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Gao327"},"content":"     * Checks if a task is a duplicate by comparing its description to the descriptions","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Gao327"},"content":"     * of tasks already in the list.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Gao327"},"content":"     * @param newTask The task to check for duplication.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Gao327"},"content":"     * @return true if the task already exists in the list, false otherwise.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Gao327"},"content":"    private boolean isDuplicate(Task newTask) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Gao327"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Gao327"},"content":"            if (task.getDescription().equalsIgnoreCase(newTask.getDescription())) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Gao327"},"content":"                return true;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Gao327"},"content":"            }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Gao327"},"content":"        return false;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Gao327"},"content":"     * Deletes a task at the specified index.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Gao327"},"content":"     * @param index The index of the task to be deleted (0-based).","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Gao327"},"content":"     * @throws InvalidInputException If the index is invalid or out of bounds.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Gao327"},"content":"    public void deleteTask(int index) throws InvalidInputException {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Gao327"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Gao327"},"content":"            Task removedTask \u003d tasks.remove(index);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Gao327"},"content":"            System.out.println(\"Removed: \" + removedTask);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Gao327"},"content":"        } else {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Gao327"},"content":"            throw new InvalidInputException(\"Invalid task number.\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Gao327"},"content":"     * Marks a task at the specified index as done.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Gao327"},"content":"     * @param index The index of the task to be marked (0-based).","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Gao327"},"content":"     * @throws InvalidInputException If the index is invalid or out of bounds.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Gao327"},"content":"    public void markTask(int index) throws InvalidInputException {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Gao327"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Gao327"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Gao327"},"content":"            task.mark();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Gao327"},"content":"            System.out.println(\"Marked as done: \" + task);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Gao327"},"content":"        } else {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Gao327"},"content":"            throw new InvalidInputException(\"Invalid task number.\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Gao327"},"content":"     * Unmarks a task at the specified index as not done.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Gao327"},"content":"     * @param index The index of the task to be unmarked (0-based).","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Gao327"},"content":"     * @throws InvalidInputException If the index is invalid or out of bounds.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Gao327"},"content":"    public void unmarkTask(int index) throws InvalidInputException {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Gao327"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Gao327"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Gao327"},"content":"            task.unmark();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Gao327"},"content":"            System.out.println(\"Unmarked: \" + task);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Gao327"},"content":"        } else {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Gao327"},"content":"            throw new InvalidInputException(\"Invalid task number.\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Gao327"},"content":"     * Lists all tasks in the task list, along with their indices.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Gao327"},"content":"     * If the list is empty, a message indicating that no tasks are found will be displayed.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Gao327"},"content":"    public void listTasks() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Gao327"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Gao327"},"content":"            System.out.println(\"No tasks found.\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Gao327"},"content":"        } else {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Gao327"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Gao327"},"content":"                System.out.println((i + 1) + \": \" + tasks.get(i));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Gao327"},"content":"            }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Gao327"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Gao327"},"content":"     * @return The ArrayList of tasks.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Gao327"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Gao327"},"content":"        return tasks;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Gao327"},"content":"}","lastModifiedDate":"2024-10-01","isFullCredit":false}],"authorContributionMap":{"Gao327":121}},{"path":"src/main/java/wildpeace/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gao327"},"content":"package wildpeace.task;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Gao327"},"content":"import wildpeace.exceptions.EmptyCommandException;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Gao327"},"content":"import wildpeace.exceptions.InvalidInputException;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Gao327"},"content":"import wildpeace.task.Parser;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Gao327"},"content":"import wildpeace.Storage.Storage;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Gao327"},"content":"import wildpeace.task.Ui;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Gao327"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Gao327"},"content":" * Manages the high-level routine of Ui, Storage, TaskList, and Parser classes.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Gao327"},"content":" * The routine involves showing the user guide, parsing user commands and arguments,","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Gao327"},"content":" * handling task operations (such as adding, marking, deleting tasks), and saving tasks.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Gao327"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Gao327"},"content":"public class TaskManager {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Gao327"},"content":"    private Ui ui;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Gao327"},"content":"    private Storage storage;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Gao327"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Gao327"},"content":"    private Parser parser;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Gao327"},"content":"     * Constructor for TaskManager class.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Gao327"},"content":"     * Initializes the user interface (Ui), task storage, task list, and command parser.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Gao327"},"content":"    public TaskManager() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Gao327"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Gao327"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Gao327"},"content":"        taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Gao327"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Gao327"},"content":"     * Starts the main loop for managing tasks.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Gao327"},"content":"     * The loop continually reads user commands, processes them, and updates the task list","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Gao327"},"content":"     * until the user exits the program by typing \"bye\".","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Gao327"},"content":"    public void run() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Gao327"},"content":"        ui.showGuide();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Gao327"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Gao327"},"content":"        while (!isExit) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Gao327"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Gao327"},"content":"            try {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Gao327"},"content":"                String[] parsedInput \u003d parser.parse(fullCommand);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Gao327"},"content":"                String command \u003d parser.getCommand(parsedInput);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Gao327"},"content":"                String arguments \u003d parser.getArguments(parsedInput);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Gao327"},"content":"                isExit \u003d handleCommand(command, arguments);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Gao327"},"content":"            } catch (EmptyCommandException e) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Gao327"},"content":"                ui.showError(\"The description cannot be empty: \" + e.getMessage());","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Gao327"},"content":"            }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Gao327"},"content":"        storage.save(taskList.getTasks());","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Gao327"},"content":"        ui.showLine(\"Goodbye!\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Gao327"},"content":"        ui.close();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Gao327"},"content":"     * Processes user commands and performs corresponding task operations.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Gao327"},"content":"     * This includes listing tasks, adding todo/deadline/event tasks, marking/unmarking tasks,","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Gao327"},"content":"     * and deleting tasks. The tasks are saved to the storage after each operation.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Gao327"},"content":"     * @param command   The command parsed from user input.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Gao327"},"content":"     * @param arguments The arguments associated with the command.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Gao327"},"content":"     * @return true if the user chooses to exit the program, false otherwise.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Gao327"},"content":"    private boolean handleCommand(String command, String arguments) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Gao327"},"content":"        try {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Gao327"},"content":"            switch (command) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Gao327"},"content":"            case \"list\":","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Gao327"},"content":"                taskList.listTasks();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Gao327"},"content":"                break;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Gao327"},"content":"            case \"todo\":","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Gao327"},"content":"                if (arguments.isEmpty()) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Gao327"},"content":"                    throw new EmptyCommandException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Gao327"},"content":"                }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Gao327"},"content":"                taskList.addTask(new Task(arguments, Task.TaskType.TODO));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Gao327"},"content":"                storage.save(taskList.getTasks());","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Gao327"},"content":"                break;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Gao327"},"content":"            case \"deadline\":","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Gao327"},"content":"                if (!arguments.contains(\"/by\")) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Gao327"},"content":"                    throw new InvalidInputException(\"Deadline tasks must include \u0027/by \u003cdeadline\u003e\u0027.\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Gao327"},"content":"                }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Gao327"},"content":"                String[] deadlineParts \u003d arguments.split(\"/by\", 2);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Gao327"},"content":"                taskList.addTask(new Task(deadlineParts[0].trim(), deadlineParts[1].trim(), Task.TaskType.DEADLINE));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Gao327"},"content":"                storage.save(taskList.getTasks());","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Gao327"},"content":"                break;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Gao327"},"content":"            case \"event\":","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Gao327"},"content":"                if (!arguments.contains(\"/at\")) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Gao327"},"content":"                    throw new InvalidInputException(\"Event tasks must include \u0027/at \u003cevent time\u003e\u0027.\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Gao327"},"content":"                }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Gao327"},"content":"                String[] eventParts \u003d arguments.split(\"/at\", 2);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Gao327"},"content":"                taskList.addTask(new Task(eventParts[0].trim(), eventParts[1].trim(), Task.TaskType.EVENT));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Gao327"},"content":"                storage.save(taskList.getTasks());","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Gao327"},"content":"                break;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Gao327"},"content":"            case \"mark\":","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Gao327"},"content":"                taskList.markTask(Integer.parseInt(arguments) - 1);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Gao327"},"content":"                storage.save(taskList.getTasks());","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Gao327"},"content":"                break;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Gao327"},"content":"            case \"unmark\":","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Gao327"},"content":"                taskList.unmarkTask(Integer.parseInt(arguments) - 1);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Gao327"},"content":"                storage.save(taskList.getTasks());","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Gao327"},"content":"                break;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Gao327"},"content":"            case \"delete\":","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Gao327"},"content":"                taskList.deleteTask(Integer.parseInt(arguments) - 1);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Gao327"},"content":"                storage.save(taskList.getTasks());","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Gao327"},"content":"                break;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Gao327"},"content":"            case \"bye\":","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Gao327"},"content":"                return true;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Gao327"},"content":"            case \"q\":","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Gao327"},"content":"                ui.showGuide();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Gao327"},"content":"                break;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Gao327"},"content":"            default:","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Gao327"},"content":"                ui.showError(\"Unknown command.\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Gao327"},"content":"            }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Gao327"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Gao327"},"content":"            ui.showError(\"Invalid input: \" + e.getMessage());","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Gao327"},"content":"        } catch (EmptyCommandException e) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Gao327"},"content":"            ui.showError(\"Empty command: \" + e.getMessage());","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Gao327"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Gao327"},"content":"            ui.showError(\"Please enter a valid number for the task index.\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Gao327"},"content":"        return false;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Gao327"},"content":"}","lastModifiedDate":"2024-10-01","isFullCredit":false}],"authorContributionMap":{"Gao327":124}},{"path":"src/main/java/wildpeace/task/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gao327"},"content":"package wildpeace.task;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Gao327"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Gao327"},"content":"/**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Gao327"},"content":" * Handles user interactions by reading input from the user and displaying messages.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Gao327"},"content":" * This class provides methods for reading commands, showing messages, showing error messages,","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Gao327"},"content":" * and providing instructions to the user.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Gao327"},"content":" */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Gao327"},"content":"public class Ui {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Gao327"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Gao327"},"content":"     * Constructs a Ui object and initializes a Scanner to read user input.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Gao327"},"content":"    public Ui() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Gao327"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Gao327"},"content":"     * Reads a command from the user input.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Gao327"},"content":"     * @return The command input by the user as a string.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Gao327"},"content":"    public String readCommand() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Gao327"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Gao327"},"content":"     * Displays a message to the user.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Gao327"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Gao327"},"content":"    public void showLine(String message) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Gao327"},"content":"        System.out.println(message);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Gao327"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Gao327"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Gao327"},"content":"    public void showError(String message) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Gao327"},"content":"        System.err.println(message);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Gao327"},"content":"     * Displays the user guide with instructions on how to input tasks and mark/unmark them.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Gao327"},"content":"    public void showGuide() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Gao327"},"content":"        System.out.println(\"List your plans in the following format:\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Gao327"},"content":"        System.out.println(\"todo/ deadline/ event + task, e.g., todo homework\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Gao327"},"content":"        System.out.println(\"You may also mark/unmark tasks by: mark/unmark + task\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Gao327"},"content":"        System.out.println(\"Return to tutorial by entering Q\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Gao327"},"content":"     * Closes the scanner used to read user input.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Gao327"},"content":"    public void close() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Gao327"},"content":"        scanner.close();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Gao327"},"content":"}","lastModifiedDate":"2024-10-01","isFullCredit":false}],"authorContributionMap":{"Gao327":63}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Gao327"},"content":"w","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Gao327"},"content":"2","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Gao327"},"content":"event play","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Gao327"},"content":"now till forever","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"Gao327":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Gao327"},"content":"java -classpath ..\\bin Wildpeace \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"Gao327":1}}]
