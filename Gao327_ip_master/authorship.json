[{"path":"src/main/java/Wildpeace.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gao327"},"content":"import initializer.Initializer;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Gao327"},"content":"import wildpeace.exceptions.EmptyCommandException;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Gao327"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Gao327"},"content":"public class Wildpeace {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Gao327"},"content":"    public static final String LOGO \u003d \"__        ___ _     _                           \\n\" +","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Gao327"},"content":"            \"\\\\ \\\\      / (_) | __| |_ __   ___  __ _  ___ ___ \\n\" +","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Gao327"},"content":"            \" \\\\ \\\\ /\\\\ / /| | |/ _` | \u0027_ \\\\ / _ \\\\/ _` |/ __/ _ \\\\\\n\" +","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Gao327"},"content":"            \"  \\\\ V  V / | | | (_| | |_) |  __/ (_| | (_|  __/\\n\" +","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Gao327"},"content":"            \"   \\\\_/\\\\_/  |_|_|\\\\__,_| .__/ \\\\___|\\\\__,_|\\\\___\\\\___|\\n\" +","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Gao327"},"content":"            \"                     |_|                        \";","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Gao327"},"content":"    public static void main(String[] args) throws EmptyCommandException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Gao327"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Gao327"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Gao327"},"content":"        Initializer.initialise(scanner);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Gao327"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"Gao327":21}},{"path":"src/main/java/initializer/Initializer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gao327"},"content":"package initializer;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Gao327"},"content":"import wildpeace.exceptions.EmptyCommandException;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Gao327"},"content":"import wildpeace.task.TaskManager;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Gao327"},"content":"import wildpeace.echo.Echo;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Gao327"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Gao327"},"content":"import static java.lang.System.exit;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Gao327"},"content":"public class Initializer {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Gao327"},"content":"    public static void initialise(Scanner scanner) throws EmptyCommandException {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Gao327"},"content":"        System.out.println(\"What can I do for you? Enter \u00271\u0027 for echo, \u00272\u0027 for storing your plan, \u00270\u0027 to exit.\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Gao327"},"content":"        Scanner initialInputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Gao327"},"content":"        String initialInput \u003d initialInputScanner.nextLine();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Gao327"},"content":"        switch (initialInput) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Gao327"},"content":"        case \"0\":","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Gao327"},"content":"            exit(0);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Gao327"},"content":"        case \"1\":","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Gao327"},"content":"            Echo.echo(scanner);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Gao327"},"content":"            break;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Gao327"},"content":"        case \"2\":","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Gao327"},"content":"            TaskManager taskManager \u003d new TaskManager();  // Renamed DataStorage to TaskManager","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Gao327"},"content":"            taskManager.run();  // Call run method instead of storeData","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Gao327"},"content":"            break;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Gao327"},"content":"        default:","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Gao327"},"content":"            System.out.println(\"Invalid input\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Gao327"},"content":"            initialise(scanner);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Gao327"},"content":"            break;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Gao327"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"Gao327":32}},{"path":"src/main/java/wildpeace/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gao327"},"content":"package wildpeace.Storage;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Gao327"},"content":"import wildpeace.task.Task;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Gao327"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Gao327"},"content":"import com.google.gson.reflect.TypeToken;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Gao327"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Gao327"},"content":"import java.io.IOException;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Gao327"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Gao327"},"content":"import java.lang.reflect.Type;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Gao327"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Gao327"},"content":"public class Storage {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Gao327"},"content":"    private static final String FILE_PATH \u003d \"tasks.json\";","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Gao327"},"content":"    private Gson gson;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Gao327"},"content":"    public Storage() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Gao327"},"content":"        this.gson \u003d new Gson();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Gao327"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Gao327"},"content":"        try (FileReader reader \u003d new FileReader(FILE_PATH)) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Gao327"},"content":"            Type listType \u003d new TypeToken\u003cArrayList\u003cTask\u003e\u003e() {}.getType();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Gao327"},"content":"            ArrayList\u003cTask\u003e tasks \u003d gson.fromJson(reader, listType);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Gao327"},"content":"            if (tasks !\u003d null) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Gao327"},"content":"                return tasks;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Gao327"},"content":"            }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Gao327"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Gao327"},"content":"            System.out.println(\"No existing tasks found. Starting fresh.\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Gao327"},"content":"        return new ArrayList\u003c\u003e();  // Return an empty list if no tasks are found","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Gao327"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Gao327"},"content":"        try (FileWriter writer \u003d new FileWriter(FILE_PATH)) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Gao327"},"content":"            gson.toJson(tasks, writer);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Gao327"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Gao327"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Gao327"},"content":"}","lastModifiedDate":"2024-10-01","isFullCredit":false}],"authorContributionMap":{"Gao327":40}},{"path":"src/main/java/wildpeace/echo/Echo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gao327"},"content":"package wildpeace.echo;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Gao327"},"content":"import initializer.Initializer;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Gao327"},"content":"import wildpeace.exceptions.EmptyCommandException;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Gao327"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Gao327"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Gao327"},"content":" * Echoes user input back to the console. Continues to echo until the user inputs \"bye\".","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Gao327"},"content":" * Once \"bye\" is input, it will exit the loop and reinitialize the program.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Gao327"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Gao327"},"content":"public class Echo {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Gao327"},"content":"     * Repeatedly echoes user input back to the console until the user types \"bye\".","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Gao327"},"content":"     * After exiting, it reinitializes the program by calling {@link Initializer#initialise(Scanner)}.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Gao327"},"content":"     * @param scanner The scanner used to read user input.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Gao327"},"content":"     * @throws EmptyCommandException If there is an issue during reinitialization.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Gao327"},"content":"    public static void echo(Scanner scanner) throws EmptyCommandException {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Gao327"},"content":"        String line;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Gao327"},"content":"        boolean exit \u003d false;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Gao327"},"content":"        while (!exit) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Gao327"},"content":"            line \u003d scanner.nextLine();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Gao327"},"content":"            if (line.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Gao327"},"content":"                exit \u003d true;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Gao327"},"content":"            }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Gao327"},"content":"            System.out.println(line);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Gao327"},"content":"        Initializer.initialise(scanner);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Gao327"},"content":"}","lastModifiedDate":"2024-10-02","isFullCredit":false}],"authorContributionMap":{"Gao327":32}},{"path":"src/main/java/wildpeace/exceptions/EmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gao327"},"content":"package wildpeace.exceptions;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Gao327"},"content":"public class EmptyCommandException extends Exception{","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Gao327"},"content":"    public EmptyCommandException(String message){","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Gao327"},"content":"        super(message);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Gao327"},"content":"}","lastModifiedDate":"2024-09-11","isFullCredit":false}],"authorContributionMap":{"Gao327":6}},{"path":"src/main/java/wildpeace/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gao327"},"content":"package wildpeace.exceptions;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Gao327"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Gao327"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Gao327"},"content":"        super(message);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Gao327"},"content":"}","lastModifiedDate":"2024-09-18","isFullCredit":false}],"authorContributionMap":{"Gao327":7}},{"path":"src/main/java/wildpeace/task/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gao327"},"content":"package wildpeace.task;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Gao327"},"content":"import wildpeace.exceptions.EmptyCommandException;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Gao327"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Gao327"},"content":" * Parses user input into commands and arguments. Responsible for splitting user input","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Gao327"},"content":" * into command and arguments and handling empty input cases.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Gao327"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Gao327"},"content":"public class Parser {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Gao327"},"content":"     * Parses the user\u0027s input into command and argument components.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Gao327"},"content":"     * The input is split into a command and its arguments. If the input is empty,","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Gao327"},"content":"     * an exception is thrown.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Gao327"},"content":"     * @param input The user\u0027s input string.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Gao327"},"content":"     * @return A string array where the first element is the command and the second is the argument (if any).","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Gao327"},"content":"     * @throws EmptyCommandException If the input is empty or consists of only whitespace.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Gao327"},"content":"    public String[] parse(String input) throws EmptyCommandException {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Gao327"},"content":"        String trimmedInput \u003d input.trim();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Gao327"},"content":"        if (trimmedInput.isEmpty()) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Gao327"},"content":"            throw new EmptyCommandException(\"Input cannot be empty.\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Gao327"},"content":"        return trimmedInput.split(\"\\\\s+\", 2);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Gao327"},"content":"     * Extracts the command from the parsed input.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Gao327"},"content":"     * The command is the first word of the user\u0027s input.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Gao327"},"content":"     * @param parsedInput The parsed input array (result from the parse method).","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Gao327"},"content":"     * @return The command in lowercase form.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Gao327"},"content":"    public String getCommand(String[] parsedInput) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Gao327"},"content":"        return parsedInput[0].toLowerCase();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Gao327"},"content":"     * Extracts the arguments from the parsed input.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Gao327"},"content":"     * The arguments are the part of the input that follows the command.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Gao327"},"content":"     * @param parsedInput The parsed input array (result from the parse method).","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Gao327"},"content":"     * @return The arguments as a string, or an empty string if no arguments were provided.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Gao327"},"content":"    public String getArguments(String[] parsedInput) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Gao327"},"content":"        return parsedInput.length \u003e 1 ? parsedInput[1] : \"\";","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Gao327"},"content":"}","lastModifiedDate":"2024-10-01","isFullCredit":false}],"authorContributionMap":{"Gao327":49}},{"path":"src/main/java/wildpeace/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gao327"},"content":"package wildpeace.task;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Gao327"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Gao327"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Gao327"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Gao327"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Gao327"},"content":"public class Task {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Gao327"},"content":"    private String description;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Gao327"},"content":"    private String deadline;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Gao327"},"content":"    private final TaskType taskType;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Gao327"},"content":"    private MarkStatus markStatus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Gao327"},"content":"    public enum TaskType {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Gao327"},"content":"        TODO, DEADLINE, EVENT","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Gao327"},"content":"    public enum MarkStatus {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Gao327"},"content":"        MARKED, UNMARKED","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Gao327"},"content":"    public Task(String description, TaskType taskType) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Gao327"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Gao327"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Gao327"},"content":"        this.markStatus \u003d MarkStatus.UNMARKED; // default status","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Gao327"},"content":"    public Task(String description, String deadline, TaskType taskType) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Gao327"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Gao327"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Gao327"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Gao327"},"content":"        this.markStatus \u003d MarkStatus.UNMARKED; // default status","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Gao327"},"content":"    public String getDescription() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Gao327"},"content":"        return description;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Gao327"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Gao327"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Gao327"},"content":"    public String getDeadline() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Gao327"},"content":"        return deadline;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Gao327"},"content":"    public void setDeadline(String deadline) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Gao327"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Gao327"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Gao327"},"content":"        return taskType;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Gao327"},"content":"    public MarkStatus getMarkStatus() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Gao327"},"content":"        return markStatus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Gao327"},"content":"    public void mark() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Gao327"},"content":"        this.markStatus \u003d MarkStatus.MARKED;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Gao327"},"content":"    public void unmark() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Gao327"},"content":"        this.markStatus \u003d MarkStatus.UNMARKED;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Gao327"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Gao327"},"content":"    public String toString() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Gao327"},"content":"        String markStr \u003d (markStatus \u003d\u003d MarkStatus.MARKED) ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Gao327"},"content":"        String taskTypeStr \u003d \"[\" + taskType.toString().charAt(0) + \"]\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Gao327"},"content":"        String deadlineStr \u003d \"\";","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Gao327"},"content":"        if (deadline !\u003d null \u0026\u0026 !deadline.isEmpty()) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Gao327"},"content":"            try {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Gao327"},"content":"                LocalDate ddl \u003d LocalDate.parse(deadline, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Gao327"},"content":"                deadlineStr \u003d \" (by: \" + ddl.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Gao327"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Gao327"},"content":"                deadlineStr \u003d \" (invalid deadline format: \" + deadline + \")\";","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Gao327"},"content":"            }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Gao327"},"content":"        return taskTypeStr + \" \" + markStr + \" \" + description + deadlineStr;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Gao327"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"Gao327":83}},{"path":"src/main/java/wildpeace/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gao327"},"content":"package wildpeace.task;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Gao327"},"content":"import wildpeace.exceptions.InvalidInputException;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Gao327"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Gao327"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Gao327"},"content":" * Manages a list of tasks. Provides operations to add, delete, mark, and unmark tasks.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Gao327"},"content":" * Also prevents duplicate tasks from being added and provides a method to list all tasks.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Gao327"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Gao327"},"content":"public class TaskList {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Gao327"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Gao327"},"content":"     * Constructs a TaskList object with an existing list of tasks.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Gao327"},"content":"     * @param tasks List of tasks to initialize the task list.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Gao327"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Gao327"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Gao327"},"content":"     * Adds a task to the list if it is not a duplicate.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Gao327"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Gao327"},"content":"     * @throws InvalidInputException If the task already exists in the task list.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Gao327"},"content":"    public void addTask(Task task) throws InvalidInputException {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Gao327"},"content":"        if (isDuplicate(task)) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Gao327"},"content":"            throw new InvalidInputException(\"This task already exists in your list: \" + task.getDescription());","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Gao327"},"content":"        tasks.add(task);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Gao327"},"content":"        System.out.println(\"Added: \" + task);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Gao327"},"content":"     * Checks if a task is a duplicate by comparing its description to the descriptions","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Gao327"},"content":"     * of tasks already in the list.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Gao327"},"content":"     * @param newTask The task to check for duplication.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Gao327"},"content":"     * @return true if the task already exists in the list, false otherwise.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Gao327"},"content":"    private boolean isDuplicate(Task newTask) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Gao327"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Gao327"},"content":"            if (task.getDescription().equalsIgnoreCase(newTask.getDescription())) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Gao327"},"content":"                return true;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Gao327"},"content":"            }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Gao327"},"content":"        return false;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Gao327"},"content":"     * Deletes a task at the specified index.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Gao327"},"content":"     * @param index The index of the task to be deleted (0-based).","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Gao327"},"content":"     * @throws InvalidInputException If the index is invalid or out of bounds.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Gao327"},"content":"    public void deleteTask(int index) throws InvalidInputException {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Gao327"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Gao327"},"content":"            Task removedTask \u003d tasks.remove(index);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Gao327"},"content":"            System.out.println(\"Removed: \" + removedTask);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Gao327"},"content":"        } else {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Gao327"},"content":"            throw new InvalidInputException(\"Invalid task number.\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Gao327"},"content":"     * Marks a task at the specified index as done.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Gao327"},"content":"     * @param index The index of the task to be marked (0-based).","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Gao327"},"content":"     * @throws InvalidInputException If the index is invalid or out of bounds.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Gao327"},"content":"    public void markTask(int index) throws InvalidInputException {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Gao327"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Gao327"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Gao327"},"content":"            task.mark();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Gao327"},"content":"            System.out.println(\"Marked as done: \" + task);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Gao327"},"content":"        } else {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Gao327"},"content":"            throw new InvalidInputException(\"Invalid task number.\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Gao327"},"content":"     * Unmarks a task at the specified index as not done.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Gao327"},"content":"     * @param index The index of the task to be unmarked (0-based).","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Gao327"},"content":"     * @throws InvalidInputException If the index is invalid or out of bounds.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Gao327"},"content":"    public void unmarkTask(int index) throws InvalidInputException {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Gao327"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Gao327"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Gao327"},"content":"            task.unmark();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Gao327"},"content":"            System.out.println(\"Unmarked: \" + task);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Gao327"},"content":"        } else {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Gao327"},"content":"            throw new InvalidInputException(\"Invalid task number.\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Gao327"},"content":"     * Lists all tasks in the task list, along with their indices.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Gao327"},"content":"     * If the list is empty, a message indicating that no tasks are found will be displayed.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Gao327"},"content":"    public void listTasks() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Gao327"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Gao327"},"content":"            System.out.println(\"No tasks found.\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Gao327"},"content":"        } else {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Gao327"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Gao327"},"content":"                System.out.println((i + 1) + \": \" + tasks.get(i));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Gao327"},"content":"            }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Gao327"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Gao327"},"content":"     * @return The ArrayList of tasks.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Gao327"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Gao327"},"content":"        return tasks;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Gao327"},"content":"    public void findTask(String arguments) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Gao327"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Gao327"},"content":"            if (tasks.get(i).getDescription().contains(arguments)) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Gao327"},"content":"                System.out.println(i+1 + \". \" + tasks.get(i));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Gao327"},"content":"            }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Gao327"},"content":"}","lastModifiedDate":"2024-10-01","isFullCredit":false}],"authorContributionMap":{"Gao327":129}},{"path":"src/main/java/wildpeace/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gao327"},"content":"package wildpeace.task;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Gao327"},"content":"import wildpeace.exceptions.EmptyCommandException;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Gao327"},"content":"import wildpeace.exceptions.InvalidInputException;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Gao327"},"content":"import wildpeace.task.Parser;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Gao327"},"content":"import wildpeace.Storage.Storage;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Gao327"},"content":"import wildpeace.ui.Ui;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Gao327"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Gao327"},"content":" * Manages the high-level routine of Ui, Storage, TaskList, and Parser classes.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Gao327"},"content":" * The routine involves showing the user guide, parsing user commands and arguments,","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Gao327"},"content":" * handling task operations (such as adding, marking, deleting tasks), and saving tasks.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Gao327"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Gao327"},"content":"public class TaskManager {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Gao327"},"content":"    private Ui ui;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Gao327"},"content":"    private Storage storage;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Gao327"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Gao327"},"content":"    private Parser parser;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Gao327"},"content":"     * Constructor for TaskManager class.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Gao327"},"content":"     * Initializes the user interface (Ui), task storage, task list, and command parser.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Gao327"},"content":"    public TaskManager() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Gao327"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Gao327"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Gao327"},"content":"        taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Gao327"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Gao327"},"content":"     * Starts the main loop for managing tasks.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Gao327"},"content":"     * The loop continually reads user commands, processes them, and updates the task list","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Gao327"},"content":"     * until the user exits the program by typing \"bye\".","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Gao327"},"content":"    public void run() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Gao327"},"content":"        ui.showGuide();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Gao327"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Gao327"},"content":"        while (!isExit) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Gao327"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Gao327"},"content":"            try {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Gao327"},"content":"                String[] parsedInput \u003d parser.parse(fullCommand);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Gao327"},"content":"                String command \u003d parser.getCommand(parsedInput);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Gao327"},"content":"                String arguments \u003d parser.getArguments(parsedInput);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Gao327"},"content":"                isExit \u003d handleCommand(command, arguments);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Gao327"},"content":"            } catch (EmptyCommandException e) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Gao327"},"content":"                ui.showError(\"The description cannot be empty: \" + e.getMessage());","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Gao327"},"content":"            }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Gao327"},"content":"        storage.save(taskList.getTasks());","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Gao327"},"content":"        ui.showLine(\"Goodbye!\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Gao327"},"content":"        ui.close();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Gao327"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Gao327"},"content":"     * Processes user commands and performs corresponding task operations.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Gao327"},"content":"     * This includes listing tasks, adding todo/deadline/event tasks, marking/unmarking tasks,","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Gao327"},"content":"     * and deleting tasks. The tasks are saved to the storage after each operation.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Gao327"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Gao327"},"content":"     * @param command   The command parsed from user input.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Gao327"},"content":"     * @param arguments The arguments associated with the command.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Gao327"},"content":"     * @return true if the user chooses to exit the program, false otherwise.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Gao327"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Gao327"},"content":"    private boolean handleCommand(String command, String arguments) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Gao327"},"content":"        try {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Gao327"},"content":"            switch (command) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Gao327"},"content":"            case \"list\":","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Gao327"},"content":"                taskList.listTasks();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Gao327"},"content":"                break;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Gao327"},"content":"            case \"todo\":","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Gao327"},"content":"                if (arguments.isEmpty()) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Gao327"},"content":"                    throw new EmptyCommandException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Gao327"},"content":"                }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Gao327"},"content":"                taskList.addTask(new Task(arguments, Task.TaskType.TODO));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Gao327"},"content":"                storage.save(taskList.getTasks());","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Gao327"},"content":"                break;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Gao327"},"content":"            case \"deadline\":","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Gao327"},"content":"                if (!arguments.contains(\"/by\")) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Gao327"},"content":"                    throw new InvalidInputException(\"Deadline tasks must include \u0027/by \u003cdeadline\u003e\u0027.\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Gao327"},"content":"                }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Gao327"},"content":"                String[] deadlineParts \u003d arguments.split(\"/by\", 2);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Gao327"},"content":"                taskList.addTask(new Task(deadlineParts[0].trim(), deadlineParts[1].trim(), Task.TaskType.DEADLINE));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Gao327"},"content":"                storage.save(taskList.getTasks());","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Gao327"},"content":"                break;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Gao327"},"content":"            case \"event\":","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Gao327"},"content":"                if (!arguments.contains(\"/at\")) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Gao327"},"content":"                    throw new InvalidInputException(\"Event tasks must include \u0027/at \u003cevent time\u003e\u0027.\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Gao327"},"content":"                }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Gao327"},"content":"                String[] eventParts \u003d arguments.split(\"/at\", 2);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Gao327"},"content":"                taskList.addTask(new Task(eventParts[0].trim(), eventParts[1].trim(), Task.TaskType.EVENT));","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Gao327"},"content":"                storage.save(taskList.getTasks());","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Gao327"},"content":"                break;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Gao327"},"content":"            case \"mark\":","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Gao327"},"content":"                taskList.markTask(Integer.parseInt(arguments) - 1);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Gao327"},"content":"                storage.save(taskList.getTasks());","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Gao327"},"content":"                break;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Gao327"},"content":"            case \"unmark\":","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Gao327"},"content":"                taskList.unmarkTask(Integer.parseInt(arguments) - 1);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Gao327"},"content":"                storage.save(taskList.getTasks());","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Gao327"},"content":"                break;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Gao327"},"content":"            case \"delete\":","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Gao327"},"content":"                taskList.deleteTask(Integer.parseInt(arguments) - 1);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Gao327"},"content":"                storage.save(taskList.getTasks());","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Gao327"},"content":"                break;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Gao327"},"content":"            case \"bye\":","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Gao327"},"content":"                return true;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Gao327"},"content":"            case \"q\":","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Gao327"},"content":"                ui.showGuide();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Gao327"},"content":"                break;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Gao327"},"content":"            case \"find\":","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Gao327"},"content":"                if (arguments.isEmpty()) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Gao327"},"content":"                    throw new EmptyCommandException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Gao327"},"content":"                }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Gao327"},"content":"                taskList.findTask(arguments);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Gao327"},"content":"                break;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Gao327"},"content":"            default:","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Gao327"},"content":"                ui.showError(\"Unknown command.\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Gao327"},"content":"            }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Gao327"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Gao327"},"content":"            ui.showError(\"Invalid input: \" + e.getMessage());","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Gao327"},"content":"        } catch (EmptyCommandException e) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Gao327"},"content":"            ui.showError(\"Empty command: \" + e.getMessage());","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Gao327"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Gao327"},"content":"            ui.showError(\"Please enter a valid number for the task index.\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Gao327"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Gao327"},"content":"        return false;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Gao327"},"content":"}","lastModifiedDate":"2024-10-01","isFullCredit":false}],"authorContributionMap":{"Gao327":130}},{"path":"src/main/java/wildpeace/task/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gao327"},"content":"package wildpeace.ui;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Gao327"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Gao327"},"content":"public class Ui {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Gao327"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Gao327"},"content":"    public Ui() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Gao327"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Gao327"},"content":"    public String readCommand() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Gao327"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Gao327"},"content":"    public void showLine(String message) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Gao327"},"content":"        System.out.println(message);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Gao327"},"content":"    public void showError(String message) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Gao327"},"content":"        System.err.println(message);","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Gao327"},"content":"    public void showGuide() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Gao327"},"content":"        System.out.println(\"List your plans in the following format:\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Gao327"},"content":"        System.out.println(\"todo/ deadline/ event + task, e.g., todo homework\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Gao327"},"content":"        System.out.println(\"You may also mark/unmark tasks by: mark/unmark + task\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Gao327"},"content":"        System.out.println(\"Return to tutorial by entering Q\");","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Gao327"},"content":"","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Gao327"},"content":"    public void close() {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Gao327"},"content":"        scanner.close();","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Gao327"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Gao327"},"content":"}","lastModifiedDate":"2024-10-01","isFullCredit":false}],"authorContributionMap":{"Gao327":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Gao327"},"content":"w","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Gao327"},"content":"2","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Gao327"},"content":"event play","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Gao327"},"content":"now till forever","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"Gao327":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Gao327"},"content":"java -classpath ..\\bin Wildpeace \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"Gao327":1}}]
