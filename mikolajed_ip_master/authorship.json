[{"path":"data/pythia.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mikolajed"},"content":"true | read","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mikolajed"},"content":"T | false | got apple","lastModifiedDate":"2024-09-29","isFullCredit":false}],"authorContributionMap":{"mikolajed":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mikolajed"},"content":"# Pythia User Guide","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"mikolajed":1,"-":26}},{"path":"src/main/java/pythia/Pythia.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mikolajed"},"content":"package pythia;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mikolajed"},"content":"import pythia.utility.Parser;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mikolajed"},"content":"import pythia.utility.Ui;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mikolajed"},"content":"import pythia.task.Task;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mikolajed"},"content":"import pythia.task.ToDo;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mikolajed"},"content":"import pythia.task.Deadline;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mikolajed"},"content":"import pythia.task.Event;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mikolajed"},"content":"import pythia.exceptions.PythiaException;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mikolajed"},"content":"import pythia.utility.Storage;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mikolajed"},"content":"import pythia.utility.TaskList;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mikolajed"},"content":"/**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mikolajed"},"content":" * Main class of the Pythia application. This class is responsible for managing","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mikolajed"},"content":" * the system\u0027s core components, including parsing user commands, storing and","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mikolajed"},"content":" * retrieving tasks, and interacting with the user through the user interface.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mikolajed"},"content":" */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mikolajed"},"content":"public class Pythia {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mikolajed"},"content":"    private static String botName \u003d \"Pythia\";","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mikolajed"},"content":"    private static String logo \u003d","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mikolajed"},"content":"            \"____        _   _     _       \\n\" +","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mikolajed"},"content":"            \"|  _ \\\\ _   _| |_| |__ (_) __ _ \\n\" +","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mikolajed"},"content":"            \"| |_) | | | | __| \u0027_ \\\\| |/ _` |\\n\" +","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mikolajed"},"content":"            \"|  __/| |_| | |_| | | | | (_| |\\n\" +","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mikolajed"},"content":"            \"|_|    \\\\__, |\\\\__|_| |_|_|\\\\__,_|\\n\" +","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mikolajed"},"content":"            \"       |___/                   \";","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mikolajed"},"content":"    private static boolean isByeSaid;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mikolajed"},"content":"    private static TaskList taskList;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mikolajed"},"content":"    private static Storage storage;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mikolajed"},"content":"    private static Ui ui;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mikolajed"},"content":"     * Constructs a Pythia object that initializes the system with task","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mikolajed"},"content":"     * storage and user interaction components.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mikolajed"},"content":"     * @param filePath Path to the file where tasks are saved and loaded from.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mikolajed"},"content":"    public Pythia(String filePath) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mikolajed"},"content":"        isByeSaid \u003d false;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mikolajed"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mikolajed"},"content":"        taskList \u003d storage.load();","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mikolajed"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mikolajed"},"content":"     * Greets the user by printing a welcome message to the console.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mikolajed"},"content":"    public static void greet() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mikolajed"},"content":"        String helloMsg \u003d   \"Welcome, seeker. I am \" + botName + \".\\n\" +","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mikolajed"},"content":"                            \"What brings you here?\";","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mikolajed"},"content":"        ui.printResponse(helloMsg);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mikolajed"},"content":"     * Prints a farewell message to the user and sets the exit flag.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mikolajed"},"content":"    public static void sayBye() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mikolajed"},"content":"        String byeMsg \u003d \"Your path is set. Until we meet again.\";","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mikolajed"},"content":"        ui.printResponse(byeMsg);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mikolajed"},"content":"        isByeSaid \u003d true;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mikolajed"},"content":"     * Displays the current list of tasks, along with the total number of","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mikolajed"},"content":"     * remaining tasks.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mikolajed"},"content":"    public static void listTasks() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mikolajed"},"content":"        StringBuilder comment \u003d new StringBuilder();","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mikolajed"},"content":"        int remainingTasks \u003d taskList.getNumberOfRemainingTasks();","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mikolajed"},"content":"        comment.append(\"Now you have \").append(remainingTasks);","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mikolajed"},"content":"        if (remainingTasks \u003d\u003d 1) {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mikolajed"},"content":"            comment.append(\" task in the list.\");","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mikolajed"},"content":"        } else {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mikolajed"},"content":"            comment.append(\" tasks in the list.\");","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mikolajed"},"content":"        }","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mikolajed"},"content":"        ui.printTaskList(taskList, \"\", comment.toString());","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mikolajed"},"content":"     * Adds a new generic task with the given name to the task list.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mikolajed"},"content":"     * @param taskName The name of the task to be added.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mikolajed"},"content":"    public static void addTask(String taskName) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mikolajed"},"content":"        taskList.add(new Task(taskName));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mikolajed"},"content":"        ui.printAddedTask(\"added: \" + taskName);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mikolajed"},"content":"        storage.save(taskList);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mikolajed"},"content":"     * Adds a specific {@link Task} object to the task list.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mikolajed"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mikolajed"},"content":"    public static void addTask(Task task) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mikolajed"},"content":"        taskList.add(task);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mikolajed"},"content":"        ui.printAddedTask(\"added: \" + task.getName());","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mikolajed"},"content":"        storage.save(taskList);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mikolajed"},"content":"     * Adds a new {@link ToDo} task to the task list.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mikolajed"},"content":"     * @param todoName The name of the ToDo task to be added.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mikolajed"},"content":"    public static void addToDo(String todoName) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mikolajed"},"content":"        addTask(new ToDo(todoName));","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mikolajed"},"content":"     * Adds a new {@link Deadline} task to the task list with a specified due date.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mikolajed"},"content":"     * @param deadlineName The name of the deadline task.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mikolajed"},"content":"     * @param dueDate      The due date of the deadline task.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mikolajed"},"content":"    public static void addDeadline(String deadlineName, String dueDate) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mikolajed"},"content":"        addTask(new Deadline(deadlineName, dueDate));","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mikolajed"},"content":"     * Adds a new {@link Event} task to the task list with specified start and end dates.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mikolajed"},"content":"     * @param eventName The name of the event task.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mikolajed"},"content":"     * @param startDate The start date of the event.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mikolajed"},"content":"     * @param endDate   The end date of the event.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mikolajed"},"content":"    public static void addEvent(String eventName, String startDate, String endDate) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mikolajed"},"content":"        addTask(new Event(eventName, startDate, endDate));","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mikolajed"},"content":"     * Marks a task as completed by its task number.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mikolajed"},"content":"     * @param taskNumber The number of the task in the list (1-based index).","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mikolajed"},"content":"    public static void markTask(Integer taskNumber) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mikolajed"},"content":"        try {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mikolajed"},"content":"            taskList.markAsDone(taskNumber - 1);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mikolajed"},"content":"            String msg \u003d \"Nice! I\u0027ve marked this task as done:\\n\\t\" + taskList.get(taskNumber - 1).toString();","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"mikolajed"},"content":"            ui.printResponse(msg);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"mikolajed"},"content":"            storage.save(taskList);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"mikolajed"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"mikolajed"},"content":"            ui.printResponse(\"There is no such task :(\");","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"mikolajed"},"content":"        }","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"mikolajed"},"content":"     * Deletes a task from the list by its task number.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"mikolajed"},"content":"     * @param taskNumber The number of the task to be deleted (1-based index).","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"mikolajed"},"content":"    public static void deleteTask(Integer taskNumber) {","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"mikolajed"},"content":"        try {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"mikolajed"},"content":"            String msg \u003d \"Nice! I\u0027ve deleted this task:\\n\\t\" + taskList.get(taskNumber - 1).toString();","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"mikolajed"},"content":"            taskList.remove(taskNumber - 1);","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"mikolajed"},"content":"            ui.printResponse(msg);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"mikolajed"},"content":"        } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"mikolajed"},"content":"            ui.printResponse(\"There is no such task :(\");","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"mikolajed"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"mikolajed"},"content":"     * Finds tasks that contain the specified keyword in their name and displays","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"mikolajed"},"content":"     * them to the user.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"mikolajed"},"content":"     * @param taskKeyword The keyword to search for in task names.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"mikolajed"},"content":"    public static void findTasks(String taskKeyword) {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"mikolajed"},"content":"        TaskList filteredTaskList \u003d new TaskList();","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"mikolajed"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"mikolajed"},"content":"            String taskName \u003d task.getName();","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"mikolajed"},"content":"            if (taskName.contains(taskKeyword)) {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"mikolajed"},"content":"                filteredTaskList.add(task);","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"mikolajed"},"content":"            }","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"mikolajed"},"content":"        }","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"mikolajed"},"content":"        if (filteredTaskList.getNumberOfTasks() \u003d\u003d 0) {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"mikolajed"},"content":"            ui.printResponse(\"There is no such task :(\");","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"mikolajed"},"content":"        } else {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"mikolajed"},"content":"            String commentBefore \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"mikolajed"},"content":"            String commentAfter \u003d \"\";","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"mikolajed"},"content":"            ui.printTaskList(filteredTaskList, commentBefore, commentAfter);","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"mikolajed"},"content":"        }","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"mikolajed"},"content":"     * Runs the main logic of the Pythia application. Continuously accepts user","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"mikolajed"},"content":"     * input and executes parsed commands until the user says \"bye\".","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"mikolajed"},"content":"    private static void run() {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"mikolajed"},"content":"        ui.init();","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"mikolajed"},"content":"        greet();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"mikolajed"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"mikolajed"},"content":"        while (!isByeSaid) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"mikolajed"},"content":"            try {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"mikolajed"},"content":"                String request \u003d ui.getRequest();","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"mikolajed"},"content":"                parser.parse(request);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"mikolajed"},"content":"                parser.execute();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"mikolajed"},"content":"            } catch (PythiaException e) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"mikolajed"},"content":"                ui.printResponse(e.getUserMessage());","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"mikolajed"},"content":"            }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"mikolajed"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"mikolajed"},"content":"     * The main method that runs the Pythia application. It initializes the UI,","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"mikolajed"},"content":"     * greets the user, and enters a loop that processes user input until the user","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"mikolajed"},"content":"     * says \"bye\".","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"mikolajed"},"content":"     * @param args Command-line arguments (unused).","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"mikolajed"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"mikolajed"},"content":"        new Pythia(\"data/pythia.txt\").run();","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"mikolajed"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"mikolajed":219}},{"path":"src/main/java/pythia/exceptions/PythiaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mikolajed"},"content":"package pythia.exceptions;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mikolajed"},"content":"/**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mikolajed"},"content":" * Represents a custom exception for the Pythia task management system.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mikolajed"},"content":" * This exception extends {@link RuntimeException} and is used to signal","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mikolajed"},"content":" * errors that occur during the execution of Pythia\u0027s functionalities.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mikolajed"},"content":" */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mikolajed"},"content":"public class PythiaException extends RuntimeException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mikolajed"},"content":"  private String userMessage;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mikolajed"},"content":"     * Constructs a PythiaException with the specified detail message and user message.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mikolajed"},"content":"     * @param message    The detail message for the exception, which is logged for debugging purposes.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mikolajed"},"content":"     * @param userMessage A user-friendly message that can be displayed to the user.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mikolajed"},"content":"  public PythiaException(String message, String userMessage) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mikolajed"},"content":"      super(message);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mikolajed"},"content":"      this.userMessage \u003d userMessage;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mikolajed"},"content":"  }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mikolajed"},"content":"  public String getUserMessage() {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mikolajed"},"content":"    return userMessage;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mikolajed"},"content":"  }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mikolajed"},"content":"}","lastModifiedDate":"2024-09-08","isFullCredit":false}],"authorContributionMap":{"mikolajed":25}},{"path":"src/main/java/pythia/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mikolajed"},"content":"package pythia.task;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mikolajed"},"content":"import pythia.utility.WriteVisitor;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mikolajed"},"content":"import java.util.Date;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mikolajed"},"content":"/**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mikolajed"},"content":" * Represents a deadline task that is part of the task management system.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mikolajed"},"content":" * A deadline task includes a name and a due date, and can be marked as done or not done.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mikolajed"},"content":" */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mikolajed"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mikolajed"},"content":"    private String dueDate;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mikolajed"},"content":"    private Date dueDateDay;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mikolajed"},"content":"     * Constructs a Deadline with the specified name and due date.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mikolajed"},"content":"     * The deadline is initially marked as not done.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mikolajed"},"content":"     * @param name     The name of the deadline.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mikolajed"},"content":"     * @param dueDate  The due date of the deadline.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mikolajed"},"content":"    public Deadline(String name, String dueDate) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mikolajed"},"content":"        super(name);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mikolajed"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mikolajed"},"content":"     * Constructs a Deadline with the specified name, done status, and due date.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mikolajed"},"content":"     * @param name     The name of the deadline.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mikolajed"},"content":"     * @param isDone   The initial status of the deadline, indicating whether it is done or not.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mikolajed"},"content":"     * @param dueDate  The due date of the deadline.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mikolajed"},"content":"    public Deadline(String name, boolean isDone, String dueDate) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mikolajed"},"content":"        super(name);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mikolajed"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mikolajed"},"content":"    public String getDueDate() {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mikolajed"},"content":"        return dueDate;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mikolajed"},"content":"     * Returns a string representation of the deadline, including its status and due date.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mikolajed"},"content":"     * @return A string indicating the type of task, its status, and its due date.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mikolajed"},"content":"    @Override","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mikolajed"},"content":"    public String toString() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mikolajed"},"content":"        return \"[D]\" + super.toString() + \" \" + \"(by: \" + dueDate + \")\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mikolajed"},"content":"     * Accepts a {@link WriteVisitor} to perform a write operation on the deadline.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mikolajed"},"content":"     * @param visitor The visitor that handles writing the deadline\u0027s data to a storage format.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mikolajed"},"content":"     * @return A string representation of the deadline\u0027s data formatted for saving.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mikolajed"},"content":"    @Override","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mikolajed"},"content":"    public String accept(WriteVisitor visitor) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mikolajed"},"content":"        return visitor.visitDeadline(this);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mikolajed"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"mikolajed":63}},{"path":"src/main/java/pythia/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mikolajed"},"content":"package pythia.task;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mikolajed"},"content":"import pythia.utility.WriteVisitor;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mikolajed"},"content":"import java.util.Date;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mikolajed"},"content":"/**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mikolajed"},"content":" * Represents an event task that is part of the task management system.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mikolajed"},"content":" * An event task includes a name, a start date, and an end date, and can be marked as done or not done.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mikolajed"},"content":" */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mikolajed"},"content":"public class Event extends Task {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mikolajed"},"content":"    private String startDate;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mikolajed"},"content":"    private Date startDateDay;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mikolajed"},"content":"    private String endDate;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mikolajed"},"content":"    private Date endDateDay;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mikolajed"},"content":"     * Constructs an Event with the specified name, start date, and end date.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mikolajed"},"content":"     * The event is initially marked as not done.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mikolajed"},"content":"     * @param name      The name of the event.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mikolajed"},"content":"     * @param startDate The start date of the event.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mikolajed"},"content":"     * @param endDate   The end date of the event.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mikolajed"},"content":"    public Event(String name, String startDate, String endDate) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mikolajed"},"content":"        super(name);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mikolajed"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mikolajed"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mikolajed"},"content":"     * Constructs an Event with the specified name, done status, start date, and end date.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mikolajed"},"content":"     * @param name      The name of the event.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mikolajed"},"content":"     * @param isDone    The initial status of the event, indicating whether it is done or not.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mikolajed"},"content":"     * @param startDate The start date of the event.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mikolajed"},"content":"     * @param endDate   The end date of the event.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mikolajed"},"content":"    public Event(String name, boolean isDone, String startDate, String endDate) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mikolajed"},"content":"        super(name, isDone);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mikolajed"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mikolajed"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mikolajed"},"content":"    public String getStartDate() {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mikolajed"},"content":"        return startDate;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mikolajed"},"content":"    public String getEndDate() {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mikolajed"},"content":"        return endDate;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mikolajed"},"content":"     * Returns a string representation of the event, including its status and date range.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mikolajed"},"content":"     * @return A string indicating the type of task, its status, and its date range.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mikolajed"},"content":"    @Override","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mikolajed"},"content":"    public String toString() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mikolajed"},"content":"        return \"[E]\" + super.toString() + \" (from \" + startDate + \" to \" + endDate + \")\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mikolajed"},"content":"     * Accepts a {@link WriteVisitor} to perform a write operation on the event.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mikolajed"},"content":"     * @param visitor The visitor that handles writing the event\u0027s data to a storage format.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mikolajed"},"content":"     * @return A string representation of the event\u0027s data formatted for saving.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mikolajed"},"content":"    @Override","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mikolajed"},"content":"    public String accept(WriteVisitor visitor) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mikolajed"},"content":"        return visitor.visitEvent(this);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mikolajed"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"mikolajed":73}},{"path":"src/main/java/pythia/task/Savable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mikolajed"},"content":"package pythia.task;","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mikolajed"},"content":"import pythia.utility.WriteVisitor;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mikolajed"},"content":"/**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mikolajed"},"content":" * Represents a contract for objects that can be saved.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mikolajed"},"content":" * Classes implementing this interface must define how they interact with a","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mikolajed"},"content":" * {@link WriteVisitor} for the purpose of saving their state or data.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mikolajed"},"content":" */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mikolajed"},"content":"public interface Savable {","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mikolajed"},"content":"     * Accepts a {@link WriteVisitor} to perform a write operation on the implementing object.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mikolajed"},"content":"     * @param visitor The visitor that handles writing the object\u0027s data to a storage format.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mikolajed"},"content":"     * @return A string representation of the object\u0027s data formatted for saving.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mikolajed"},"content":"    public String accept(WriteVisitor visitor);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mikolajed"},"content":"}","lastModifiedDate":"2024-09-19","isFullCredit":false}],"authorContributionMap":{"mikolajed":18}},{"path":"src/main/java/pythia/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mikolajed"},"content":"package pythia.task;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mikolajed"},"content":"import pythia.utility.WriteVisitor;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mikolajed"},"content":"/**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mikolajed"},"content":" * Represents a task with a name and a completion status (whether it\u0027s done or not).","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mikolajed"},"content":" * It provides methods for marking the task as done or not done, and allows for","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mikolajed"},"content":" * string representations of the task for display and saving purposes.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mikolajed"},"content":" */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mikolajed"},"content":"public class Task implements Savable {","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mikolajed"},"content":"    private String name;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mikolajed"},"content":"    private boolean isDone;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mikolajed"},"content":"    public Task(String name) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mikolajed"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mikolajed"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mikolajed"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mikolajed"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mikolajed"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mikolajed"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mikolajed"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mikolajed"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mikolajed"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mikolajed"},"content":"    public String getName() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mikolajed"},"content":"        return name;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mikolajed"},"content":"    public boolean getDone() {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mikolajed"},"content":"        return isDone;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mikolajed"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mikolajed"},"content":"     * The string indicates whether the task is done or not, followed by the task name.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mikolajed"},"content":"     * @return A string in the format: \"[X] \u003ctask name\u003e\" if done, \"[ ] \u003ctask name\u003e\" if not done.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mikolajed"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mikolajed"},"content":"    public String toString() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mikolajed"},"content":"        if (isDone \u003d\u003d false) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mikolajed"},"content":"            return \"[ ] \" + name;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mikolajed"},"content":"        } else {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mikolajed"},"content":"            return \"[X] \" + name;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mikolajed"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mikolajed"},"content":"     * Accepts a visitor to perform a write operation on this task for saving purposes.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mikolajed"},"content":"     * @param visitor The {@link WriteVisitor} that handles writing the task to a storage format.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mikolajed"},"content":"     * @return The formatted string representation of this task.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mikolajed"},"content":"    @Override","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mikolajed"},"content":"    public String accept(WriteVisitor visitor) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mikolajed"},"content":"        return visitor.visitTask(this);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mikolajed"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"mikolajed":65}},{"path":"src/main/java/pythia/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mikolajed"},"content":"package pythia.task;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mikolajed"},"content":"import pythia.utility.WriteVisitor;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mikolajed"},"content":"/**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mikolajed"},"content":" * Represents a to-do task that is part of the task management system.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mikolajed"},"content":" * A to-do task can be marked as done or not done and has a name associated with it.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mikolajed"},"content":" */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mikolajed"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mikolajed"},"content":"    public ToDo(String name) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mikolajed"},"content":"        super(name);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mikolajed"},"content":"    public ToDo(String name, boolean isDone) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mikolajed"},"content":"        super(name, isDone);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mikolajed"},"content":"     * Returns a string representation of the to-do task, including its status.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mikolajed"},"content":"     * @return A string indicating the type of task and its status.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mikolajed"},"content":"    @Override","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mikolajed"},"content":"    public String toString() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mikolajed"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mikolajed"},"content":"     * Accepts a {@link WriteVisitor} to perform a write operation on the to-do task.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mikolajed"},"content":"     * @param visitor The visitor that handles writing the task\u0027s data to a storage format.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mikolajed"},"content":"     * @return A string representation of the to-do task\u0027s data formatted for saving.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mikolajed"},"content":"    @Override","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mikolajed"},"content":"    public String accept(WriteVisitor visitor) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mikolajed"},"content":"        return visitor.visitToDo(this);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mikolajed"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"mikolajed":38}},{"path":"src/main/java/pythia/utility/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mikolajed"},"content":"package pythia.utility;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mikolajed"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mikolajed"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mikolajed"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mikolajed"},"content":"import pythia.exceptions.PythiaException;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mikolajed"},"content":"import pythia.Pythia;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mikolajed"},"content":"/**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mikolajed"},"content":" * The {@code Parser} class is responsible for parsing and executing","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mikolajed"},"content":" * user commands in the Pythia application.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mikolajed"},"content":" * It validates commands, extracts necessary arguments, and invokes","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mikolajed"},"content":" * corresponding actions.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mikolajed"},"content":" */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mikolajed"},"content":"public class Parser {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mikolajed"},"content":"    private String commandType \u003d null;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mikolajed"},"content":"    private ArrayList\u003cString\u003e argumentList \u003d null;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mikolajed"},"content":"    private String parsingErrorMessage \u003d \"Parsing of add command unsuccessful.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mikolajed"},"content":"     * Constructs a {@code Parser} object.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mikolajed"},"content":"    public Parser() {","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mikolajed"},"content":"     * Parses the command type from the given raw text.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mikolajed"},"content":"     * The command type is identified as the first word before any spaces.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mikolajed"},"content":"     * @param rawText the whole, unaltered command input from the user","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mikolajed"},"content":"     * @return the command type as a string","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mikolajed"},"content":"    private String parseCommandType(String rawText) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mikolajed"},"content":"        int spaceIndex \u003d rawText.indexOf(\u0027 \u0027);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mikolajed"},"content":"        String firstPart;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mikolajed"},"content":"        if (spaceIndex !\u003d -1) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mikolajed"},"content":"            firstPart \u003d rawText.substring(0, spaceIndex);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mikolajed"},"content":"        } else {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mikolajed"},"content":"            firstPart \u003d rawText;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mikolajed"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mikolajed"},"content":"        return firstPart;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mikolajed"},"content":"     * Handles parsing for the \"bye\" command.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mikolajed"},"content":"     * As no arguments are required for this command, this method is intentionally left empty.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mikolajed"},"content":"     * @param rawText the whole, unaltered command input from the user","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mikolajed"},"content":"    private void parseBye(String rawText) {","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mikolajed"},"content":"     * Handles parsing for the \"list\" command.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mikolajed"},"content":"     * As no arguments are required for this command, this method is intentionally left empty.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mikolajed"},"content":"     * @param rawText the whole, unaltered command input from the user","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mikolajed"},"content":"    private void parseList(String rawText) {","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mikolajed"},"content":"     * Parses the \"add\" command, checking if the input format is correct.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mikolajed"},"content":"     * @param rawText the whole, unaltered command input from the user","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mikolajed"},"content":"     * @throws PythiaException if the command lacks a valid task description","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mikolajed"},"content":"    private void parseAdd(String rawText) throws PythiaException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mikolajed"},"content":"        argumentList \u003d tokenize(rawText, \"add\\\\s(.+)\");","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mikolajed"},"content":"        boolean isCorrectFormat \u003d argumentList.size() \u003d\u003d 1;","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mikolajed"},"content":"        if (!isCorrectFormat) {","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mikolajed"},"content":"            throw new PythiaException(parsingErrorMessage, \"I am not sure what to add.\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mikolajed"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mikolajed"},"content":"     * Parses the \"mark\" command, ensuring it includes a valid task number.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mikolajed"},"content":"     * @param rawText the whole, unaltered command input from the user","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mikolajed"},"content":"     * @throws PythiaException if the command lacks a valid task number","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mikolajed"},"content":"    private void parseMark(String rawText) throws PythiaException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mikolajed"},"content":"        argumentList \u003d tokenize(rawText, \"mark\\\\s(.+)\");","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mikolajed"},"content":"        boolean isCorrectFormat \u003d argumentList.size() \u003d\u003d 1 \u0026\u0026 argumentList.get(0).matches(\"\\\\d+\");","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mikolajed"},"content":"        if (!isCorrectFormat) {","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mikolajed"},"content":"            throw new PythiaException(parsingErrorMessage, \"Please specify what should I mark as done.\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mikolajed"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mikolajed"},"content":"    private void parseToDo(String rawText) throws PythiaException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mikolajed"},"content":"        argumentList \u003d tokenize(rawText, \"todo\\\\s(.+)\");","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mikolajed"},"content":"        boolean isCorrectFormat \u003d argumentList.size() \u003d\u003d 1;","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mikolajed"},"content":"        if (!isCorrectFormat) {","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mikolajed"},"content":"            throw new PythiaException(parsingErrorMessage, \"Todo should have a description.\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mikolajed"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mikolajed"},"content":"    private void parseDeadline(String rawText) throws PythiaException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mikolajed"},"content":"        argumentList \u003d tokenize(rawText, \"deadline\\\\s(.+)\\\\s/by\\\\s(.+)\");","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mikolajed"},"content":"        boolean isCorrectFormat \u003d argumentList.size() \u003d\u003d 2;","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mikolajed"},"content":"        if (!isCorrectFormat) {","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mikolajed"},"content":"            throw new PythiaException(parsingErrorMessage, \"Deadline should have description and a date.\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mikolajed"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mikolajed"},"content":"    private void parseEvent(String rawText) throws PythiaException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mikolajed"},"content":"        argumentList \u003d tokenize(rawText, \"event\\\\s(.+)\\\\s/from\\\\s(.+)\\\\s/to\\\\s(.+)\");","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mikolajed"},"content":"        boolean isCorrectFormat \u003d argumentList.size() \u003d\u003d 3;","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mikolajed"},"content":"        if (!isCorrectFormat) {","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mikolajed"},"content":"            throw new PythiaException(parsingErrorMessage, \"Event should have description and from and to dates.\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mikolajed"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mikolajed"},"content":"    public void parseDelete(String rawText) throws PythiaException {","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mikolajed"},"content":"        argumentList \u003d tokenize(rawText, \"delete\\\\s(.+)\");","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mikolajed"},"content":"        boolean isCorrectFormat \u003d argumentList.size() \u003d\u003d 1 \u0026\u0026 argumentList.get(0).matches(\"\\\\d+\");","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mikolajed"},"content":"        if (!isCorrectFormat) {","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mikolajed"},"content":"            throw new PythiaException(parsingErrorMessage, \"Please specify what should I delete.\");","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mikolajed"},"content":"        }","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mikolajed"},"content":"    public void parseFind(String rawText) throws PythiaException {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mikolajed"},"content":"        argumentList \u003d tokenize(rawText, \"find\\\\s(.+)\");","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mikolajed"},"content":"        boolean isCorrectFormat \u003d argumentList.size() \u003d\u003d 1;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mikolajed"},"content":"        if (!isCorrectFormat) {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mikolajed"},"content":"            throw new PythiaException(parsingErrorMessage, \"Please specify what should I find.\");","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mikolajed"},"content":"        }","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mikolajed"},"content":"     * Splits the given command string into tokens based on the provided regular expression.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mikolajed"},"content":"     * \u003cp\u003eExample usage:\u003c/p\u003e","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mikolajed"},"content":"     * \u003cpre\u003e{@code","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"mikolajed"},"content":"     * String rawText \u003d \"event \u003ceventname\u003e /from \u003cstartDate\u003e /to \u003cendDate\u003e\";","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"mikolajed"},"content":"     * String regex \u003d \"event\\\\s(.+)\\\\s/from\\\\s(.+)\\\\s/to\\\\s(.+)\";","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"mikolajed"},"content":"     * ArrayList\u003cString\u003e tokens \u003d tokenize(rawText, regex);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"mikolajed"},"content":"     * // Resulting tokens \u003d {\u003ceventname\u003e, \u003cstartDate\u003e, \u003cendDate\u003e}","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"mikolajed"},"content":"     * }\u003c/pre\u003e","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"mikolajed"},"content":"     * @param rawText the whole, unaltered command input from the user","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"mikolajed"},"content":"     * @param regex the regular expression used to capture command arguments","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"mikolajed"},"content":"     * @return a list of tokens extracted from the input text","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"mikolajed"},"content":"    private ArrayList\u003cString\u003e tokenize(String rawText, String regex) {","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"mikolajed"},"content":"        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"mikolajed"},"content":"        Matcher matcher \u003d pattern.matcher(rawText);","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"mikolajed"},"content":"        ArrayList\u003cString\u003e tokens \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"mikolajed"},"content":"        if (matcher.find()) {","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"mikolajed"},"content":"            for (int i \u003d 1; i \u003c\u003d matcher.groupCount(); i++) {","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"mikolajed"},"content":"                tokens.add(matcher.group(i));  // Get specific captured groups","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"mikolajed"},"content":"            }","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"mikolajed"},"content":"        }","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"mikolajed"},"content":"        return tokens;","lastModifiedDate":"2024-09-30","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"mikolajed"},"content":"     * Parses the entire command input and determines which specific parsing method to call.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"mikolajed"},"content":"     * The command is identified by its type and validated accordingly.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"mikolajed"},"content":"     * @param rawText the whole, unaltered command input from the user","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"mikolajed"},"content":"     * @throws PythiaException if the command is invalid","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"mikolajed"},"content":"    public void parse(String rawText) throws PythiaException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"mikolajed"},"content":"        commandType \u003d parseCommandType(rawText);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"mikolajed"},"content":"        switch (commandType) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"mikolajed"},"content":"            case \"bye\" -\u003e parseBye(rawText);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"mikolajed"},"content":"            case \"list\" -\u003e parseList(rawText);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"mikolajed"},"content":"            case \"add\" -\u003e parseAdd(rawText);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"mikolajed"},"content":"            case \"mark\" -\u003e parseMark(rawText);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"mikolajed"},"content":"            case \"todo\" -\u003e parseToDo(rawText);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"mikolajed"},"content":"            case \"deadline\" -\u003e parseDeadline(rawText);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"mikolajed"},"content":"            case \"event\" -\u003e parseEvent(rawText);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"mikolajed"},"content":"            case \"delete\" -\u003e parseDelete(rawText);","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"mikolajed"},"content":"            case \"find\" -\u003e parseFind(rawText);","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"mikolajed"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"mikolajed"},"content":"     * Executes the parsed command by invoking the corresponding method in the {@link Pythia} class.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"mikolajed"},"content":"     * If no command has been parsed, it throws a {@link PythiaException}.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"mikolajed"},"content":"     * @throws PythiaException if no command was parsed or the command is unrecognized","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"mikolajed"},"content":"    public void execute() throws PythiaException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"mikolajed"},"content":"        if (commandType \u003d\u003d null) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"mikolajed"},"content":"            throw new PythiaException(parsingErrorMessage, \"Sorry, I am busy.\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"mikolajed"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"mikolajed"},"content":"        switch (commandType) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"mikolajed"},"content":"            case \"bye\" -\u003e Pythia.sayBye();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"mikolajed"},"content":"            case \"list\" -\u003e Pythia.listTasks();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"mikolajed"},"content":"            case \"add\" -\u003e Pythia.addTask(argumentList.get(0));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"mikolajed"},"content":"            case \"mark\" -\u003e Pythia.markTask(Integer.parseInt(argumentList.get(0)));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"mikolajed"},"content":"            case \"todo\" -\u003e Pythia.addToDo(argumentList.get(0));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"mikolajed"},"content":"            case \"deadline\" -\u003e Pythia.addDeadline(argumentList.get(0), argumentList.get(1));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"mikolajed"},"content":"            case \"event\" -\u003e Pythia.addEvent(argumentList.get(0), argumentList.get(1), argumentList.get(2));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"mikolajed"},"content":"            case \"delete\" -\u003e Pythia.deleteTask(Integer.parseInt(argumentList.get(0)));","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"mikolajed"},"content":"            case \"find\" -\u003e Pythia.findTasks(argumentList.get(0));","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"mikolajed"},"content":"            default -\u003e throw new PythiaException(parsingErrorMessage, \"Hmm. I am not sure what you mean.\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"mikolajed"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"mikolajed"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"mikolajed":215}},{"path":"src/main/java/pythia/utility/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mikolajed"},"content":"package pythia.utility;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mikolajed"},"content":"import pythia.task.Task;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mikolajed"},"content":"import java.io.*;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mikolajed"},"content":"/**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mikolajed"},"content":" * The {@code Storage} class is responsible for saving","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mikolajed"},"content":" * and loading {@link TaskList} objects to and from a file.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mikolajed"},"content":" * It provides methods to serialize a task list into a file","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mikolajed"},"content":" * and deserialize a task list from a file.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mikolajed"},"content":" */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mikolajed"},"content":"public class Storage {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mikolajed"},"content":"    private String filePath;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mikolajed"},"content":"    private WriteVisitor writeVisitor;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mikolajed"},"content":"     * Constructs a {@code Storage} object with the specified file path.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mikolajed"},"content":"     * @param filePath the path to the file where the {@link TaskList}","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mikolajed"},"content":"     *                will be stored or read from","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mikolajed"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mikolajed"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mikolajed"},"content":"        this.writeVisitor \u003d new WriteVisitor();","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mikolajed"},"content":"     * Saves the given {@link TaskList} to a file at the specified path.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mikolajed"},"content":"     * Each task in the task list is serialized into a string representation","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mikolajed"},"content":"     * using the {@link WriteVisitor} and written to the file.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mikolajed"},"content":"     * @param taskList the {@link TaskList} object to be saved to the file","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mikolajed"},"content":"     * @throws IOException if an I/O error occurs during writing to the file","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mikolajed"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mikolajed"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath, false))) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mikolajed"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mikolajed"},"content":"                String taskAsString \u003d task.accept(writeVisitor);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mikolajed"},"content":"                writer.write(taskAsString);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mikolajed"},"content":"                writer.newLine();","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mikolajed"},"content":"            }","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mikolajed"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mikolajed"},"content":"            System.err.println(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mikolajed"},"content":"        }","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mikolajed"},"content":"     * Loads a {@link TaskList} from the file at the specified path.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mikolajed"},"content":"     * Each line in the file is deserialized into a {@link Task} object using","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mikolajed"},"content":"     * the {@link TaskFromStringFactory} and added to a new task list.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mikolajed"},"content":"     * @return the newly created {@link TaskList} object loaded from the file","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mikolajed"},"content":"     * @throws IOException if an I/O error occurs during reading from the file","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mikolajed"},"content":"    public TaskList load() {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mikolajed"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mikolajed"},"content":"        TaskFromStringFactory factory \u003d new TaskFromStringFactory();","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mikolajed"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mikolajed"},"content":"            String taskAsString;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mikolajed"},"content":"            while ((taskAsString \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mikolajed"},"content":"                Task task \u003d factory.create(taskAsString);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mikolajed"},"content":"                taskList.add(task);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mikolajed"},"content":"            }","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mikolajed"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mikolajed"},"content":"            System.err.println(\"Error reading from file: \" + e.getMessage());","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mikolajed"},"content":"        }","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mikolajed"},"content":"        return taskList;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mikolajed"},"content":"}","lastModifiedDate":"2024-09-29","isFullCredit":false}],"authorContributionMap":{"mikolajed":71}},{"path":"src/main/java/pythia/utility/TaskFromStringFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mikolajed"},"content":"package pythia.utility;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mikolajed"},"content":"import pythia.task.Deadline;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mikolajed"},"content":"import pythia.task.Event;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mikolajed"},"content":"import pythia.task.Task;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mikolajed"},"content":"import pythia.task.ToDo;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mikolajed"},"content":"/**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mikolajed"},"content":" * A factory class used for creating {@link Task} objects and its","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mikolajed"},"content":" * derived classes ({@link ToDo}, {@link Event}, {@link Deadline})","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mikolajed"},"content":" * from a string representation. The factory parses the string and","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mikolajed"},"content":" * creates the appropriate type of task based on the information.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mikolajed"},"content":" */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mikolajed"},"content":"public class TaskFromStringFactory {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mikolajed"},"content":"     * Creates a new {@link Task} object or one of its derived classes","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mikolajed"},"content":"     * from the given string representation. The string must follow","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mikolajed"},"content":"     * a specific format with fields separated by \" | \". The first field","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mikolajed"},"content":"     * determines the type of task:","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mikolajed"},"content":"     * \u003cul\u003e","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mikolajed"},"content":"     *     \u003cli\u003e{@code \"T\"} - {@link ToDo}\u003c/li\u003e","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mikolajed"},"content":"     *     \u003cli\u003e{@code \"E\"} - {@link Event}\u003c/li\u003e","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mikolajed"},"content":"     *     \u003cli\u003e{@code \"D\"} - {@link Deadline}\u003c/li\u003e","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mikolajed"},"content":"     *     \u003cli\u003eAny other identifier creates a generic {@link Task}\u003c/li\u003e","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mikolajed"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mikolajed"},"content":"     * @param taskAsString a string representation of the task,","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mikolajed"},"content":"     *                     with fields separated by \" | \"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mikolajed"},"content":"     * @return an object of the appropriate task type ({@link ToDo},","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mikolajed"},"content":"     * {@link Event}, {@link Deadline}, or {@link Task})","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mikolajed"},"content":"     * @throws IllegalArgumentException if the string doesn\u0027t have at","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mikolajed"},"content":"     * least two fields or the type identifier is missing","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mikolajed"},"content":"    public Task create(String taskAsString) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mikolajed"},"content":"        String[] fields \u003d taskAsString.split(\" \\\\| \");","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mikolajed"},"content":"        if (fields.length \u003c 2) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mikolajed"},"content":"            throw new IllegalArgumentException(\"Task should have at least 2 fields\");","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mikolajed"},"content":"        }","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mikolajed"},"content":"        String typeIdentifier \u003d fields[0];","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mikolajed"},"content":"        return switch (typeIdentifier) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mikolajed"},"content":"            case \"T\" -\u003e createToDo(fields);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mikolajed"},"content":"            case \"E\" -\u003e createEvent(fields);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mikolajed"},"content":"            case \"D\" -\u003e createDeadline(fields);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mikolajed"},"content":"            default -\u003e createTask(fields);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mikolajed"},"content":"        };","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mikolajed"},"content":"     * Creates a generic {@link Task} from the parsed string fields.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mikolajed"},"content":"     * This is used if no specific type identifier is found in the string.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mikolajed"},"content":"     * @param fields an array of string fields representing the task attributes","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mikolajed"},"content":"     * @return a new {@link Task} object","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mikolajed"},"content":"    private Task createTask(String[] fields) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mikolajed"},"content":"        boolean isDone \u003d Boolean.parseBoolean(fields[0]);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mikolajed"},"content":"        String name \u003d fields[1];","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mikolajed"},"content":"        return new Task(name, isDone);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mikolajed"},"content":"    private ToDo createToDo(String[] fields) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mikolajed"},"content":"        boolean isDone \u003d Boolean.parseBoolean(fields[1]);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mikolajed"},"content":"        String name \u003d fields[2];","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mikolajed"},"content":"        return new ToDo(name, isDone);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mikolajed"},"content":"    private Event createEvent(String[] fields) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mikolajed"},"content":"        boolean isDone \u003d Boolean.parseBoolean(fields[1]);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mikolajed"},"content":"        String name \u003d fields[2];","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mikolajed"},"content":"        String startDate \u003d fields[3];","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mikolajed"},"content":"        String endDate \u003d fields[4];","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mikolajed"},"content":"        return new Event(name, isDone, startDate, endDate);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mikolajed"},"content":"    private Deadline createDeadline(String[] fields) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mikolajed"},"content":"        boolean isDone \u003d Boolean.parseBoolean(fields[1]);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mikolajed"},"content":"        String name \u003d fields[2];","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mikolajed"},"content":"        String dueDate \u003d fields[3];","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mikolajed"},"content":"        return new Deadline(name, isDone, dueDate);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mikolajed"},"content":"}","lastModifiedDate":"2024-09-29","isFullCredit":false}],"authorContributionMap":{"mikolajed":84}},{"path":"src/main/java/pythia/utility/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mikolajed"},"content":"package pythia.utility;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mikolajed"},"content":"import pythia.task.Task;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mikolajed"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mikolajed"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mikolajed"},"content":"/**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mikolajed"},"content":" * Class used for storing and managing a list of {@link Task} objects.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mikolajed"},"content":" * This class allows adding, removing, marking tasks as done, and","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mikolajed"},"content":" * iterating over the task list. It also keeps track of the number of","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mikolajed"},"content":" * remaining tasks that have not been completed.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mikolajed"},"content":" */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mikolajed"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mikolajed"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mikolajed"},"content":"    private int remainingTasks \u003d 0;      // number of tasks which are not done yet","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mikolajed"},"content":"                                                // might be different from array size","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mikolajed"},"content":"     * Constructs an empty {@code TaskList}.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mikolajed"},"content":"    public TaskList() {}","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mikolajed"},"content":"     * Returns the number of tasks that have not been marked as done.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mikolajed"},"content":"     * @return the number of remaining tasks","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mikolajed"},"content":"    public int getNumberOfRemainingTasks() {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mikolajed"},"content":"        return remainingTasks;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mikolajed"},"content":"     * Returns the total number of tasks in the list, regardless of their completion status.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mikolajed"},"content":"     * @return the total number of tasks","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mikolajed"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mikolajed"},"content":"        return taskList.size();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mikolajed"},"content":"     * Adds a new task to the list and increases the count of remaining tasks.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mikolajed"},"content":"     * @param task the {@link Task} to be added to the list","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mikolajed"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mikolajed"},"content":"        taskList.add(task);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mikolajed"},"content":"        remainingTasks++;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mikolajed"},"content":"     * Removes the task at the specified index from the list and decreases the count of remaining tasks.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mikolajed"},"content":"     * @param taskNumber the index of the task to be removed","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mikolajed"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range (less than 0 or greater than or equal to the list size)","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mikolajed"},"content":"    public void remove(int taskNumber) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mikolajed"},"content":"        if (taskNumber \u003c 0 || taskNumber \u003e\u003d taskList.size()) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mikolajed"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mikolajed"},"content":"        }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mikolajed"},"content":"        taskList.remove(taskNumber);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mikolajed"},"content":"        remainingTasks--;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mikolajed"},"content":"     * Returns the task at the specified index in the list.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mikolajed"},"content":"     * @param taskNumber the index of the task to retrieve","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mikolajed"},"content":"     * @return the {@link Task} at the specified index","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mikolajed"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range (less than 0 or greater than or equal to the list size)","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mikolajed"},"content":"    public Task get(int taskNumber) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mikolajed"},"content":"        return taskList.get(taskNumber);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mikolajed"},"content":"     * Marks the task at the specified index as done and decreases the count of remaining tasks.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mikolajed"},"content":"     * @param taskNumber the index of the task to mark as done","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mikolajed"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range (less than 0 or greater than or equal to the list size)","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mikolajed"},"content":"    public void markAsDone(int taskNumber) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mikolajed"},"content":"        if (taskNumber \u003c 0 || taskNumber \u003e\u003d taskList.size()) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mikolajed"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mikolajed"},"content":"        }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mikolajed"},"content":"        taskList.get(taskNumber).markAsDone();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mikolajed"},"content":"        remainingTasks--;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mikolajed"},"content":"     * Returns an iterator over the tasks in the list in proper sequence.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mikolajed"},"content":"     * @return an {@link Iterator} over the tasks in the list","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mikolajed"},"content":"    @Override","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mikolajed"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mikolajed"},"content":"        return taskList.iterator();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mikolajed"},"content":"     * Returns a string representation of the task list. Each task is prefixed with its index number","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mikolajed"},"content":"     * and listed in sequence. The tasks are separated by new lines.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mikolajed"},"content":"     * @return a string representing the task list","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mikolajed"},"content":"    @Override","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mikolajed"},"content":"    public String toString() {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mikolajed"},"content":"        StringBuilder taskListString \u003d new StringBuilder();","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mikolajed"},"content":"        for (int i \u003d 0; i \u003c remainingTasks - 1; i++) {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mikolajed"},"content":"            taskListString.append(i + 1).append(\". \");","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mikolajed"},"content":"            taskListString.append(taskList.get(i).toString());","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mikolajed"},"content":"            taskListString.append(\"\\n\");","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mikolajed"},"content":"        }","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mikolajed"},"content":"        int lastIndex \u003d remainingTasks - 1;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mikolajed"},"content":"        taskListString.append(lastIndex + 1).append(\". \");","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mikolajed"},"content":"        taskListString.append(taskList.get(lastIndex).toString());","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mikolajed"},"content":"        return taskListString.toString();","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mikolajed"},"content":"}","lastModifiedDate":"2024-09-28","isFullCredit":false}],"authorContributionMap":{"mikolajed":118}},{"path":"src/main/java/pythia/utility/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mikolajed"},"content":"package pythia.utility;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mikolajed"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mikolajed"},"content":"/**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mikolajed"},"content":" * A class responsible for handling user interaction and displaying information to the console.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mikolajed"},"content":" * It provides methods to display responses, get user input, and format task lists for output.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mikolajed"},"content":" */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mikolajed"},"content":"public class Ui {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mikolajed"},"content":"    private static Scanner scanner;;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mikolajed"},"content":"     * Initializes the scanner object for reading user input.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mikolajed"},"content":"    public void init() {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mikolajed"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mikolajed"},"content":"     * Prints a formatted response to the console with line separators.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mikolajed"},"content":"     * @param text The message to be printed.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mikolajed"},"content":"    public void printResponse(String text) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mikolajed"},"content":"        String lineSeparator \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mikolajed"},"content":"        text \u003d lineSeparator +  \"\\n\" + text + \"\\n\" + lineSeparator + \"\\n\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mikolajed"},"content":"        String formattedText \u003d text.replaceAll(\"(?m)^\", \"\\t\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mikolajed"},"content":"        System.out.print(formattedText);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mikolajed"},"content":"     * Retrieves a user\u0027s input from the console.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mikolajed"},"content":"     * @return The raw string input from the user.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mikolajed"},"content":"    public String getRequest() {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mikolajed"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mikolajed"},"content":"     * Prints a response for when a task is added, formatting the text to be all lowercase.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mikolajed"},"content":"     * @param text The message to be printed, typically confirming a task addition.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mikolajed"},"content":"    public void printAddedTask(String text) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mikolajed"},"content":"        printResponse(text.toLowerCase());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mikolajed"},"content":"     * Prints the entire task list to the console, including optional comments","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mikolajed"},"content":"     * before and after the list.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mikolajed"},"content":"     * @param taskList The list of tasks to be printed.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mikolajed"},"content":"     * @param commentBefore An optional comment to be printed before the task list.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mikolajed"},"content":"     * @param commentAfter An optional comment to be printed after the task list.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mikolajed"},"content":"    public void printTaskList(TaskList taskList, String commentBefore, String commentAfter) {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mikolajed"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mikolajed"},"content":"        if (commentBefore !\u003d null \u0026\u0026 !commentBefore.isEmpty()) {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mikolajed"},"content":"            response.append(commentBefore).append(\"\\n\");","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mikolajed"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mikolajed"},"content":"        response.append(taskList.toString());","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mikolajed"},"content":"        if (commentAfter !\u003d null \u0026\u0026 !commentAfter.isEmpty()) {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mikolajed"},"content":"            response.append(\"\\n\").append(commentAfter);","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mikolajed"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mikolajed"},"content":"        printResponse(response.toString());","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mikolajed"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"mikolajed":68}},{"path":"src/main/java/pythia/utility/WriteVisitor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mikolajed"},"content":"package pythia.utility;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mikolajed"},"content":"import pythia.task.Deadline;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mikolajed"},"content":"import pythia.task.Event;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mikolajed"},"content":"import pythia.task.Task;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mikolajed"},"content":"import pythia.task.ToDo;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mikolajed"},"content":"/**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mikolajed"},"content":" * A visitor class responsible for converting various task objects ({@link Task}, {@link ToDo},","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mikolajed"},"content":" * {@link Deadline}, {@link Event}) into their respective string representations. The resulting","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mikolajed"},"content":" * string format is suitable for storage in text files.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mikolajed"},"content":" */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mikolajed"},"content":"public class WriteVisitor {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mikolajed"},"content":"     * Generates a string representation of a generic task.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mikolajed"},"content":"     * @param task The task to be converted to a string.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mikolajed"},"content":"     * @return A string representing the task in the format \"doneStatus | taskName\".","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mikolajed"},"content":"    public String visitTask(Task task) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mikolajed"},"content":"        return task.getDone() + \" | \" + task.getName();","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mikolajed"},"content":"     * Generates a string representation of a {@link ToDo} task.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mikolajed"},"content":"     * @param toDo The {@link ToDo} task to be converted to a string.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mikolajed"},"content":"     * @return A string representing the {@link ToDo} task in the format \"T | doneStatus | taskName\".","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mikolajed"},"content":"    public String visitToDo(ToDo toDo) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mikolajed"},"content":"        return \"T\" + \" | \" + visitTask(toDo);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mikolajed"},"content":"     * Generates a string representation of an {@link Event} task, including its start","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mikolajed"},"content":"     * and end dates.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mikolajed"},"content":"     * @param event The {@link Event} task to be converted to a string.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mikolajed"},"content":"     * @return A string representing the {@link Event} task in the format","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mikolajed"},"content":"     *         \"E | doneStatus | taskName | startDate | endDate\".","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mikolajed"},"content":"    public String visitEvent(Event event) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mikolajed"},"content":"        return \"E\" + \" | \" + visitTask(event) + \" | \" + event.getStartDate() + \" | \" + event.getEndDate();","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mikolajed"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mikolajed"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mikolajed"},"content":"     * Generates a string representation of a Deadline task, including its due date.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mikolajed"},"content":"     *","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mikolajed"},"content":"     * @param deadline The {@link Deadline} task to be converted to a string.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mikolajed"},"content":"     * @return A string representing the {@link Deadline} task in the format","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mikolajed"},"content":"     *         \"D | doneStatus | taskName | dueDate\".","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mikolajed"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mikolajed"},"content":"    public String visitDeadline(Deadline deadline) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mikolajed"},"content":"        return \"D\" + \" | \" + visitTask(deadline) + \" | \" + deadline.getDueDate();","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mikolajed"},"content":"    }","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mikolajed"},"content":"}","lastModifiedDate":"2024-09-29","isFullCredit":false}],"authorContributionMap":{"mikolajed":57}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mikolajed"},"content":"list","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mikolajed"},"content":"add read a book","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mikolajed"},"content":"list","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mikolajed"},"content":"todo borrow book","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mikolajed"},"content":"list","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mikolajed"},"content":"mark 2","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mikolajed"},"content":"list","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mikolajed"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mikolajed"},"content":"list","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mikolajed"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mikolajed"},"content":"list","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mikolajed"},"content":"bye","lastModifiedDate":"2024-09-08","isFullCredit":false}],"authorContributionMap":{"mikolajed":12}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mikolajed"},"content":"java -classpath ../bin Pythia \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"mikolajed":1,"-":37}}]
