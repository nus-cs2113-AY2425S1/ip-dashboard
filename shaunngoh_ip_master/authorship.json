[{"path":"data/diana.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shaunngoh"},"content":"T | 0 | read book","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shaunngoh"},"content":"D | 0 | read book | Dec 02 2019 1800","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shaunngoh"},"content":"E | 0 | read book | 2/12/2019 1800 | 3/12/2019 1800","lastModifiedDate":"2024-10-22","isFullCredit":false}],"authorContributionMap":{"shaunngoh":3}},{"path":"docs/DianaUG.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shaunngoh"},"content":"# Diana User Guide","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shaunngoh"},"content":"Diana is a personal assistant that helps you keep track of our tasks.","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shaunngoh"},"content":"## Quick Start","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shaunngoh"},"content":"1. Ensure you Java 17 installed on your computer. ","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shaunngoh"},"content":"2. Download the latest .jar file from [here](jar link)","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shaunngoh"},"content":"3. Copy the file to the folder you want to use as the home folder for Diana","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shaunngoh"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar ip.jar` command to run the application.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shaunngoh"},"content":"5. Type the command in the terminal and press Enter to execute it.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shaunngoh"},"content":"    ","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shaunngoh"},"content":"    Some example commands you can try:","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shaunngoh"},"content":"   1. `list`: Lists all tasks","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shaunngoh"},"content":"   2. `delete 3` : Deletes the 3rd task in the current list ","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shaunngoh"},"content":"   3. `date Oct 19 2019` : Searches through the task list to look for a task that has a deadline dated on Oct 19 2019. ","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shaunngoh"},"content":"   4. `bye` : Exits the programme","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shaunngoh"},"content":"## Features","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shaunngoh"},"content":"\u003e [!NOTE] ","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shaunngoh"},"content":"\u003e - Words in `UPPER_CASE` are the parameters supplied by the user.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shaunngoh"},"content":"\u003e e.g. `todo DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as `todo read book`","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shaunngoh"},"content":"\u003e ","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shaunngoh"},"content":"\u003e - Extraneous parameters for commands that do no take in parameters (such as `list`, `bye`) will be ignored","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shaunngoh"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shaunngoh"},"content":"- displays all the tasks currently in your tasklist. ","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shaunngoh"},"content":"- Format: `list`","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shaunngoh"},"content":"### Completing a task: Mark / Unmark","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shaunngoh"},"content":"- Able to mark a task as completed, or unmark the task. ","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shaunngoh"},"content":"- Format: `mark INDEX`","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shaunngoh"},"content":"Examples: ","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shaunngoh"},"content":"- `mark 1`","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shaunngoh"},"content":"- ![mark](https://github.com/user-attachments/assets/4f3ec920-0cb2-4e1d-822a-d29ce719519c)","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shaunngoh"},"content":"- `unmark 1`","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shaunngoh"},"content":"- ![image](https://github.com/user-attachments/assets/6f5329c6-7ac2-496f-961a-7a0436d938f3)","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shaunngoh"},"content":"### Create a todo task: `todo`","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shaunngoh"},"content":"- creates a todo task without any date specification","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shaunngoh"},"content":"- Format: `todo DESCRIPTION`","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shaunngoh"},"content":"Examples: ","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shaunngoh"},"content":"- `todo read book`","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shaunngoh"},"content":"- ![image](https://github.com/user-attachments/assets/0ac35756-a4eb-4228-9d81-d4b05a46e633)","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shaunngoh"},"content":"### Create a deadline task: `deadline`","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shaunngoh"},"content":"- create a deadline task that you need to complete by a certain date ","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shaunngoh"},"content":"- Format: `deadline DESCRIPTION /by DD/MM/YYYY HHMM`","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shaunngoh"},"content":"Examples: ","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shaunngoh"},"content":"- `deadline read book /by 2/12/2019 1800`","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shaunngoh"},"content":"- ![image](https://github.com/user-attachments/assets/e5f53dc3-a571-4475-a802-6efc084f16a1)","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shaunngoh"},"content":"### Create an event task: `event`","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shaunngoh"},"content":"- create an event task that starts from a certain date and ends on a certain date","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shaunngoh"},"content":"- Format: `event DESCRIPTION /from DD/MM/YYYY HHMM /to DD/MM/YYYY HHMM`","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shaunngoh"},"content":"Examples:","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shaunngoh"},"content":"- `event read book /from 2/12/2019 1800 /to 3/12/2019 1800`","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shaunngoh"},"content":"- ![image](https://github.com/user-attachments/assets/3553574f-7a74-43e2-a8d4-556ec88a8b90)","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shaunngoh"},"content":"### Delete a task: `delete`","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shaunngoh"},"content":"- delete any of the task that is currently within your tasklist","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shaunngoh"},"content":"- Format: `delete INDEX`","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shaunngoh"},"content":"Examples: ","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shaunngoh"},"content":"- `delete 1`","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shaunngoh"},"content":"- ![image](https://github.com/user-attachments/assets/0dfd4d36-1fa5-4ed0-af56-de292f10de87)","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shaunngoh"},"content":"### Find tasks: `find`","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shaunngoh"},"content":"- find tasks based on keywords","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shaunngoh"},"content":"- Format: `find DESCRIPTION`","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shaunngoh"},"content":"Examples: ","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shaunngoh"},"content":"- `find read`","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shaunngoh"},"content":"- ![image](https://github.com/user-attachments/assets/2e5abbe1-9547-4473-b785-176f66786118)","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shaunngoh"},"content":"### Find date: `date`","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shaunngoh"},"content":"- find tasks based on due dates ","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shaunngoh"},"content":"- Format: `date MMM DD YYYY`","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shaunngoh"},"content":"Examples: ","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shaunngoh"},"content":"- `date Dec 03 2019`","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shaunngoh"},"content":"- ![image](https://github.com/user-attachments/assets/074ef13a-e087-49c9-89a7-0238362901fb)","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shaunngoh"},"content":"### Exit programme: `bye`","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shaunngoh"},"content":"- Exits the programme","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"shaunngoh"},"content":"- Format: `bye`","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shaunngoh"},"content":"Examples: ","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shaunngoh"},"content":"- `bye`","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shaunngoh"},"content":"- ![image](https://github.com/user-attachments/assets/9d9cb751-50a0-4f9c-90a0-f5f8991ae704)","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shaunngoh"},"content":"### Saving the data","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shaunngoh"},"content":"- data is automatically saved in the hard disk","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"shaunngoh"},"content":"### Editing the data file ","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"shaunngoh"},"content":"- Advanced users are welcomed to directly edit the data file under `/../data/diana.txt`.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shaunngoh"},"content":"## Summary of Commands","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"shaunngoh"},"content":"| Commands                                             | Example                                              | Output                                                                                    |","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"shaunngoh"},"content":"|------------------------------------------------------|------------------------------------------------------|-------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"shaunngoh"},"content":"| `list`                                               | `list`                                               | ![mark](https://github.com/user-attachments/assets/4f3ec920-0cb2-4e1d-822a-d29ce719519c)  |","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"shaunngoh"},"content":"| `mark INDEX`                                         | `mark 1`                                             | ![image](https://github.com/user-attachments/assets/6f5329c6-7ac2-496f-961a-7a0436d938f3) |","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"shaunngoh"},"content":"| `unmark INDEX`                                       | `unmark 1`                                           | ![image](https://github.com/user-attachments/assets/0ac35756-a4eb-4228-9d81-d4b05a46e633) |","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"shaunngoh"},"content":"| `todo \u003ctask\u003e`                                        | `todo read book`                                     | ![image](https://github.com/user-attachments/assets/0ac35756-a4eb-4228-9d81-d4b05a46e633) |","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"shaunngoh"},"content":"| `event \u003ctask\u003e /from \u003cdate \u0026 time\u003e /to \u003cdate \u0026 time\u003e` | `event read book /from 2/12/2019 1800 /to 3/12/2019` | ![image](https://github.com/user-attachments/assets/3553574f-7a74-43e2-a8d4-556ec88a8b90) |","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"shaunngoh"},"content":"| `deadline \u003ctask\u003e /by \u003cdate \u0026 time\u003e`                  | `deadline read book /by 2/12/2019 1800`              | ![image](https://github.com/user-attachments/assets/e5f53dc3-a571-4475-a802-6efc084f16a1) |","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"shaunngoh"},"content":"| `delete \u003cindex\u003e`                                     | `delete 1`                                           | ![image](https://github.com/user-attachments/assets/0dfd4d36-1fa5-4ed0-af56-de292f10de87) |","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"shaunngoh"},"content":"| `find \u003ctask\u003e`                                        | `find read`                                          | ![image](https://github.com/user-attachments/assets/2e5abbe1-9547-4473-b785-176f66786118) |","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"shaunngoh"},"content":"| `date \u003cdate\u003e`                                        | `date Dec 03 2019`                                   | ![image](https://github.com/user-attachments/assets/074ef13a-e087-49c9-89a7-0238362901fb) |","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"shaunngoh"},"content":"| `bye`                                                | `bye`                                                | ![image](https://github.com/user-attachments/assets/9d9cb751-50a0-4f9c-90a0-f5f8991ae704) |","lastModifiedDate":"2024-10-22","isFullCredit":false}],"authorContributionMap":{"shaunngoh":105,"-":8}},{"path":"src/main/java/Diana.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaunngoh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shaunngoh"},"content":"public class Diana {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shaunngoh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shaunngoh"},"content":"        DianaAssistant dianaAssistant \u003d null;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shaunngoh"},"content":"        try {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shaunngoh"},"content":"            dianaAssistant \u003d new DianaAssistant();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shaunngoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shaunngoh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shaunngoh"},"content":"        if (dianaAssistant !\u003d null) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shaunngoh"},"content":"            dianaAssistant.interact();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shaunngoh"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"shaunngoh":15}},{"path":"src/main/java/DianaAssistant.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaunngoh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shaunngoh"},"content":"/**","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shaunngoh"},"content":" * The main entry point for the Diana task management assistant.","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shaunngoh"},"content":" *","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shaunngoh"},"content":" * This class handles the primary interaction with the user, including:","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shaunngoh"},"content":" * - Printing welcome and goodbye messages","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shaunngoh"},"content":" * - Reading user input","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shaunngoh"},"content":" * - Parsing and executing user commands","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shaunngoh"},"content":" * - Managing task list persistence","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shaunngoh"},"content":" */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shaunngoh"},"content":"public class DianaAssistant {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shaunngoh"},"content":"    private TaskList tasklist;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shaunngoh"},"content":"    private Ui ui;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shaunngoh"},"content":"    private Parser parser;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shaunngoh"},"content":"     * Constructor for DianaAssistant.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shaunngoh"},"content":"     * Initializes the task list and UI components.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shaunngoh"},"content":"     * Attempts to load tasks from storage, and if unsuccessful,","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shaunngoh"},"content":"     * initializes an empty task list.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shaunngoh"},"content":"     * @throws IOException if there is an error during task loading.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shaunngoh"},"content":"    public DianaAssistant() throws IOException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shaunngoh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shaunngoh"},"content":"        tasklist \u003d new TaskList();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shaunngoh"},"content":"        try {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shaunngoh"},"content":"            tasklist \u003d Storage.loadTasks();  // Load tasks from file","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shaunngoh"},"content":"            parser \u003d new Parser(tasklist);   // Initialize the parser with tasks","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shaunngoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shaunngoh"},"content":"            // If loading fails, show error message and use an empty task list","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shaunngoh"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shaunngoh"},"content":"            tasklist \u003d new TaskList();       // Initialize an empty task list","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shaunngoh"},"content":"            parser \u003d new Parser(tasklist);   // Initialize parser with empty task list","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shaunngoh"},"content":"     * Starts interaction with the user.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shaunngoh"},"content":"     * This method continuously reads user input, processes commands,","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shaunngoh"},"content":"     * and saves tasks upon exit.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shaunngoh"},"content":"    public void interact() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shaunngoh"},"content":"        ui.printWelcomeMessage();  // Show welcome message","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shaunngoh"},"content":"        String input;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shaunngoh"},"content":"        while (true) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shaunngoh"},"content":"            input \u003d ui.readInput();  // Read user input","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shaunngoh"},"content":"            if (\"bye\".equals(input)) {  // Exit condition","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shaunngoh"},"content":"                try {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shaunngoh"},"content":"                    Storage.saveTasks(tasklist);  // Save tasks before exit","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shaunngoh"},"content":"                } catch (IOException e) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shaunngoh"},"content":"                    System.out.println(\"Saving tasks failed: \" + e.getMessage());","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shaunngoh"},"content":"                }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shaunngoh"},"content":"                break;  // Exit the loop when \"bye\" is entered","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shaunngoh"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shaunngoh"},"content":"            parser.determineCommand(input);  // Process the command","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shaunngoh"},"content":"        ui.printGoodByeMessage();  // Show goodbye message","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shaunngoh"},"content":"        ui.closeScanner();  // Close the input scanner","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shaunngoh"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"shaunngoh":65}},{"path":"src/main/java/DianaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaunngoh"},"content":"public class DianaException extends Exception {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shaunngoh"},"content":"    public DianaException(String message) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shaunngoh"},"content":"        super(message);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shaunngoh"},"content":"}","lastModifiedDate":"2024-09-09","isFullCredit":false}],"authorContributionMap":{"shaunngoh":5}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaunngoh"},"content":"/**","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shaunngoh"},"content":" * Parses user input and determines the corresponding task list command","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shaunngoh"},"content":" *","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shaunngoh"},"content":" * This class recieves user input, extract the command keyword, and delegate the","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shaunngoh"},"content":" * execution of the command to the appropriate method in the TaskList class","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shaunngoh"},"content":" */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shaunngoh"},"content":"public class Parser {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shaunngoh"},"content":"    private String input;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shaunngoh"},"content":"    private TaskList tasklist;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shaunngoh"},"content":"    public Parser(TaskList tasklist) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shaunngoh"},"content":"        this.tasklist \u003d tasklist;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shaunngoh"},"content":"    public String processCommand(String input) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shaunngoh"},"content":"        return input.split(\" \")[0];","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shaunngoh"},"content":"    public void determineCommand(String input) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shaunngoh"},"content":"        String inputTrim \u003d input.trim();","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shaunngoh"},"content":"        try {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shaunngoh"},"content":"            switch (processCommand(inputTrim)) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shaunngoh"},"content":"            case \"list\":","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shaunngoh"},"content":"                tasklist.printList();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shaunngoh"},"content":"                break;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shaunngoh"},"content":"            case \"mark\":","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shaunngoh"},"content":"                tasklist.toMark(inputTrim, true);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shaunngoh"},"content":"                break;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shaunngoh"},"content":"            case \"unmark\":","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shaunngoh"},"content":"                tasklist.toMark(inputTrim, false);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shaunngoh"},"content":"                break;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shaunngoh"},"content":"            case \"todo\":","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shaunngoh"},"content":"                tasklist.addTodo(inputTrim);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shaunngoh"},"content":"                break;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shaunngoh"},"content":"            case \"event\":","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shaunngoh"},"content":"                tasklist.addEvent(inputTrim);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shaunngoh"},"content":"                break;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shaunngoh"},"content":"            case \"deadline\":","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shaunngoh"},"content":"                tasklist.addDeadline(inputTrim);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shaunngoh"},"content":"                break;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shaunngoh"},"content":"            case \"delete\":","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shaunngoh"},"content":"                tasklist.deleteTask(inputTrim);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shaunngoh"},"content":"                break;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shaunngoh"},"content":"            case \"find\":","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shaunngoh"},"content":"                tasklist.findTasks(input.substring(\"find\".length()).trim());","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shaunngoh"},"content":"                break;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shaunngoh"},"content":"            case \"date\":","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shaunngoh"},"content":"                tasklist.findDueDate(inputTrim);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shaunngoh"},"content":"                break;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shaunngoh"},"content":"            default:","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shaunngoh"},"content":"                throw new DianaException(\"Unknown Command: \" + inputTrim);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shaunngoh"},"content":"            }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shaunngoh"},"content":"        } catch (DianaException e) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shaunngoh"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shaunngoh"},"content":"}","lastModifiedDate":"2024-10-07","isFullCredit":false}],"authorContributionMap":{"shaunngoh":58}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaunngoh"},"content":"import java.io.*;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shaunngoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shaunngoh"},"content":"import java.util.List;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shaunngoh"},"content":"import task.*;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shaunngoh"},"content":"/**","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shaunngoh"},"content":" * Handles saving and loading tasks to and from a file.","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shaunngoh"},"content":" */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shaunngoh"},"content":"public class Storage {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shaunngoh"},"content":"    private static final String FILE_PATH \u003d \"./data/diana.txt\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shaunngoh"},"content":"     * Saves all tasks from the TaskList to a file at the specified path.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shaunngoh"},"content":"     * The method will create the directories and file if they don\u0027t exist.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shaunngoh"},"content":"     * @param tasks TaskList object containing all tasks to be saved.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shaunngoh"},"content":"     * @throws IOException If an I/O error occurs during file writing.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shaunngoh"},"content":"    public static void saveTasks(TaskList tasks) throws IOException {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shaunngoh"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shaunngoh"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shaunngoh"},"content":"            file.getParentFile().mkdirs(); // Create directory if it doesn\u0027t exist","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shaunngoh"},"content":"        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shaunngoh"},"content":"        for (Task task : tasks.getTasks()) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shaunngoh"},"content":"            writer.write(task.toFileFormat()); // Write each task in file format","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shaunngoh"},"content":"            writer.newLine();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shaunngoh"},"content":"        writer.close(); // Close the writer to avoid memory leaks","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shaunngoh"},"content":"     * Loads tasks from a file at the specified path and returns them as a TaskList object.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shaunngoh"},"content":"     * If the file does not exist, it returns an empty TaskList.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shaunngoh"},"content":"     * @return TaskList containing the loaded tasks.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shaunngoh"},"content":"     * @throws IOException If an I/O error occurs during file reading.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shaunngoh"},"content":"    public static TaskList loadTasks() throws IOException {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shaunngoh"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shaunngoh"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shaunngoh"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shaunngoh"},"content":"            System.out.println(\"File does not exist\");","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shaunngoh"},"content":"            return tasks; // Return empty TaskList if the file doesn\u0027t exist","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shaunngoh"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shaunngoh"},"content":"        String line;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shaunngoh"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shaunngoh"},"content":"            try {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shaunngoh"},"content":"                tasks.addTask(parseTask(line)); // Parse and add each task","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shaunngoh"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shaunngoh"},"content":"                System.out.println(\"Skipped malformed task: \" + line); // Handle invalid tasks","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shaunngoh"},"content":"            }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shaunngoh"},"content":"        System.out.println(\"Loaded \" + tasks.getTasks().size() + \" tasks\");","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shaunngoh"},"content":"        reader.close(); // Close the reader to avoid memory leaks","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shaunngoh"},"content":"        return tasks;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shaunngoh"},"content":"     * Parses a line of text from the file into a Task object.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shaunngoh"},"content":"     * The line must be formatted correctly or an exception will be thrown.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shaunngoh"},"content":"     * @param line The line of text to be parsed.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shaunngoh"},"content":"     * @return A Task object created from the parsed data.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shaunngoh"},"content":"     * @throws IllegalArgumentException If the task format is invalid.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shaunngoh"},"content":"    private static Task parseTask(String line) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shaunngoh"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shaunngoh"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shaunngoh"},"content":"            throw new IllegalArgumentException(\"Invalid task format: \" + line);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shaunngoh"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shaunngoh"},"content":"        if (!taskType.equals(\"T\") \u0026\u0026 !taskType.equals(\"D\") \u0026\u0026 !taskType.equals(\"E\")) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shaunngoh"},"content":"            throw new IllegalArgumentException(\"Invalid task type: \" + line);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shaunngoh"},"content":"        String taskCompletion \u003d parts[1];","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shaunngoh"},"content":"        if (!taskCompletion.equals(\"1\") \u0026\u0026 !taskCompletion.equals(\"0\")) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shaunngoh"},"content":"            throw new IllegalArgumentException(\"Invalid marking format: \" + line);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shaunngoh"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shaunngoh"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"shaunngoh"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shaunngoh"},"content":"            throw new IllegalArgumentException(\"Invalid description: \" + line);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"shaunngoh"},"content":"        Task task;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"shaunngoh"},"content":"        switch (taskType) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shaunngoh"},"content":"        case \"T\":","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shaunngoh"},"content":"            if (parts.length \u003e 3) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"shaunngoh"},"content":"                throw new IllegalArgumentException(\"Invalid todo format: \" + line);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"shaunngoh"},"content":"            }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"shaunngoh"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"shaunngoh"},"content":"            break;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"shaunngoh"},"content":"        case \"D\":","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"shaunngoh"},"content":"            if (parts.length \u003c 4) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"shaunngoh"},"content":"                throw new IllegalArgumentException(\"Invalid deadline format: \" + line);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"shaunngoh"},"content":"            }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"shaunngoh"},"content":"            String by \u003d parts[3];","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"shaunngoh"},"content":"            task \u003d new Deadline(description, by);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"shaunngoh"},"content":"            break;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"shaunngoh"},"content":"        case \"E\":","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"shaunngoh"},"content":"            if (parts.length \u003c 5) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"shaunngoh"},"content":"                throw new IllegalArgumentException(\"Invalid event format: \" + line);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"shaunngoh"},"content":"            }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"shaunngoh"},"content":"            String from \u003d parts[3];","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"shaunngoh"},"content":"            String to \u003d parts[4];","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"shaunngoh"},"content":"            task \u003d new Event(description, from, to);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"shaunngoh"},"content":"            break;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"shaunngoh"},"content":"        default:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"shaunngoh"},"content":"            task \u003d new Task(description);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"shaunngoh"},"content":"            System.out.println(\"Unknown task type: \" + taskType);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"shaunngoh"},"content":"        if (isDone) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"shaunngoh"},"content":"            task.markAsDone();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"shaunngoh"},"content":"        return task;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"shaunngoh"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"shaunngoh":132}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaunngoh"},"content":"import task.Deadline;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shaunngoh"},"content":"import task.Event;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shaunngoh"},"content":"import task.Task;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shaunngoh"},"content":"import task.Todo;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shaunngoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shaunngoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shaunngoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shaunngoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shaunngoh"},"content":"import java.util.List;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shaunngoh"},"content":"/**","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shaunngoh"},"content":" * Represents a collection of tasks.","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shaunngoh"},"content":" *","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shaunngoh"},"content":" * Provides methods for adding, deleting, marking tasks, and finding tasks based on keywords or due dates.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shaunngoh"},"content":" */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shaunngoh"},"content":"public class TaskList {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shaunngoh"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shaunngoh"},"content":"    private Ui ui;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shaunngoh"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shaunngoh"},"content":"     * Initializes a new TaskList with an empty task collection and sets up the Ui component.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shaunngoh"},"content":"    public TaskList() {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shaunngoh"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shaunngoh"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shaunngoh"},"content":"     * Gets the list of tasks.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shaunngoh"},"content":"     * @return The current list of tasks.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shaunngoh"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shaunngoh"},"content":"        return tasks;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shaunngoh"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shaunngoh"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shaunngoh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shaunngoh"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shaunngoh"},"content":"     * Prints the entire task list.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shaunngoh"},"content":"     * The method prints each task in the task list along with its index.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shaunngoh"},"content":"    public void printList() {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shaunngoh"},"content":"        ui.printEnclosure();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shaunngoh"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shaunngoh"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shaunngoh"},"content":"            System.out.println((i + 1) + \". \" + task.toString());","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shaunngoh"},"content":"        ui.printEnclosure();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shaunngoh"},"content":"     * Finds tasks that contain a specific keyword in their description.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shaunngoh"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shaunngoh"},"content":"    public void findTasks(String keyword) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shaunngoh"},"content":"        int index \u003d 1;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shaunngoh"},"content":"        System.out.println(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shaunngoh"},"content":"        ui.printEnclosure();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shaunngoh"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shaunngoh"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shaunngoh"},"content":"                System.out.println(index++ + \". \" + task.toString());","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shaunngoh"},"content":"            }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shaunngoh"},"content":"        ui.printEnclosure();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shaunngoh"},"content":"        if (index \u003d\u003d 1) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shaunngoh"},"content":"            System.out.println(\"No tasks found.\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shaunngoh"},"content":"     * Finds tasks that are due on a specific date.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shaunngoh"},"content":"     * @param input The input containing the target date.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shaunngoh"},"content":"     * @throws DianaException If the date format is invalid.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"shaunngoh"},"content":"    public void findDueDate(String input) throws DianaException {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shaunngoh"},"content":"        String dueDate \u003d input.substring(\"date\".length()).trim();","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shaunngoh"},"content":"        LocalDate targetDate;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shaunngoh"},"content":"        try {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shaunngoh"},"content":"            targetDate \u003d LocalDate.parse(dueDate, DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"shaunngoh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shaunngoh"},"content":"            throw new DianaException(\"Invalid date format, please use MMM dd yyyy.\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"shaunngoh"},"content":"        ui.printEnclosure();","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"shaunngoh"},"content":"        int i \u003d 1;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shaunngoh"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shaunngoh"},"content":"            if (task.getDueDate().toLocalDate().equals(targetDate)) {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"shaunngoh"},"content":"                System.out.println((i++) + \". \" + task.toString());","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"shaunngoh"},"content":"            }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"shaunngoh"},"content":"        if (i \u003d\u003d 1) {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"shaunngoh"},"content":"            System.out.println(\"No tasks found on: \" + dueDate);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"shaunngoh"},"content":"        ui.printEnclosure();","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"shaunngoh"},"content":"     * Marks or unmarks a task based on user input.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"shaunngoh"},"content":"     * @param input      The user input specifying the task number.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"shaunngoh"},"content":"     * @param shouldMark Whether to mark or unmark the task.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"shaunngoh"},"content":"     * @throws DianaException If the task number is invalid or the task is already marked/unmarked.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"shaunngoh"},"content":"    public void toMark(String input, boolean shouldMark) throws DianaException {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"shaunngoh"},"content":"        try {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"shaunngoh"},"content":"            String substring \u003d input.substring(input.indexOf(\" \") + 1);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"shaunngoh"},"content":"            int taskNum \u003d Integer.parseInt(substring) - 1;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"shaunngoh"},"content":"            if (taskNum \u003d\u003d -1) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"shaunngoh"},"content":"                throw new DianaException(\"Task number cannot be zero.\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"shaunngoh"},"content":"            }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"shaunngoh"},"content":"            if (taskNum \u003c -1) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"shaunngoh"},"content":"                throw new DianaException(\"Task number cannot be negative.\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"shaunngoh"},"content":"            }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"shaunngoh"},"content":"            if (taskNum \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"shaunngoh"},"content":"                throw new DianaException(\"Task number must be less than \" + tasks.size());","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"shaunngoh"},"content":"            }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"shaunngoh"},"content":"            Task task \u003d tasks.get(taskNum);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"shaunngoh"},"content":"            if (shouldMark) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"shaunngoh"},"content":"                if (task.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"shaunngoh"},"content":"                    throw new DianaException(\"Task is already marked.\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"shaunngoh"},"content":"                }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"shaunngoh"},"content":"                task.markAsDone();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"shaunngoh"},"content":"                ui.printEnclosure();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"shaunngoh"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done\\n\" + task.toString());","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"shaunngoh"},"content":"                ui.printEnclosure();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"shaunngoh"},"content":"            } else {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"shaunngoh"},"content":"                if (task.getStatusIcon().equals(\" \")) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"shaunngoh"},"content":"                    throw new DianaException(\"You cannot unmark a task that is already unmarked.\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"shaunngoh"},"content":"                }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"shaunngoh"},"content":"                task.markAsNotDone();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"shaunngoh"},"content":"                ui.printEnclosure();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"shaunngoh"},"content":"                System.out.println(\"Okay, I\u0027ve marked this task as not done yet\\n\" + task.toString());","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"shaunngoh"},"content":"                ui.printEnclosure();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"shaunngoh"},"content":"            }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"shaunngoh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"shaunngoh"},"content":"            System.out.println(\"Number specified must be an integer.\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"shaunngoh"},"content":"     * Prints a message confirming that a task was added and displays the updated task list.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"shaunngoh"},"content":"     * @param description The description of the added task.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"shaunngoh"},"content":"    public void printAddedTask(String description) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"shaunngoh"},"content":"        ui.printEnclosure();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"shaunngoh"},"content":"        System.out.println(\"Got it! I\u0027ve added this task:\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"shaunngoh"},"content":"        System.out.println(description);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"shaunngoh"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"shaunngoh"},"content":"        printList();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"shaunngoh"},"content":"     * Adds a new Todo task based on the user\u0027s input.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"shaunngoh"},"content":"     * @param input The user input specifying the todo task.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"shaunngoh"},"content":"     * @throws DianaException If the todo description is empty.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"shaunngoh"},"content":"    public void addTodo(String input) throws DianaException {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"shaunngoh"},"content":"        String description \u003d input.substring(\"todo\".length()).trim();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"shaunngoh"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"shaunngoh"},"content":"            throw new DianaException(\"Description of todo task cannot be empty.\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"shaunngoh"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"shaunngoh"},"content":"        tasks.add(todo);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"shaunngoh"},"content":"        printAddedTask(description);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"shaunngoh"},"content":"     * Adds a new Deadline task based on the user\u0027s input.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"shaunngoh"},"content":"     * @param input The user input specifying the deadline task.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"shaunngoh"},"content":"     * @throws DianaException If the description or format is invalid.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"shaunngoh"},"content":"    public void addDeadline(String input) throws DianaException {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"shaunngoh"},"content":"        if (input.substring(\"deadline\".length()).trim().isEmpty()) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"shaunngoh"},"content":"            throw new DianaException(\"Description of deadline task cannot be empty.\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"shaunngoh"},"content":"        if (input.contains(\"/by\")) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"shaunngoh"},"content":"            String[] parts \u003d input.split(\"/by\", 2);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"shaunngoh"},"content":"            String description \u003d parts[0].substring(\"deadline\".length()).trim();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"shaunngoh"},"content":"            String by \u003d parts[1].trim();","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"shaunngoh"},"content":"            Task deadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"shaunngoh"},"content":"            tasks.add(deadline);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"shaunngoh"},"content":"            printAddedTask(description);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"shaunngoh"},"content":"        } else {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"shaunngoh"},"content":"            throw new DianaException(\"Format Invalid. Please use the following format: deadline \u003cdescription\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"shaunngoh"},"content":"     * Adds a new Event task based on the user\u0027s input.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"shaunngoh"},"content":"     * @param input The user input specifying the event task.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"shaunngoh"},"content":"     * @throws DianaException If the description or format is invalid.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"shaunngoh"},"content":"    public void addEvent(String input) throws DianaException {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"shaunngoh"},"content":"        if (input.substring(\"event\".length()).trim().isEmpty()) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"shaunngoh"},"content":"            throw new DianaException(\"Description of event task cannot be empty.\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"shaunngoh"},"content":"        if (input.contains(\"/from\") \u0026\u0026 input.contains(\"/to\")) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"shaunngoh"},"content":"            String[] parts \u003d input.split(\"/from\", 2);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"shaunngoh"},"content":"            String description \u003d parts[0].substring(\"event\".length()).trim();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"shaunngoh"},"content":"            String[] fromto \u003d parts[1].split(\"/to\", 2);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"shaunngoh"},"content":"            String from \u003d fromto[0].trim();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"shaunngoh"},"content":"            String to \u003d fromto[1].trim();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"shaunngoh"},"content":"            Task event \u003d new Event(description, from, to);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"shaunngoh"},"content":"            tasks.add(event);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"shaunngoh"},"content":"            printAddedTask(description);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"shaunngoh"},"content":"        } else {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"shaunngoh"},"content":"            throw new DianaException(\"Format Invalid. Please use the following format: event \u003cdescription\u003e /from \u003cstart time\u003e /to \u003cend time\u003e\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"shaunngoh"},"content":"     * Deletes a task from the task list based on the user\u0027s input.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"shaunngoh"},"content":"     * @param input The user input specifying the task to be deleted.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"shaunngoh"},"content":"     * @throws DianaException If the task number is invalid.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"shaunngoh"},"content":"    public void deleteTask(String input) throws DianaException {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"shaunngoh"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"shaunngoh"},"content":"            throw new DianaException(\"Task list is empty.\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"shaunngoh"},"content":"        try {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"shaunngoh"},"content":"            String substring \u003d input.substring(input.indexOf(\" \") + 1);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"shaunngoh"},"content":"            int taskNum \u003d Integer.parseInt(substring) - 1;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"shaunngoh"},"content":"            if (taskNum \u003d\u003d -1) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"shaunngoh"},"content":"                throw new DianaException(\"Task number cannot be zero.\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"shaunngoh"},"content":"            }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"shaunngoh"},"content":"            if (taskNum \u003c -1) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"shaunngoh"},"content":"                throw new DianaException(\"Task number cannot be negative.\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"shaunngoh"},"content":"            }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"shaunngoh"},"content":"            if (taskNum \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"shaunngoh"},"content":"                throw new DianaException(\"Task number must be less than \" + tasks.size());","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"shaunngoh"},"content":"            }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"shaunngoh"},"content":"            System.out.println(\"Task: \" + tasks.get(taskNum).toString() + \" has been deleted.\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"shaunngoh"},"content":"            tasks.remove(taskNum);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"shaunngoh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"shaunngoh"},"content":"            System.out.println(\"Number specified must be an integer.\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"shaunngoh"},"content":"}","lastModifiedDate":"2024-10-07","isFullCredit":false}],"authorContributionMap":{"shaunngoh":269}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaunngoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shaunngoh"},"content":"/**","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shaunngoh"},"content":" * Handles displaying messages on the command-line interface (CLI) for the Diana assistant.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shaunngoh"},"content":" *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shaunngoh"},"content":" * This class is responsible for reading user input and displaying various messages,","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shaunngoh"},"content":" * such as welcome and goodbye messages, task-related instructions, and error messages.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shaunngoh"},"content":" */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shaunngoh"},"content":"public class Ui {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shaunngoh"},"content":"    private static final String ENCLOSURE \u003d \"------------------------------\";","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shaunngoh"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shaunngoh"},"content":"     * Constructor for the Ui class.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shaunngoh"},"content":"     * Initializes a new Scanner instance for reading user input from the command line.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shaunngoh"},"content":"    public Ui() {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shaunngoh"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shaunngoh"},"content":"     * Reads user input from the command line.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shaunngoh"},"content":"     * @return The user\u0027s input as a String.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shaunngoh"},"content":"    public String readInput() {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shaunngoh"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shaunngoh"},"content":"     * Closes the Scanner to release system resources.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shaunngoh"},"content":"    public void closeScanner() {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shaunngoh"},"content":"        scanner.close();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shaunngoh"},"content":"     * Prints the welcome message along with the list of commands that the user can execute.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shaunngoh"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shaunngoh"},"content":"        printEnclosure();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shaunngoh"},"content":"        System.out.println(\"Hello, I am Diana! A personal assistant that helps you keep track of your tasks :)\");","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shaunngoh"},"content":"        System.out.println(\"Here are the list of things that Diana can do for you:\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shaunngoh"},"content":"        printListofCommands();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shaunngoh"},"content":"        printEnclosure();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shaunngoh"},"content":"     * Prints the list of commands available for the user to interact with the task manager.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shaunngoh"},"content":"    public void printListofCommands() {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shaunngoh"},"content":"        System.out.println(\"1. Create a todo task eg. [todo read book]\");","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shaunngoh"},"content":"        System.out.println(\"2. Create an event task eg. [event read book /from 2/12/2019 1800 /to 3/12/2019 1800]\");","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shaunngoh"},"content":"        System.out.println(\"3. Create a deadline task eg. [deadline read book /by 2/12/2019 1800]\");","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shaunngoh"},"content":"        System.out.println(\"4. Type either mark \u003cindex\u003e or unmark \u003cindex\u003e to indicate the completion rate of your task\");","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shaunngoh"},"content":"        System.out.println(\"5. Delete a task eg. [delete 1]\");","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shaunngoh"},"content":"        System.out.println(\"6. Type list to view the your list of tasks.\");","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shaunngoh"},"content":"        System.out.println(\"7. Type bye to exit the programme.\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shaunngoh"},"content":"        System.out.println(\"8. Type find \u003ctask\u003e to find tasks with specific keywords.\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shaunngoh"},"content":"        System.out.println(\"9. Type date \u003cdate\u003e to find tasks on specific dates.\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shaunngoh"},"content":"     * Prints an error message to notify the user about errors in command execution or task processing.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shaunngoh"},"content":"     * @param errorMessage The error message to be displayed.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shaunngoh"},"content":"    public void printErrorMessage(String errorMessage) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shaunngoh"},"content":"        System.out.println(\"Error: \" + errorMessage);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shaunngoh"},"content":"     * Prints an enclosure line (a line of dashes) to visually separate output sections.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shaunngoh"},"content":"    public void printEnclosure() {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shaunngoh"},"content":"        System.out.println(ENCLOSURE);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shaunngoh"},"content":"     * Prints a goodbye message when the user exits the application.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shaunngoh"},"content":"    public void printGoodByeMessage() {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shaunngoh"},"content":"        System.out.println(\"Goodbye!\");","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shaunngoh"},"content":"     * Prints an error message if loading tasks from storage fails.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shaunngoh"},"content":"     * This is used to inform the user that tasks couldn\u0027t be loaded and an empty list is being used instead.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shaunngoh"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shaunngoh"},"content":"        System.out.println(\"Error loading tasks, reverting to empty list.\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shaunngoh"},"content":"}","lastModifiedDate":"2024-10-07","isFullCredit":false}],"authorContributionMap":{"shaunngoh":93}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaunngoh"},"content":"package task;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shaunngoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shaunngoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shaunngoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shaunngoh"},"content":"/**","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shaunngoh"},"content":" * Represents a task with a specific deadline.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shaunngoh"},"content":" *","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shaunngoh"},"content":" * This class encapsulates a task description and a due date, handling different date formats.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shaunngoh"},"content":" */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shaunngoh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shaunngoh"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shaunngoh"},"content":"     * Constructor for the Deadline task.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shaunngoh"},"content":"     * Attempts to parse the provided due date string using the default date format.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shaunngoh"},"content":"     * If the default format fails, it tries the alternate format.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shaunngoh"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shaunngoh"},"content":"     * @param by          The due date/time of the task in String format.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shaunngoh"},"content":"     * @throws IllegalArgumentException If both default and alternate date parsing fail.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shaunngoh"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shaunngoh"},"content":"        super(description);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shaunngoh"},"content":"        try {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shaunngoh"},"content":"            this.by \u003d LocalDateTime.parse(by, DEFAULT_FORMATTER);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shaunngoh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shaunngoh"},"content":"            try {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shaunngoh"},"content":"                this.by \u003d LocalDateTime.parse(by, ALTERNATE_FORMATTER);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shaunngoh"},"content":"            } catch (DateTimeParseException e2) {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shaunngoh"},"content":"                throw new IllegalArgumentException(\"Invalid date format. Please provide a valid date in the required format.\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shaunngoh"},"content":"            }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shaunngoh"},"content":"     * Returns the formatted due date for display.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shaunngoh"},"content":"     * @return The due date in the format \"MMM dd yyyy HH:mm\".","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shaunngoh"},"content":"    public String getFormattedDate() {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shaunngoh"},"content":"        return this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shaunngoh"},"content":"     * Returns the due date of the task.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shaunngoh"},"content":"     * @return The due date of the task as a LocalDateTime object.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shaunngoh"},"content":"    @Override","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shaunngoh"},"content":"    public LocalDateTime getDueDate() {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shaunngoh"},"content":"        return this.by;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shaunngoh"},"content":"     * Converts the deadline task to a format suitable for file storage.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shaunngoh"},"content":"     * This includes the task type, description, and the formatted due date.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shaunngoh"},"content":"     * @return A string representing the deadline task in file storage format.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shaunngoh"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shaunngoh"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shaunngoh"},"content":"        return super.toFileFormat() + \" | \" + by.format(DISPLAY_FORMATTER);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shaunngoh"},"content":"     * Returns the task type for this deadline task, which is \"D\" for Deadline.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shaunngoh"},"content":"     * @return The task type string \"D\".","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shaunngoh"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shaunngoh"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shaunngoh"},"content":"        return \"D\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shaunngoh"},"content":"     * Returns a string representation of the deadline task for display in the CLI.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shaunngoh"},"content":"     * The string includes the task type, description, and the formatted due date.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shaunngoh"},"content":"     * @return A formatted string representing the deadline task.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shaunngoh"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shaunngoh"},"content":"    public String toString() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shaunngoh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getFormattedDate() + \")\";","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shaunngoh"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"shaunngoh":87}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaunngoh"},"content":"package task;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shaunngoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shaunngoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shaunngoh"},"content":"/**","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shaunngoh"},"content":" * Represents an event task with a specific start and end date.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shaunngoh"},"content":" *","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shaunngoh"},"content":" * This class extends the Task class, encapsulating the task description,","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shaunngoh"},"content":" * and includes additional details such as a start date (from) and an end date (to).","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shaunngoh"},"content":" */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shaunngoh"},"content":"public class Event extends Task {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shaunngoh"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shaunngoh"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shaunngoh"},"content":"     * Constructor for the Event task.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shaunngoh"},"content":"     * Attempts to parse the provided from and to date strings using the default date format.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shaunngoh"},"content":"     * If the default format fails, it tries the alternate format.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shaunngoh"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shaunngoh"},"content":"     * @param from        The start date/time of the event in String format.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shaunngoh"},"content":"     * @param to          The end date/time of the event in String format.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shaunngoh"},"content":"     * @throws IllegalArgumentException If both default and alternate date parsing fail.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shaunngoh"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shaunngoh"},"content":"        super(description);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shaunngoh"},"content":"        try {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shaunngoh"},"content":"            this.from \u003d LocalDateTime.parse(from, DEFAULT_FORMATTER);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shaunngoh"},"content":"            this.to \u003d LocalDateTime.parse(to, DEFAULT_FORMATTER);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shaunngoh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shaunngoh"},"content":"            try {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shaunngoh"},"content":"                this.from \u003d LocalDateTime.parse(from, ALTERNATE_FORMATTER);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shaunngoh"},"content":"                this.to \u003d LocalDateTime.parse(to, ALTERNATE_FORMATTER);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shaunngoh"},"content":"            } catch (DateTimeParseException e2) {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shaunngoh"},"content":"                throw new IllegalArgumentException(\"Invalid date format. Please provide a valid date in the required format.\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shaunngoh"},"content":"            }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shaunngoh"},"content":"        }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shaunngoh"},"content":"     * Returns the due date of the event, which is the end date/time (to).","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shaunngoh"},"content":"     * @return The end date/time of the event.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shaunngoh"},"content":"    @Override","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shaunngoh"},"content":"    public LocalDateTime getDueDate() {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shaunngoh"},"content":"        return this.to;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shaunngoh"},"content":"     * Converts the event to a format suitable for file storage.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shaunngoh"},"content":"     * This includes the task type, description, and the formatted start and end dates.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shaunngoh"},"content":"     * @return A string representing the event in file storage format.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shaunngoh"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shaunngoh"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shaunngoh"},"content":"        return super.toFileFormat() + \" | \" + from.format(DEFAULT_FORMATTER) + \" | \" + to.format(DEFAULT_FORMATTER);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shaunngoh"},"content":"     * Returns the task type for this event, which is \"E\" for Event.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shaunngoh"},"content":"     * @return The task type string \"E\".","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shaunngoh"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shaunngoh"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shaunngoh"},"content":"        return \"E\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shaunngoh"},"content":"     * Returns a string representation of the event for display in the CLI.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shaunngoh"},"content":"     * The string includes the task type, description, and the formatted start and end dates.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shaunngoh"},"content":"     * @return A formatted string representing the event.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shaunngoh"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shaunngoh"},"content":"    public String toString() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shaunngoh"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DISPLAY_FORMATTER) + \" to: \" + to.format(DISPLAY_FORMATTER) + \")\";","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shaunngoh"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"shaunngoh":82}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaunngoh"},"content":"package task;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shaunngoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shaunngoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shaunngoh"},"content":"/**","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shaunngoh"},"content":" * Represents a generic task that can be added to a task list.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shaunngoh"},"content":" *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shaunngoh"},"content":" * This class encapsulates the task description, completion status, and provides methods","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shaunngoh"},"content":" * to manipulate and retrieve task details. It also provides methods for formatting task data","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shaunngoh"},"content":" * for display and storage purposes.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shaunngoh"},"content":" */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shaunngoh"},"content":"public class Task {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shaunngoh"},"content":"    protected String description;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shaunngoh"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shaunngoh"},"content":"    // Formatters for different date formats","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shaunngoh"},"content":"    public static final DateTimeFormatter DEFAULT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shaunngoh"},"content":"    protected static final DateTimeFormatter ALTERNATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d-M-yyyy HHmm\");","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shaunngoh"},"content":"    public static final DateTimeFormatter DISPLAY_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shaunngoh"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shaunngoh"},"content":"     * Initializes a new task with the provided description and marks it as not done by default.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shaunngoh"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shaunngoh"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shaunngoh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shaunngoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shaunngoh"},"content":"     * Returns the due date of the task.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shaunngoh"},"content":"     * This method is meant to be overridden by subclasses like Deadline or Event.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shaunngoh"},"content":"     * @return A default LocalDateTime value (January 1st, 1970).","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shaunngoh"},"content":"    public LocalDateTime getDueDate() {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shaunngoh"},"content":"        return LocalDateTime.of(1970, 1, 1, 0, 0);  // Default placeholder date","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shaunngoh"},"content":"     * Returns the task description.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shaunngoh"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shaunngoh"},"content":"    public String getDescription() {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shaunngoh"},"content":"        return description;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shaunngoh"},"content":"     * Returns the status icon for the task.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shaunngoh"},"content":"     * \"X\" indicates that the task is done, and \" \" (empty) indicates that it is not done.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shaunngoh"},"content":"     * @return The status icon as a String.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shaunngoh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shaunngoh"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shaunngoh"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shaunngoh"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shaunngoh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shaunngoh"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shaunngoh"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shaunngoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shaunngoh"},"content":"     * Converts the task to a format suitable for file storage.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shaunngoh"},"content":"     * This includes the task type, completion status, and the description.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shaunngoh"},"content":"     * @return A string representing the task in file storage format.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shaunngoh"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shaunngoh"},"content":"        return String.format(\"%s | %d | %s\", getTaskType(), isDone ? 1 : 0, description);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shaunngoh"},"content":"     * Returns the task type.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"shaunngoh"},"content":"     * This method can be overridden by subclasses to return specific types like \"D\" for Deadline or \"E\" for Event.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shaunngoh"},"content":"     * @return The task type, default is \"T\" for Task.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shaunngoh"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"shaunngoh"},"content":"        return \"\";","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"shaunngoh"},"content":"    /**","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"shaunngoh"},"content":"     * Returns a string representation of the task for display.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"shaunngoh"},"content":"     * The string includes the status icon and task description.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shaunngoh"},"content":"     *","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shaunngoh"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"shaunngoh"},"content":"     */","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"shaunngoh"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"shaunngoh"},"content":"    public String toString() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"shaunngoh"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"shaunngoh"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"shaunngoh":107}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaunngoh"},"content":"package task;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shaunngoh"},"content":"/**","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shaunngoh"},"content":" * Represents a task with no specific deadline","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shaunngoh"},"content":" */","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shaunngoh"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shaunngoh"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shaunngoh"},"content":"        super(description);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shaunngoh"},"content":"    @Override","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shaunngoh"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shaunngoh"},"content":"        return \"T\";","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shaunngoh"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shaunngoh"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shaunngoh"},"content":"    public String toString() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shaunngoh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shaunngoh"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shaunngoh"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"shaunngoh":20}},{"path":"text-ui-test/data/diana.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shaunngoh"},"content":"T | 0 | read book","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shaunngoh"},"content":"T | 0 | read book","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shaunngoh"},"content":"T | 0 | read book","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shaunngoh"},"content":"T | 0 | read book","lastModifiedDate":"2024-10-22","isFullCredit":false}],"authorContributionMap":{"shaunngoh":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shaunngoh"},"content":"mark 1","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shaunngoh"},"content":"unmark 1","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shaunngoh"},"content":"list","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shaunngoh"},"content":"this is a bad command","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shaunngoh"},"content":"event this is a bad command","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shaunngoh"},"content":"bye","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"shaunngoh":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shaunngoh"},"content":"java -classpath ..\\bin Diana \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"shaunngoh":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shaunngoh"},"content":"java -classpath ../bin Diana \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"shaunngoh":1,"-":37}}]
