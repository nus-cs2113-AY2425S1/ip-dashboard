[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"philip1304"},"content":"# PlopBot User Guide","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philip1304"},"content":"![PlopBot Screenshot](Screenshot.png)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philip1304"},"content":"PlopBot is a user-friendly task management application that helps you keep track of your to-dos, deadlines, and events. With its simple command-line interface, you can easily add, view, and manage your tasks.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philip1304"},"content":"## Adding Tasks","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philip1304"},"content":"### 1. Adding To-Dos","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philip1304"},"content":"To add a simple to-do task:","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philip1304"},"content":"    todo \u003ctask description\u003e","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philip1304"},"content":"Example: \u0027todo Buy Groceries\u0027","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philip1304"},"content":"Expected output:","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philip1304"},"content":"    Added: [T][ ] Buy Groceries","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philip1304"},"content":"    You now have 1 tasks in the list.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"```   ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philip1304"},"content":"### 2. Adding Deadlines","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philip1304"},"content":"To add a task with a deadline:","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philip1304"},"content":"    deadline \u003ctask desscription\u003e /by \u003cdate\u003e","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philip1304"},"content":"Example: \u0027deadline Submit Report /by 2024-01-01\u0027","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philip1304"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philip1304"},"content":"Expected output:","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philip1304"},"content":"    Added: [D][ ] Submit Report (by: 2024-01-01)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philip1304"},"content":"    You now have 2 tasks in the list.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philip1304"},"content":"```  ","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philip1304"},"content":"Note: Dates can be in the format \u0027YYYY-MM-DD\u0027, or day names like \u0027Monday\u0027, \u0027Tue\u0027, etc.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philip1304"},"content":"### 3. Adding Events","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philip1304"},"content":"To add an event:","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philip1304"},"content":"    ","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philip1304"},"content":"    event \u003ctask description\u003e /from \u003cstart time\u003e /to \u003cend time\u003e","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"philip1304"},"content":"    ","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"philip1304"},"content":"Example: \u0027event Team meeting /from 2023-06-10 14:00 /to 2023-06-10 15:30\u0027","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"philip1304"},"content":"Expected output:","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"philip1304"},"content":"    Added: [E][ ] Team meeting (from: 2023-06-10 14:00 to: 2023-06-10 15:30)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"philip1304"},"content":"    You now have 3 tasks in the list.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"philip1304"},"content":"## Viewing Tasks","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"philip1304"},"content":"To view all your tasks, simply write:","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"philip1304"},"content":"    list","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"philip1304"},"content":"    ","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"philip1304"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"philip1304"},"content":"Expected output:","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"philip1304"},"content":"    Here are the tasks in your list:","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"philip1304"},"content":"    1.[T][ ] Buy Groceries","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"philip1304"},"content":"    2.[D][ ] Submit Report (by: 2024-01-01)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"philip1304"},"content":"    3.[E][ ] Team meeting (from: 2023-06-10 14:00 to: 2023-06-10 15:30)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"philip1304"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"philip1304"},"content":"## Marking Tasks as Complete","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"philip1304"},"content":"To mark a task as \u0027done\u0027:","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"philip1304"},"content":"    mark \u003ctask number\u003e","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"philip1304"},"content":"Example: \u0027mark 1\u0027","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"philip1304"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"philip1304"},"content":"Expected output:","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"philip1304"},"content":"    I\u0027ve marked this task as done:","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"philip1304"},"content":"    [T][X] Buy Groceries","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"philip1304"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"philip1304"},"content":"## Unmarking Tasks","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"philip1304"},"content":"To unmark a task:","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"philip1304"},"content":"    unmark \u003ctask number\u003e","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"philip1304"},"content":"    ","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"philip1304"},"content":"Example: \u0027unmark 1\u0027","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"philip1304"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"philip1304"},"content":"Expected output:","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"philip1304"},"content":"    I\u0027ve unmarked this task:","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"philip1304"},"content":"    [T][ ] Buy Groceries","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"philip1304"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"philip1304"},"content":"## Deleting Tasks","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"philip1304"},"content":"To delete a task:","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"philip1304"},"content":"    delete \u003ctask number\u003e","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"philip1304"},"content":"Example: \u0027delete 2\u0027","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"philip1304"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"philip1304"},"content":"Expected output:","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"philip1304"},"content":"    Removed: [D][ ] Submit Report (by: 2024-01-01)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"philip1304"},"content":"    You now have 2 tasks in the list.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"philip1304"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"philip1304"},"content":"## Finding Tasks","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"philip1304"},"content":"To find tasks containing a keyword:","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"philip1304"},"content":"    find \u003ckeyword\u003e","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"philip1304"},"content":"    ","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"philip1304"},"content":"Example: \u0027find meeting\u0027","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"philip1304"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"philip1304"},"content":"Expected output:","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"philip1304"},"content":"    Here are the matching tasks in your list:","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"philip1304"},"content":"    1.[E][ ] Team meeting (from: 2023-06-10 14:00 to: 2023-06-10 15:30)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"philip1304"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"philip1304"},"content":"## Exiting PlopBot","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"philip1304"},"content":"To exit the program, simply write one of the following:","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"philip1304"},"content":"    bye","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"philip1304"},"content":"    exit","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"philip1304"},"content":"    quit","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"philip1304"},"content":"    ","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"philip1304"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"philip1304"},"content":"Expected output:","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"philip1304"},"content":"    Thank you for choosing PlopBot. Have a great day!","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"philip1304"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false}],"authorContributionMap":{"philip1304":117,"-":24}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philip1304"},"content":"import java.time.*;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philip1304"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philip1304"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philip1304"},"content":"import java.time.temporal.TemporalAdjusters;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philip1304"},"content":"/**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philip1304"},"content":" * Parser class responsible for parsing user input and creating Task objects.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philip1304"},"content":" * This class handles the conversion of string commands into structured Task objects,","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philip1304"},"content":" * including parsing dates and times in various formats.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philip1304"},"content":" */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philip1304"},"content":"public class Parser {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philip1304"},"content":"    private static final String DEADLINE_SEPARATOR \u003d \" /by \";","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philip1304"},"content":"    private static final String EVENT_TIME_SEPARATOR \u003d \" /from | /to \";","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philip1304"},"content":"     * Parses a user input string into command components.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philip1304"},"content":"     * Splits the input into a command type and its details.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philip1304"},"content":"     * @param userInput         - The raw input string from the user","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philip1304"},"content":"     * @return                  - String array where index 0 contains the command type and index 1 contains the details","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If the input is null, empty, or cannot be parsed","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philip1304"},"content":"    public String[] parseCommand(String userInput) throws PlopBotException {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philip1304"},"content":"        if (userInput \u003d\u003d null || userInput.trim().isEmpty()) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"Empty command\");","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philip1304"},"content":"        return userInput.split(\" \", 2);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philip1304"},"content":"     * Creates a Task object based on the parsed command components.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philip1304"},"content":"     * Supports creation of todo, deadline, and event tasks.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philip1304"},"content":"     * @param commandParts      - Array containing the command type and details","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philip1304"},"content":"     * @return                  - A new Task object of the appropriate type","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If the command format is invalid or task creation fails","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philip1304"},"content":"    public Task parseTask(String[] commandParts) throws PlopBotException {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philip1304"},"content":"        validateCommandParts(commandParts);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philip1304"},"content":"        String type \u003d commandParts[0];","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philip1304"},"content":"        String details \u003d commandParts[1];","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philip1304"},"content":"        return switch (type) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philip1304"},"content":"            case \"todo\" -\u003e createTodoTask(details);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"philip1304"},"content":"            case \"deadline\" -\u003e createDeadlineTask(details);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"philip1304"},"content":"            case \"event\" -\u003e createEventTask(details);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"philip1304"},"content":"            default -\u003e throw new PlopBotException(\"Unknown task type: \" + type);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"philip1304"},"content":"        };","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"philip1304"},"content":"     * Validates that the command parts array contains the required components.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"philip1304"},"content":"     * @param commandParts      - Array of command components to validate","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If the array is null or has insufficient components","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"philip1304"},"content":"    private void validateCommandParts(String[] commandParts) throws PlopBotException {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"philip1304"},"content":"        if (commandParts \u003d\u003d null || commandParts.length \u003c 2) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"Invalid task format\");","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"philip1304"},"content":"     * Creates a simple todo task with the given description.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"philip1304"},"content":"     * @param details - The description of the todo task","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"philip1304"},"content":"     * @return        - A new Task object representing a todo task","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"philip1304"},"content":"    private Task createTodoTask(String details) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"philip1304"},"content":"        return new Task(details);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"philip1304"},"content":"     * Creates a deadline task with the given description and deadline date.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"philip1304"},"content":"     * @param details           - The description and deadline information","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"philip1304"},"content":"     * @return                  - A new Task object representing a deadline task","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If the deadline format is invalid","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"philip1304"},"content":"    private Task createDeadlineTask(String details) throws PlopBotException {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"philip1304"},"content":"        try {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"philip1304"},"content":"            String[] deadlineParts \u003d details.split(DEADLINE_SEPARATOR, 2);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"philip1304"},"content":"            if (deadlineParts.length !\u003d 2) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"philip1304"},"content":"                throw new PlopBotException(\"Invalid deadline format. Usage: deadline description /by DATE\");","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"philip1304"},"content":"            }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"philip1304"},"content":"            return new Task(deadlineParts[0], parseDateString(deadlineParts[1]));","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"philip1304"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"Invalid date format: \" + e.getMessage());","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"philip1304"},"content":"     * Creates an event task with the given description, start time, and end time.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"philip1304"},"content":"     * @param details           - The description and event timing information","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"philip1304"},"content":"     * @return                  - A new Task object representing an event task","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If the event format or timing is invalid","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"philip1304"},"content":"    private Task createEventTask(String details) throws PlopBotException {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"philip1304"},"content":"        try {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"philip1304"},"content":"            String[] eventParts \u003d details.split(EVENT_TIME_SEPARATOR);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"philip1304"},"content":"            if (eventParts.length !\u003d 3) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"philip1304"},"content":"                throw new PlopBotException(\"Invalid event format. Usage: event description /from START_TIME /to END_TIME\");","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"philip1304"},"content":"            }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"philip1304"},"content":"            validateEventTimeParts(eventParts);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"philip1304"},"content":"            return createEventTaskFromParts(eventParts);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"philip1304"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"Invalid date/time format: \" + e.getMessage());","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"philip1304"},"content":"     * Validates that event time parts are not empty.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"philip1304"},"content":"     * @param eventParts        - Array containing event description and time components","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If either time component is empty","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"philip1304"},"content":"    private void validateEventTimeParts(String[] eventParts) throws PlopBotException {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"philip1304"},"content":"        if (eventParts[1].trim().isEmpty()) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"Start time cannot be empty. Usage: event description /from START_TIME /to END_TIME\");","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"philip1304"},"content":"        if (eventParts[2].trim().isEmpty()) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"End time cannot be empty. Usage: event description /from START_TIME /to END_TIME\");","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"philip1304"},"content":"     * Creates an event task from validated event parts.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"philip1304"},"content":"     * @param eventParts        - Array containing event description and time components","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"philip1304"},"content":"     * @return                  - A new Task object representing an event task","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If the time parsing fails or end time is before start time","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"philip1304"},"content":"    private Task createEventTaskFromParts(String[] eventParts) throws PlopBotException {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"philip1304"},"content":"        try {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"philip1304"},"content":"            LocalDateTime startTime \u003d parseDateTimeString(eventParts[1], null);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"philip1304"},"content":"            LocalDateTime endTime \u003d parseDateTimeString(eventParts[2], startTime);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"philip1304"},"content":"            validateEventTimes(startTime, endTime);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"philip1304"},"content":"            return new Task(eventParts[0], startTime, endTime);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"philip1304"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"Invalid date/time format. Time must be in format \u0027YYYY-MM-DD HH:mm\u0027 or \u0027DAY HHam/pm\u0027\");","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"philip1304"},"content":"     * Validates that the end time is not before the start time.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"philip1304"},"content":"     * @param start             - Event start time","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"philip1304"},"content":"     * @param end               - Event end time","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If end time is before start time","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"philip1304"},"content":"    private void validateEventTimes(LocalDateTime start, LocalDateTime end) throws PlopBotException {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"philip1304"},"content":"        if (end.isBefore(start)) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"End time cannot be before start time\");","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"philip1304"},"content":"     * Parses a date string into a LocalDate object.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"philip1304"},"content":"     * Supports standard ISO format (YYYY-MM-DD) and relative dates (today, tomorrow, day names).","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"philip1304"},"content":"     * @param dateString        - The date string to parse","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"philip1304"},"content":"     * @return                  - LocalDate object representing the parsed date","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If the date string is empty or invalid","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"philip1304"},"content":"    private static LocalDate parseDateString(String dateString) throws PlopBotException {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"philip1304"},"content":"        if (dateString \u003d\u003d null || dateString.trim().isEmpty()) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"Date cannot be empty\");","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"philip1304"},"content":"        try {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"philip1304"},"content":"            return parseStandardDate(dateString.trim());","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"philip1304"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"philip1304"},"content":"            try {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"philip1304"},"content":"                return parseRelativeDate(dateString.trim());","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"philip1304"},"content":"            } catch (IllegalArgumentException ex) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"philip1304"},"content":"                throw new PlopBotException(\"Invalid date format. Use \u0027YYYY-MM-DD\u0027, \u0027today\u0027, \u0027tomorrow\u0027, or day name\");","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"philip1304"},"content":"            }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"philip1304"},"content":"     * Parses a date string in standard ISO format (YYYY-MM-DD).","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"philip1304"},"content":"     * @param dateString - The date string to parse","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"philip1304"},"content":"     * @return           - LocalDate object representing the parsed date","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"philip1304"},"content":"    private static LocalDate parseStandardDate(String dateString) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"philip1304"},"content":"        return LocalDate.parse(dateString, DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"philip1304"},"content":"     * Parses a relative date string (today, tomorrow, day names).","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"philip1304"},"content":"     * @param dateString - The relative date string to parse","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"philip1304"},"content":"     * @return           - LocalDate object representing the parsed date","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"philip1304"},"content":"    private static LocalDate parseRelativeDate(String dateString) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"philip1304"},"content":"        LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"philip1304"},"content":"        String lowercaseDate \u003d dateString.toLowerCase();","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"philip1304"},"content":"        if (lowercaseDate.equals(\"today\")) return now;","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"philip1304"},"content":"        if (lowercaseDate.equals(\"tomorrow\")) return now.plusDays(1);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"philip1304"},"content":"        return parseDayOfWeek(dateString, now);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"philip1304"},"content":"     * Parses a day of week name into a date.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"philip1304"},"content":"     * @param dateString - Day name to parse","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"philip1304"},"content":"     * @param now        - Reference date for calculating the next occurrence","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"philip1304"},"content":"     * @return           - LocalDate object representing the next occurrence of the specified day","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"philip1304"},"content":"    private static LocalDate parseDayOfWeek(String dateString, LocalDate now) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"philip1304"},"content":"        try {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"philip1304"},"content":"            DayOfWeek day \u003d DayOfWeek.valueOf(dateString.toUpperCase());","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"philip1304"},"content":"            return now.with(TemporalAdjusters.next(day));","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"philip1304"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"philip1304"},"content":"            return parseAbbreviatedDay(dateString, now);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"philip1304"},"content":"     * Parses an abbreviated day name (Mon, Tue, etc.).","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"philip1304"},"content":"     * @param dateString                - Abbreviated day name to parse","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"philip1304"},"content":"     * @param now                       - Reference date for calculating the next occurrence","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"philip1304"},"content":"     * @return                          - LocalDate object representing the next occurrence of the specified day","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"philip1304"},"content":"     * @throws IllegalArgumentException - If the abbreviated day name is invalid","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"philip1304"},"content":"    private static LocalDate parseAbbreviatedDay(String dateString, LocalDate now) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"philip1304"},"content":"        String[] shortDays \u003d {\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"};","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"philip1304"},"content":"        for (int i \u003d 0; i \u003c shortDays.length; i++) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"philip1304"},"content":"            if (shortDays[i].equalsIgnoreCase(dateString)) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"philip1304"},"content":"                return now.with(TemporalAdjusters.next(DayOfWeek.of(i + 1)));","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"philip1304"},"content":"            }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"philip1304"},"content":"        throw new IllegalArgumentException(\"Unable to parse date: \" + dateString);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"philip1304"},"content":"     * Parses a date-time string into a LocalDateTime object.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"philip1304"},"content":"     * Supports standard format (YYYY-MM-DD HH:mm) and relative formats.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"philip1304"},"content":"     * @param dateTimeString    - The date-time string to parse","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"philip1304"},"content":"     * @param referenceTime     - Optional reference time for relative parsing","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"philip1304"},"content":"     * @return                  - LocalDateTime object representing the parsed date-time","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If the date-time string is empty or invalid","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"philip1304"},"content":"    private static LocalDateTime parseDateTimeString(String dateTimeString, LocalDateTime referenceTime) throws PlopBotException {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"philip1304"},"content":"        if (dateTimeString \u003d\u003d null || dateTimeString.trim().isEmpty()) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"Date/time cannot be empty\");","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"philip1304"},"content":"        try {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"philip1304"},"content":"            return LocalDateTime.parse(dateTimeString.trim(),","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"philip1304"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"philip1304"},"content":"        } catch (DateTimeParseException e1) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"philip1304"},"content":"            try {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"philip1304"},"content":"                return parseRelativeDateTime(dateTimeString.trim(), referenceTime);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"philip1304"},"content":"            } catch (Exception e2) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"philip1304"},"content":"                throw new PlopBotException(\"Invalid time format. Use \u0027YYYY-MM-DD HH:mm\u0027 or \u0027DAY HHam/pm\u0027\");","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"philip1304"},"content":"            }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"philip1304"},"content":"     * Parses a relative date-time string.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"philip1304"},"content":"     * @param dateTimeString    - The relative date-time string to parse","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"philip1304"},"content":"     * @param referenceTime     - Optional reference time for relative parsing","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"philip1304"},"content":"     * @return                  - LocalDateTime object representing the parsed date-time","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If the parsing fails","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"philip1304"},"content":"    private static LocalDateTime parseRelativeDateTime(String dateTimeString, LocalDateTime referenceTime) throws PlopBotException {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"philip1304"},"content":"        String[] parts \u003d dateTimeString.split(\" \", 2);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"philip1304"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"Invalid date/time format. Use \u0027YYYY-MM-DD HH:mm\u0027 or \u0027DAY HHam/pm\u0027\");","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"philip1304"},"content":"        LocalDate date \u003d parseDateString(parts[0]);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"philip1304"},"content":"        LocalTime time \u003d parseTimeString(parts[1]);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"philip1304"},"content":"        return LocalDateTime.of(date, time);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"philip1304"},"content":"     * Parses a time string in either 24-hour or AM/PM format.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"philip1304"},"content":"     * @param timeString        - The time string to parse","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"philip1304"},"content":"     * @return                  - LocalTime object representing the parsed time","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If the time format is invalid","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"philip1304"},"content":"    private static LocalTime parseTimeString(String timeString) throws PlopBotException {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"philip1304"},"content":"        try {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"philip1304"},"content":"            return LocalTime.parse(timeString, DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"philip1304"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"philip1304"},"content":"            try {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"philip1304"},"content":"                return parseAmPmTime(timeString);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"philip1304"},"content":"            } catch (Exception ex) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"philip1304"},"content":"                throw new PlopBotException(\"Invalid time format. Use \u0027HH:mm\u0027 (24-hour) or \u0027HHam/pm\u0027\");","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"philip1304"},"content":"            }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"philip1304"},"content":"     * Parses a time string in AM/PM format.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"philip1304"},"content":"     * @param timeString        - The AM/PM time string to parse","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"philip1304"},"content":"     * @return                  - LocalTime object representing the parsed time","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If the AM/PM time format is invalid","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"philip1304"},"content":"    private static LocalTime parseAmPmTime(String timeString) throws PlopBotException {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"philip1304"},"content":"        String formattedTime \u003d timeString.toLowerCase();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"philip1304"},"content":"        if (!formattedTime.endsWith(\"am\") \u0026\u0026 !formattedTime.endsWith(\"pm\")) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"Invalid time format. Must end with \u0027am\u0027 or \u0027pm\u0027\");","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"philip1304"},"content":"        try {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"philip1304"},"content":"            int hour \u003d Integer.parseInt(formattedTime.substring(0, formattedTime.length() - 2));","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"philip1304"},"content":"            boolean isPm \u003d formattedTime.endsWith(\"pm\");","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"philip1304"},"content":"            if (hour \u003c 1 || hour \u003e 12) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"philip1304"},"content":"                throw new PlopBotException(\"Hour must be between 1 and 12\");","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"philip1304"},"content":"            }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"philip1304"},"content":"            if (isPm \u0026\u0026 hour \u003c 12) hour +\u003d 12;","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"philip1304"},"content":"            else if (!isPm \u0026\u0026 hour \u003d\u003d 12) hour \u003d 0;","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"philip1304"},"content":"            return LocalTime.of(hour, 0);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"philip1304"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"Invalid time format: \" + timeString);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"philip1304"},"content":"}","lastModifiedDate":"2024-10-11","isFullCredit":false}],"authorContributionMap":{"philip1304":337}},{"path":"src/main/java/PlopBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philip1304"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philip1304"},"content":"/**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philip1304"},"content":" * Main class for the PlopBot task management application.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philip1304"},"content":" * Handles the core functionality of managing tasks, processing commands,","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philip1304"},"content":" * and coordinating between different components (UI, Storage, Parser).","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philip1304"},"content":" */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philip1304"},"content":"public class PlopBot {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philip1304"},"content":"    private Storage storage;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philip1304"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philip1304"},"content":"    private Ui ui;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philip1304"},"content":"    private Parser parser;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philip1304"},"content":"     * Main entry point for the PlopBot application.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philip1304"},"content":"     * Initializes and runs the bot with default storage location.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philip1304"},"content":"     * @param args - Command line arguments (not used)","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philip1304"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philip1304"},"content":"        new PlopBot(\"data/tasks.txt\").run();","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philip1304"},"content":"     * Constructs a new PlopBot instance with specified storage location.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philip1304"},"content":"     * Initializes UI, storage, task list, and parser components.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philip1304"},"content":"     * @param filePath - Path to the file where tasks will be stored","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philip1304"},"content":"    public PlopBot(String filePath) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philip1304"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philip1304"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philip1304"},"content":"        try {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philip1304"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philip1304"},"content":"        } catch (PlopBotException e) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philip1304"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philip1304"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philip1304"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philip1304"},"content":"     * Starts the main execution loop of PlopBot.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philip1304"},"content":"     * Continuously reads and processes user commands until exit is requested.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"philip1304"},"content":"    public void run() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"philip1304"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"philip1304"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"philip1304"},"content":"        while (!isExit) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"philip1304"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"philip1304"},"content":"            try {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"philip1304"},"content":"                isExit \u003d processCommand(fullCommand);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"philip1304"},"content":"            } catch (PlopBotException e) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"philip1304"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"philip1304"},"content":"            }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"philip1304"},"content":"        ui.showExit();","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"philip1304"},"content":"     * Processes a single command from the user\u0027s input.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"philip1304"},"content":"     * @param fullCommand       - The full command string input by the user","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"philip1304"},"content":"     * @return                  - Boolean indicating if the program should exit","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If the command is invalid or execution fails","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"philip1304"},"content":"    private boolean processCommand(String fullCommand) throws PlopBotException {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"philip1304"},"content":"        String[] commandParts \u003d parser.parseCommand(fullCommand);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"philip1304"},"content":"        switch (commandParts[0]) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"philip1304"},"content":"        case \"bye\":","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"philip1304"},"content":"        case \"exit\":","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"philip1304"},"content":"        case \"quit\":","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"philip1304"},"content":"            return true;","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"philip1304"},"content":"        case \"todo\":","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"philip1304"},"content":"            handleAddTask(commandParts);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"philip1304"},"content":"            break;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"philip1304"},"content":"        case \"deadline\":","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"philip1304"},"content":"            handleAddDeadline(commandParts);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"philip1304"},"content":"            break;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"philip1304"},"content":"        case \"event\":","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"philip1304"},"content":"            handleAddEvent(commandParts);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"philip1304"},"content":"            break;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"philip1304"},"content":"        case \"delete\":","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"philip1304"},"content":"            handleDeleteTask(commandParts);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"philip1304"},"content":"            break;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"philip1304"},"content":"        case \"find\":","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"philip1304"},"content":"            handleFindTasks(commandParts);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"philip1304"},"content":"            break;","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"philip1304"},"content":"        case \"list\":","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"philip1304"},"content":"            handleListTasks();","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"philip1304"},"content":"            break;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"philip1304"},"content":"        case \"mark\":","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"philip1304"},"content":"            handleMarkTask(commandParts);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"philip1304"},"content":"            break;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"philip1304"},"content":"        case \"unmark\":","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"philip1304"},"content":"            handleUnmarkTask(commandParts);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"philip1304"},"content":"            break;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"philip1304"},"content":"        default:","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"Unknown command\");","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"philip1304"},"content":"        return false;","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"philip1304"},"content":"     * Common method to add a task and save to storage.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"philip1304"},"content":"     * @param task              - The task to add","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If task creation or saving fails","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"philip1304"},"content":"    private void addAndSaveTask(Task task) throws PlopBotException {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"philip1304"},"content":"        tasks.addTask(task);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"philip1304"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"philip1304"},"content":"        ui.showTaskAdded(task, tasks.size());","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"philip1304"},"content":"     * Handles adding a new task and saving it.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"philip1304"},"content":"     * @param commandParts      - The parsed command parts","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If task creation or saving fails","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"philip1304"},"content":"    private void handleAddTask(String[] commandParts) throws PlopBotException {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"philip1304"},"content":"        Task newTask \u003d parser.parseTask(commandParts);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"philip1304"},"content":"        addAndSaveTask(newTask);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"philip1304"},"content":"     * Handles adding a deadline task with proper error handling.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"philip1304"},"content":"     * @param commandParts      - The parsed command parts","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If deadline creation or saving fails","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"philip1304"},"content":"    private void handleAddDeadline(String[] commandParts) throws PlopBotException {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"philip1304"},"content":"        try {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"philip1304"},"content":"            Task newDeadline \u003d parser.parseTask(commandParts);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"philip1304"},"content":"            addAndSaveTask(newDeadline);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"philip1304"},"content":"        } catch (PlopBotException e) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(formatDeadlineError(e.getMessage()));","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"philip1304"},"content":"     * Formats the deadline error message.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"philip1304"},"content":"     * @param baseMessage - The base error message","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"philip1304"},"content":"     * @return            - Formatted error message","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"philip1304"},"content":"    private String formatDeadlineError(String baseMessage) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"philip1304"},"content":"        return String.format(\"%s\\n    Usage: deadline description /by DATE\" +","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"philip1304"},"content":"                        \"\\n    DATE can be \u0027Sunday\u0027, \u0027Mon\u0027, \u0027Tuesday\u0027, or \u0027YYYY-MM-DD\u0027\",","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"philip1304"},"content":"                baseMessage);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"philip1304"},"content":"     * Handles adding an event task with proper error handling.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"philip1304"},"content":"     * @param commandParts      - The parsed command parts","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If event creation or saving fails","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"philip1304"},"content":"    private void handleAddEvent(String[] commandParts) throws PlopBotException {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"philip1304"},"content":"        try {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"philip1304"},"content":"            Task newEvent \u003d parser.parseTask(commandParts);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"philip1304"},"content":"            addAndSaveTask(newEvent);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"philip1304"},"content":"        } catch (PlopBotException e) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(formatEventError(e.getMessage()));","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"philip1304"},"content":"     * Formats the event error message.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"philip1304"},"content":"     * @param baseMessage - The base error message","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"philip1304"},"content":"     * @return            - Formatted error message","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"philip1304"},"content":"    private String formatEventError(String baseMessage) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"philip1304"},"content":"        return String.format(\"%s\\n    Usage: event description /from START_TIME /to END_TIME\" +","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"philip1304"},"content":"                        \"\\n    TIME can be \u0027Mon 2pm\u0027, \u0027Tuesday 14:00\u0027, or \u0027YYYY-MM-DD HH:MM\u0027\",","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"philip1304"},"content":"                baseMessage);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"philip1304"},"content":"     * Handles deleting a task.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"philip1304"},"content":"     *t","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"philip1304"},"content":"     * @param commandParts      - The parsed command parts","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If the command format is invalid or task deletion fails","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"philip1304"},"content":"    private void handleDeleteTask(String[] commandParts) throws PlopBotException {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"philip1304"},"content":"        if (commandParts.length !\u003d 2) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"Invalid delete command. Usage: delete \u003ctask number\u003e\");","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"philip1304"},"content":"        try {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"philip1304"},"content":"            int index \u003d parseTaskIndex(commandParts[1]);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"philip1304"},"content":"            if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"philip1304"},"content":"                throw new PlopBotException(\"Task number \" + (index + 1) + \" does not exist. Please use \u0027list\u0027 to see all tasks.\");","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"philip1304"},"content":"            }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"philip1304"},"content":"            Task removedTask \u003d tasks.removeTask(index);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"philip1304"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"philip1304"},"content":"            ui.showTaskRemoved(removedTask, tasks.size());","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"philip1304"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"Invalid task number. Please provide a number.\");","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"philip1304"},"content":"     * Handles finding tasks by keyword.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"philip1304"},"content":"     * @param commandParts      - The parsed command parts","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If the find command format is invalid","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"philip1304"},"content":"    private void handleFindTasks(String[] commandParts) throws PlopBotException {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"philip1304"},"content":"        validateFindCommand(commandParts);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"philip1304"},"content":"        String keyword \u003d commandParts[1];","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"philip1304"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"philip1304"},"content":"        ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"philip1304"},"content":"     * Validates the find command format.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"philip1304"},"content":"     * @param commandParts      - The parsed command parts","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If the command format is invalid","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"philip1304"},"content":"    private void validateFindCommand(String[] commandParts) throws PlopBotException {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"philip1304"},"content":"        if (commandParts.length \u003c 2) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"The \u0027find\u0027 command requires a keyword.\\n    Usage: find \u003ckeyword\u003e\");","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"philip1304"},"content":"     * Handles listing all tasks.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"philip1304"},"content":"    private void handleListTasks() {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"philip1304"},"content":"        ui.showTasks(tasks.getTasks());","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"philip1304"},"content":"     * Parses a task index from string input.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"philip1304"},"content":"     * @param indexStr          - The index string to parse","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"philip1304"},"content":"     * @return                  - The parsed index (0-based)","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If the index string is not a valid number","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"philip1304"},"content":"    private int parseTaskIndex(String indexStr) throws PlopBotException {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"philip1304"},"content":"        try {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"philip1304"},"content":"            return Integer.parseInt(indexStr) - 1;","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"philip1304"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"Invalid task number. Please provide a number.\");","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"philip1304"},"content":"     * Handles marking a task as done.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"philip1304"},"content":"     * @param commandParts      - The parsed command parts containing the task index","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If the command format is invalid or task marking fails","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"philip1304"},"content":"    private void handleMarkTask(String[] commandParts) throws PlopBotException {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"philip1304"},"content":"        if (commandParts.length !\u003d 2) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"Invalid mark command. Usage: mark \u003ctask number\u003e\");","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"philip1304"},"content":"        try {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"philip1304"},"content":"            int taskIndex \u003d Integer.parseInt(commandParts[1]) - 1;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"philip1304"},"content":"            Task task \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"philip1304"},"content":"            task.markAsDone();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"philip1304"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"philip1304"},"content":"            ui.showTaskMarked(task);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"philip1304"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"Invalid task number. Please provide a number.\");","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"philip1304"},"content":"     * Handles unmarking a task (setting it as not done).","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"philip1304"},"content":"     * @param commandParts      - The parsed command parts containing the task index","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If the command format is invalid or task unmarking fails","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"philip1304"},"content":"    private void handleUnmarkTask(String[] commandParts) throws PlopBotException {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"philip1304"},"content":"        if (commandParts.length !\u003d 2) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"Invalid unmark command. Usage: unmark \u003ctask number\u003e\");","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"philip1304"},"content":"        try {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"philip1304"},"content":"            int taskIndex \u003d Integer.parseInt(commandParts[1]) - 1;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"philip1304"},"content":"            Task task \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"philip1304"},"content":"            task.markAsUndone();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"philip1304"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"philip1304"},"content":"            ui.showTaskUnmarked(task);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"philip1304"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"Invalid task number. Please provide a number.\");","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"philip1304"},"content":"}","lastModifiedDate":"2024-09-18","isFullCredit":false}],"authorContributionMap":{"philip1304":292}},{"path":"src/main/java/PlopBotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philip1304"},"content":"public class PlopBotException extends Exception {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philip1304"},"content":"    public PlopBotException(String message) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philip1304"},"content":"        super(message);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philip1304"},"content":"}","lastModifiedDate":"2024-10-11","isFullCredit":false}],"authorContributionMap":{"philip1304":5}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philip1304"},"content":"import java.io.*;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philip1304"},"content":"import java.nio.file.*;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philip1304"},"content":"import java.time.*;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philip1304"},"content":"import java.time.format.*;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philip1304"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philip1304"},"content":"import java.util.List;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philip1304"},"content":"/**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philip1304"},"content":" * Handles the persistence of task data to and from storage.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philip1304"},"content":" * This class manages reading and writing tasks to a file in a specified format.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philip1304"},"content":" * Each task is stored as a single line with fields separated by vertical bars (|).","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philip1304"},"content":" *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philip1304"},"content":" * The file format for each task type is as follows:","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philip1304"},"content":" * - Todo:     T | isDone | description","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philip1304"},"content":" * - Deadline: D | isDone | description | deadline","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philip1304"},"content":" * - Event:    E | isDone | description | startTime | endTime","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philip1304"},"content":" */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philip1304"},"content":"public class Storage {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philip1304"},"content":"    private String filePath;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philip1304"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philip1304"},"content":"     * @param filePath The path where task data will be stored","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philip1304"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philip1304"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philip1304"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philip1304"},"content":"     * Creates necessary directories if they don\u0027t exist.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philip1304"},"content":"     * If the file exists, reads and parses each line into a Task object.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philip1304"},"content":"     * @return                  - ArrayList of Task objects loaded from the file","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If there is an error reading the file or parsing tasks","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philip1304"},"content":"    public ArrayList\u003cTask\u003e load() throws PlopBotException {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philip1304"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philip1304"},"content":"        try {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philip1304"},"content":"            Files.createDirectories(Paths.get(filePath).getParent());","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philip1304"},"content":"            if (Files.exists(Paths.get(filePath))) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philip1304"},"content":"                List\u003cString\u003e lines \u003d Files.readAllLines(Paths.get(filePath));","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philip1304"},"content":"                for (String line : lines) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"philip1304"},"content":"                    tasks.add(parseTaskFromString(line));","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"philip1304"},"content":"                }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"philip1304"},"content":"            }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"philip1304"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"philip1304"},"content":"        return tasks;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"philip1304"},"content":"     * Saves the provided list of tasks to the storage file.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"philip1304"},"content":"     * Creates necessary directories if they don\u0027t exist.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"philip1304"},"content":"     * Each task is converted to a string format before being written.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"philip1304"},"content":"     * @param tasks             - ArrayList of Task objects to be saved","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If there is an error writing to the file","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"philip1304"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws PlopBotException {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"philip1304"},"content":"        try {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"philip1304"},"content":"            Files.createDirectories(Paths.get(filePath).getParent());","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"philip1304"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"philip1304"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"philip1304"},"content":"                writer.write(convertTaskToString(task));","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"philip1304"},"content":"                writer.newLine();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"philip1304"},"content":"            }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"philip1304"},"content":"            writer.close();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"philip1304"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"philip1304"},"content":"     * Parses a string representation of a task into a Task object.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"philip1304"},"content":"     * The string should be in the format: type | isDone | description [| additional fields...]","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"philip1304"},"content":"     * where type is \u0027T\u0027 for Todo, \u0027D\u0027 for Deadline, or \u0027E\u0027 for Event.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"philip1304"},"content":"     * @param line              - The string representation of the task","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"philip1304"},"content":"     * @return                  - Task object parsed from the string","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If the string format is invalid or contains invalid data","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"philip1304"},"content":"    private Task parseTaskFromString(String line) throws PlopBotException {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"philip1304"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"philip1304"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"Invalid task format: \" + line);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"philip1304"},"content":"        String type \u003d parts[0].trim();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"philip1304"},"content":"        boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"philip1304"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"philip1304"},"content":"        Task task;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"philip1304"},"content":"        switch (type) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"philip1304"},"content":"            case \"T\":","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"philip1304"},"content":"                task \u003d new Task(description);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"philip1304"},"content":"                break;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"philip1304"},"content":"            case \"D\":","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"philip1304"},"content":"                if (parts.length \u003c 4) throw new PlopBotException(\"Invalid deadline format: \" + line);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"philip1304"},"content":"                LocalDate deadline \u003d LocalDate.parse(parts[3].trim(), DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"philip1304"},"content":"                task \u003d new Task(description, deadline);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"philip1304"},"content":"                break;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"philip1304"},"content":"            case \"E\":","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"philip1304"},"content":"                if (parts.length \u003c 5) throw new PlopBotException(\"Invalid event format: \" + line);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"philip1304"},"content":"                LocalDateTime startTime \u003d LocalDateTime.parse(parts[3].trim(), DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"philip1304"},"content":"                LocalDateTime endTime \u003d LocalDateTime.parse(parts[4].trim(), DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"philip1304"},"content":"                task \u003d new Task(description, startTime, endTime);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"philip1304"},"content":"                break;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"philip1304"},"content":"            default:","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"philip1304"},"content":"                throw new PlopBotException(\"Unknown task type: \" + type);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"philip1304"},"content":"        if (isDone) task.toggleStatus();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"philip1304"},"content":"        return task;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"philip1304"},"content":"     * Converts a Task object into its string representation for storage.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"philip1304"},"content":"     * The format varies based on the task type:","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"philip1304"},"content":"     * - Todo:     T | isDone | description","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"philip1304"},"content":"     * - Deadline: D | isDone | description | deadline","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"philip1304"},"content":"     * - Event:    E | isDone | description | startTime | endTime","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"philip1304"},"content":"     * @param task - The Task object to convert","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"philip1304"},"content":"     * @return     - String representation of the task","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"philip1304"},"content":"    private String convertTaskToString(Task task) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"philip1304"},"content":"        String baseString \u003d String.format(\"%s | %d | %s\",","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"philip1304"},"content":"                task.getTypeIcon(), task.getStatus() ? 1 : 0, task.getName());","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"philip1304"},"content":"        switch (task.getTypeIcon()) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"philip1304"},"content":"            case \"D\":","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"philip1304"},"content":"                return baseString + \" | \" + task.getDeadline().format(DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"philip1304"},"content":"            case \"E\":","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"philip1304"},"content":"                return baseString + \" | \" + task.getStartTime().format(DateTimeFormatter.ISO_LOCAL_DATE_TIME) +","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"philip1304"},"content":"                        \" | \" + task.getEndTime().format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"philip1304"},"content":"            default:","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"philip1304"},"content":"                return baseString;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"philip1304"},"content":"}","lastModifiedDate":"2024-10-11","isFullCredit":false}],"authorContributionMap":{"philip1304":140}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philip1304"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philip1304"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philip1304"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philip1304"},"content":"/**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philip1304"},"content":" * Represents a task in the PlopBot task management system.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philip1304"},"content":" * Tasks can be of three types: TODO, EVENT, or DEADLINE.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philip1304"},"content":" * Each task has a name and completion status, with additional","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philip1304"},"content":" * temporal attributes based on its type.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philip1304"},"content":" */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philip1304"},"content":"public class Task {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philip1304"},"content":"    private String taskName;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philip1304"},"content":"    private TaskType type;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philip1304"},"content":"    private boolean isDone;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philip1304"},"content":"    private LocalDate deadline;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philip1304"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philip1304"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philip1304"},"content":"     * Enumeration of possible task types in the system.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philip1304"},"content":"     * TODO:     A basic task with just a description","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philip1304"},"content":"     * EVENT:    A task with start and end times","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philip1304"},"content":"     * DEADLINE: A task with a completion deadline","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philip1304"},"content":"    public enum TaskType {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philip1304"},"content":"        TODO, EVENT, DEADLINE","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philip1304"},"content":"     * Constructs a new TODO task with the specified name.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philip1304"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philip1304"},"content":"     * @param taskName - The name or description of the task","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philip1304"},"content":"    public Task(String taskName) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philip1304"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philip1304"},"content":"        this.type \u003d TaskType.TODO;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philip1304"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philip1304"},"content":"     * Constructs a new DEADLINE task with the specified name and deadline.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philip1304"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"philip1304"},"content":"     * @param taskName - The name or description of the task","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"philip1304"},"content":"     * @param deadline - The date by which the task must be completed","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"philip1304"},"content":"    public Task(String taskName, LocalDate deadline) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"philip1304"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"philip1304"},"content":"        this.type \u003d TaskType.DEADLINE;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"philip1304"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"philip1304"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"philip1304"},"content":"     * Constructs a new EVENT task with the specified name, start time, and end time.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"philip1304"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"philip1304"},"content":"     * @param taskName  - The name or description of the task","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"philip1304"},"content":"     * @param startTime - The date and time when the event starts","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"philip1304"},"content":"     * @param endTime   - The date and time when the event ends","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"philip1304"},"content":"    public Task(String taskName, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"philip1304"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"philip1304"},"content":"        this.type \u003d TaskType.EVENT;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"philip1304"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"philip1304"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"philip1304"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"philip1304"},"content":"     * Returns the type identifier of the task.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"philip1304"},"content":"     * \u0027T\u0027 for TODO, \u0027D\u0027 for DEADLINE, \u0027E\u0027 for EVENT.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"philip1304"},"content":"     * @return - A single character string representing the task type","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"philip1304"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"philip1304"},"content":"        switch (type) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"philip1304"},"content":"            case TODO: return \"T\";","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"philip1304"},"content":"            case DEADLINE: return \"D\";","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"philip1304"},"content":"            case EVENT: return \"E\";","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"philip1304"},"content":"            default: return \"?\";","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"philip1304"},"content":"     * Returns the name or description of the task.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"philip1304"},"content":"     * @return - The task\u0027s name","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"philip1304"},"content":"    public String getName() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"philip1304"},"content":"        return taskName;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"philip1304"},"content":"     * Returns the deadline date for DEADLINE tasks.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"philip1304"},"content":"     * @return - The task\u0027s deadline date, or null if not a DEADLINE task","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"philip1304"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"philip1304"},"content":"        return deadline;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"philip1304"},"content":"     * Returns the start time for EVENT tasks.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"philip1304"},"content":"     * @return - The event\u0027s start time, or null if not an EVENT task","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"philip1304"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"philip1304"},"content":"        return startTime;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"philip1304"},"content":"     * Returns the end time for EVENT tasks.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"philip1304"},"content":"     * @return - The event\u0027s end time, or null if not an EVENT task","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"philip1304"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"philip1304"},"content":"        return endTime;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"philip1304"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"philip1304"},"content":"     * @return - true if the task is marked as done, false otherwise","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"philip1304"},"content":"    public boolean getStatus() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"philip1304"},"content":"        return isDone;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"philip1304"},"content":"     * Toggles the completion status of the task.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"philip1304"},"content":"     * If the task was marked as done, it will be marked as not done, and vice versa.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"philip1304"},"content":"    public void toggleStatus() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"philip1304"},"content":"        this.isDone \u003d !this.isDone;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"philip1304"},"content":"     * Marks the task as completed.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If the task is already marked as done","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"philip1304"},"content":"    public void markAsDone() throws PlopBotException {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"philip1304"},"content":"        if (isDone) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"Task is already marked as done.\");","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"philip1304"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"philip1304"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If the task is already marked as not done","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"philip1304"},"content":"    public void markAsUndone() throws PlopBotException {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"philip1304"},"content":"        if (!isDone) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"Task is not yet done.\");","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"philip1304"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"philip1304"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"philip1304"},"content":"     * The format varies based on the task type:","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"philip1304"},"content":"     * - TODO:     [T][status] description","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"philip1304"},"content":"     * - DEADLINE: [D][status] description (by: YYYY-MM-DD)","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"philip1304"},"content":"     * - EVENT:    [E][status] description (from: YYYY-MM-DD HH:mm to: YYYY-MM-DD HH:mm)","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"philip1304"},"content":"     * where status is \u0027X\u0027 for done tasks and \u0027 \u0027 for not done tasks.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"philip1304"},"content":"     * @return - A formatted string representation of the task","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"philip1304"},"content":"    @Override","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"philip1304"},"content":"    public String toString() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"philip1304"},"content":"        String base \u003d String.format(\"[%s][%s] %s\", getTypeIcon(), isDone ? \"X\" : \" \", taskName);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"philip1304"},"content":"        switch (type) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"philip1304"},"content":"        case DEADLINE:","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"philip1304"},"content":"            return String.format(\"%s (by: %s)\", base,","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"philip1304"},"content":"                   deadline.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")));","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"philip1304"},"content":"        case EVENT:","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"philip1304"},"content":"            return String.format(\"%s (from: %s to: %s)\", base,","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"philip1304"},"content":"                   startTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")),","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"philip1304"},"content":"                   endTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")));","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"philip1304"},"content":"        default:","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"philip1304"},"content":"            return base;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"philip1304"},"content":"}","lastModifiedDate":"2024-10-11","isFullCredit":false}],"authorContributionMap":{"philip1304":188}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philip1304"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philip1304"},"content":"/**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philip1304"},"content":" * Manages a collection of tasks for the PlopBot application.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philip1304"},"content":" * This class provides methods to add, remove, find, and manage tasks in a list.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philip1304"},"content":" * It serves as the primary data structure for task management operations.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philip1304"},"content":" */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philip1304"},"content":"public class TaskList {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philip1304"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philip1304"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philip1304"},"content":"     * Initializes a new ArrayList to store Task objects.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philip1304"},"content":"    public TaskList() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philip1304"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philip1304"},"content":"     * Constructs a TaskList with an existing collection of tasks.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philip1304"},"content":"     * @param tasks - The ArrayList of Task objects to initialize the TaskList with","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philip1304"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philip1304"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philip1304"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philip1304"},"content":"     * @param task - The Task object to be added to the list","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philip1304"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philip1304"},"content":"        tasks.add(task);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philip1304"},"content":"     * Removes and returns a task at the specified index.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philip1304"},"content":"     * @param index             - The index of the task to remove (0-based)","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philip1304"},"content":"     * @return                  - The removed Task object","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If the index is out of bounds or invalid","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philip1304"},"content":"    public Task removeTask(int index) throws PlopBotException {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"philip1304"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"Invalid task index\");","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"philip1304"},"content":"        return tasks.remove(index);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"philip1304"},"content":"     * Searches for tasks whose names contain the specified keyword.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"philip1304"},"content":"     * The search is case-insensitive.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"philip1304"},"content":"     * @param keyword - The search term to match against task names","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"philip1304"},"content":"     * @return        - An ArrayList containing all tasks whose names contain the keyword","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"philip1304"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"philip1304"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"philip1304"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"philip1304"},"content":"            if (task.getName().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"philip1304"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"philip1304"},"content":"            }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"philip1304"},"content":"        return matchingTasks;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"philip1304"},"content":"     * Returns the complete list of tasks.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"philip1304"},"content":"     * @return - An ArrayList containing all tasks in the list","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"philip1304"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"philip1304"},"content":"        return tasks;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"philip1304"},"content":"     * Retrieves a task at the specified index.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"philip1304"},"content":"     * @param index             - The index of the task to retrieve (0-based)","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"philip1304"},"content":"     * @return                  - The Task object at the specified index","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"philip1304"},"content":"     * @throws PlopBotException - If the index is out of bounds or invalid","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"philip1304"},"content":"    public Task getTask(int index) throws PlopBotException {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"philip1304"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"philip1304"},"content":"            throw new PlopBotException(\"Task index out of range.\");","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"philip1304"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"philip1304"},"content":"     * Returns the total number of tasks in the list.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"philip1304"},"content":"     * @return - The number of tasks currently in the list","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"philip1304"},"content":"    public int size() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"philip1304"},"content":"        return tasks.size();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"philip1304"},"content":"}","lastModifiedDate":"2024-10-11","isFullCredit":false}],"authorContributionMap":{"philip1304":99}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"philip1304"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"philip1304"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"philip1304"},"content":"/**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"philip1304"},"content":" * The UI component of PlopBot that handles all user interactions.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"philip1304"},"content":" * This class is responsible for displaying messages to the user and","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"philip1304"},"content":" * getting user input from the command line interface.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"philip1304"},"content":" */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"philip1304"},"content":"public class Ui {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"philip1304"},"content":"    private static final String HORIZONTAL_LINE \u003d \"//\" + \"\\u2500\".repeat(50);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"philip1304"},"content":"    private static final String ECHO_LINE \u003d \"    \" + \"\\u2500\".repeat(48);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"philip1304"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"philip1304"},"content":"     * Constructs a new UI instance and initializes the Scanner for reading user input.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"philip1304"},"content":"    public Ui() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"philip1304"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"philip1304"},"content":"     * Displays the welcome message when PlopBot starts.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"philip1304"},"content":"     * Includes a greeting and prompt for user input.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"philip1304"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"philip1304"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"philip1304"},"content":"        System.out.println(\"Hello! I\u0027m PlopBot.\");","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"philip1304"},"content":"        System.out.println(\"What can I do for you today?\\n\");","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"philip1304"},"content":"     * Displays the exit message when PlopBot terminates.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"philip1304"},"content":"     * Shows a farewell message to the user.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"philip1304"},"content":"    public void showExit() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"philip1304"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"philip1304"},"content":"        System.out.println(\"Thank you for choosing PlopBot. Have a great day!\\n\");","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"philip1304"},"content":"     * Reads a command from the user\u0027s input.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"philip1304"},"content":"     * @return - A String containing the user\u0027s command, with leading and trailing whitespace removed","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"philip1304"},"content":"    public String readCommand() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"philip1304"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"philip1304"},"content":"     * Displays all tasks in the user\u0027s task list.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"philip1304"},"content":"     * Each task is numbered and shown with its complete details.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"philip1304"},"content":"     * @param tasks - An ArrayList of Task objects to be displayed","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"philip1304"},"content":"    public void showTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"philip1304"},"content":"        System.out.println(ECHO_LINE);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"philip1304"},"content":"        System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"philip1304"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"philip1304"},"content":"            System.out.println(\"    \" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"philip1304"},"content":"        System.out.println(ECHO_LINE);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"philip1304"},"content":"     * Confirms the addition of a new task and shows the updated task count.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"philip1304"},"content":"     * @param task       - The Task that was added to the list","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"philip1304"},"content":"     * @param totalTasks - The current total number of tasks in the list","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"philip1304"},"content":"    public void showTaskAdded(Task task, int totalTasks) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"philip1304"},"content":"        System.out.println(ECHO_LINE);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"philip1304"},"content":"        System.out.println(\"    Added: \" + task);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"philip1304"},"content":"        System.out.println(\"    You now have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"philip1304"},"content":"        System.out.println(ECHO_LINE);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"philip1304"},"content":"     * Confirms the removal of a task and shows the updated task count.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"philip1304"},"content":"     * @param task       - The Task that was removed from the list","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"philip1304"},"content":"     * @param totalTasks - The current total number of tasks in the list","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"philip1304"},"content":"    public void showTaskRemoved(Task task, int totalTasks) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"philip1304"},"content":"        System.out.println(ECHO_LINE);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"philip1304"},"content":"        System.out.println(\"    Removed: \" + task);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"philip1304"},"content":"        System.out.println(\"    You now have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"philip1304"},"content":"        System.out.println(ECHO_LINE);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"philip1304"},"content":"     * Displays tasks that match a search criterion.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"philip1304"},"content":"     * If no tasks match, displays an appropriate message.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"philip1304"},"content":"     * @param tasks - An ArrayList of Task objects that match the search criteria","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"philip1304"},"content":"    public void showMatchingTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"philip1304"},"content":"        System.out.println(ECHO_LINE);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"philip1304"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"philip1304"},"content":"            System.out.println(\"    No matching tasks found.\");","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"philip1304"},"content":"        } else {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"philip1304"},"content":"            System.out.println(\"    Here are the matching tasks in your list:\");","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"philip1304"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"philip1304"},"content":"                System.out.println(\"    \" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"philip1304"},"content":"            }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"philip1304"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"philip1304"},"content":"        System.out.println(ECHO_LINE);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"philip1304"},"content":"     * Displays confirmation that a task has been marked as complete.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"philip1304"},"content":"     * @param task - The Task that was marked as complete","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"philip1304"},"content":"    public void showTaskMarked(Task task) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"philip1304"},"content":"        System.out.println(\"    I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"philip1304"},"content":"        System.out.println(\"    \" + task.toString());","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"philip1304"},"content":"     * Displays confirmation that a task has been unmarked (set as incomplete).","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"philip1304"},"content":"     * @param task - The Task that was unmarked","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"philip1304"},"content":"    public void showTaskUnmarked(Task task) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"philip1304"},"content":"        System.out.println(\"    I\u0027ve unmarked this task:\");","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"philip1304"},"content":"        System.out.println(\"    \" + task.toString());","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"philip1304"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"philip1304"},"content":"     * The message is formatted with proper indentation and line breaks.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"philip1304"},"content":"     *","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"philip1304"},"content":"     * @param message - The error message to display","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"philip1304"},"content":"    public void showError(String message) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"philip1304"},"content":"        System.out.println(ECHO_LINE);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"philip1304"},"content":"        System.out.println(\"    Oops! \" + message.replace(\"\\n\", \"\\n    \"));","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"philip1304"},"content":"        System.out.println(ECHO_LINE);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"philip1304"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"philip1304"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"philip1304"},"content":"     * Displays an error message when there\u0027s a problem loading the task file.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"philip1304"},"content":"     * Informs the user that the program will start with an empty task list.","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"philip1304"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"philip1304"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"philip1304"},"content":"        showError(\"Problem loading tasks from file. Starting with an empty task list.\");","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"philip1304"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"philip1304"},"content":"}","lastModifiedDate":"2024-10-11","isFullCredit":false}],"authorContributionMap":{"philip1304":148}}]
