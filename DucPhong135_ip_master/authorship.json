[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DucPhong135"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DucPhong135"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DucPhong135"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DucPhong135"},"content":"/**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DucPhong135"},"content":" * The Deadline class represents a task that has a specific due date (by).","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DucPhong135"},"content":" * It extends the Task class and adds functionality for handling deadlines.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DucPhong135"},"content":" */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DucPhong135"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DucPhong135"},"content":"    // The due date for the task","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DucPhong135"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DucPhong135"},"content":"     * Constructs a Deadline task with the specified description and due date.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DucPhong135"},"content":"     * The date is validated and parsed from the input string.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DucPhong135"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DucPhong135"},"content":"     * @param by The due date of the task in \"yyyy-MM-dd\" format.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DucPhong135"},"content":"     * @throws DukeException If the date format is invalid.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DucPhong135"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DucPhong135"},"content":"        super(description);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DucPhong135"},"content":"        try {","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DucPhong135"},"content":"            this.by \u003d LocalDate.parse(by); // Parse the due date","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DucPhong135"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DucPhong135"},"content":"            throw new DukeException(\"please input date in valid format yyyy/MM/dd\");","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DucPhong135"},"content":"     * Gets the due date of the task.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DucPhong135"},"content":"     * @return The due date as a string.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DucPhong135"},"content":"    public String getBy() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DucPhong135"},"content":"        return by.toString();","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DucPhong135"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DucPhong135"},"content":"     * The string includes a \"[D]\" to indicate that it is a Deadline task,","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DucPhong135"},"content":"     * and the due date is formatted as \"MMM dd yyyy\".","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DucPhong135"},"content":"     * @return A string representing the deadline task.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DucPhong135"},"content":"    @Override","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DucPhong135"},"content":"    public String toString() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DucPhong135"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DucPhong135"},"content":"        String formattedBy \u003d by.format(formatter);","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DucPhong135"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedBy + \")\";","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DucPhong135"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"DucPhong135":55}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DucPhong135"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DucPhong135"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DucPhong135"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DucPhong135"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DucPhong135"},"content":"import java.io.File;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DucPhong135"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DucPhong135"},"content":"/**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DucPhong135"},"content":" * The Duke class represents the main chatbot application.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DucPhong135"},"content":" * It handles the initialization of key components like TaskList, Storage, Parser, and UI.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DucPhong135"},"content":" * Duke interacts with the user to perform task management operations, such as adding, deleting, and updating tasks.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DucPhong135"},"content":" */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DucPhong135"},"content":"    // taskList variable for level-2 onwards","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DucPhong135"},"content":"    private static TaskList taskListInstance;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DucPhong135"},"content":"    private static Storage storageInstance;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DucPhong135"},"content":"    private static Parser parserInstance;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DucPhong135"},"content":"    private static UI uiInstance;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DucPhong135"},"content":"    // Task count","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DucPhong135"},"content":"    private static int taskCount \u003d 0;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DucPhong135"},"content":"    // Paths for storing task data","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DucPhong135"},"content":"    private static String folderPath \u003d \"./data\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DucPhong135"},"content":"    private static String filePath \u003d folderPath + \"/duke.txt\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DucPhong135"},"content":"     * The main execution method for the Duke chatbot.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DucPhong135"},"content":"     * This method initializes the required components and starts the chatbot loop to receive user input continuously.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DucPhong135"},"content":"     * @throws DukeException if there is an error specific to Duke\u0027s execution.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DucPhong135"},"content":"     * @throws IOException if there is an error reading or writing files.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DucPhong135"},"content":"    public void execute() throws DukeException, IOException {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DucPhong135"},"content":"        taskListInstance \u003d new TaskList();","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DucPhong135"},"content":"        storageInstance \u003d new Storage(taskListInstance);","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DucPhong135"},"content":"        uiInstance \u003d new UI(taskListInstance);","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DucPhong135"},"content":"        parserInstance \u003d new Parser(taskListInstance, uiInstance);","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DucPhong135"},"content":"        // Scanner for receiving input from the user","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DucPhong135"},"content":"        Scanner inputReader \u003d new Scanner(System.in);","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DucPhong135"},"content":"        taskListInstance.setUI(uiInstance);","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DucPhong135"},"content":"        taskListInstance.setParser(parserInstance);","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DucPhong135"},"content":"        System.out.println(\"Hello I\u0027m Lambo\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DucPhong135"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DucPhong135"},"content":"        // Load data from file storage","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DucPhong135"},"content":"        storageInstance.loadFileData();","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DucPhong135"},"content":"        // Super loop used for receiving inputs continuously and responding back to the user","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DucPhong135"},"content":"        SuperLoop:","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DucPhong135"},"content":"        while (true) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DucPhong135"},"content":"            String input \u003d inputReader.nextLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DucPhong135"},"content":"            if (parserInstance.processCommand(input) !\u003d 0) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DucPhong135"},"content":"                break SuperLoop;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DucPhong135"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DucPhong135"},"content":"            // Update the task data in the file","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DucPhong135"},"content":"            storageInstance.updateFileData();","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29","isFullCredit":false}],"authorContributionMap":{"DucPhong135":61,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DucPhong135"},"content":"/**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DucPhong135"},"content":" * The DukeException class handles custom exceptions specific to the Duke application.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DucPhong135"},"content":" * It extends the Exception class and provides additional functionality for displaying warning messages.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DucPhong135"},"content":" */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DucPhong135"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DucPhong135"},"content":"     * Constructs a DukeException with the specified detail message.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DucPhong135"},"content":"     * @param message The detail message, which can be retrieved later by the {@code getMessage()} method.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DucPhong135"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DucPhong135"},"content":"        super(message);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DucPhong135"},"content":"     * Displays the warning message prefixed with \"Warning: \".","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DucPhong135"},"content":"     * The message is retrieved using the {@code getMessage()} method from the Exception class.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DucPhong135"},"content":"    public void displayMessage() {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DucPhong135"},"content":"        System.out.println(\"Warning: \" + getMessage());","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DucPhong135"},"content":"}","lastModifiedDate":"2024-09-10","isFullCredit":false}],"authorContributionMap":{"DucPhong135":23}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DucPhong135"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DucPhong135"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DucPhong135"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DucPhong135"},"content":"/**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DucPhong135"},"content":" * The Event class represents a task that has a start date (from) and an end date (to).","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DucPhong135"},"content":" * It extends the Task class and includes specific date information.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DucPhong135"},"content":" */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DucPhong135"},"content":"public class Event extends Task {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DucPhong135"},"content":"    // Start date of the event","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DucPhong135"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DucPhong135"},"content":"    // End date of the event","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DucPhong135"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DucPhong135"},"content":"     * Constructs an Event object with a description, start date, and end date.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DucPhong135"},"content":"     * The dates are validated and parsed from the input strings.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DucPhong135"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DucPhong135"},"content":"     * @param from The start date of the event in \"yyyy-MM-dd\" format.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DucPhong135"},"content":"     * @param to The end date of the event in \"yyyy-MM-dd\" format.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DucPhong135"},"content":"     * @throws DukeException If the date format is invalid.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DucPhong135"},"content":"    public Event(String description, String from, String to) throws DukeException {","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DucPhong135"},"content":"        super(description);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DucPhong135"},"content":"        try {","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DucPhong135"},"content":"            this.from \u003d LocalDate.parse(from); // Parse the start date","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DucPhong135"},"content":"            this.to \u003d LocalDate.parse(to);     // Parse the end date","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DucPhong135"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DucPhong135"},"content":"            throw new DukeException(\"Please input date in valid format yyyy-MM-dd\");","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DucPhong135"},"content":"     * Gets the start date of the event.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DucPhong135"},"content":"     * @return The start date as a string.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DucPhong135"},"content":"    public String getFrom() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DucPhong135"},"content":"        return from.toString();","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DucPhong135"},"content":"     * Gets the end date of the event.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DucPhong135"},"content":"     * @return The end date as a string.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DucPhong135"},"content":"    public String getTo() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DucPhong135"},"content":"        return to.toString();","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DucPhong135"},"content":"     * Returns a string representation of the event, including the description, start, and end dates.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DucPhong135"},"content":"     * The dates are formatted in \"MMM dd yyyy\" format.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DucPhong135"},"content":"     * @return A string representing the event with its description, start, and end dates.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DucPhong135"},"content":"    @Override","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DucPhong135"},"content":"    public String toString() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DucPhong135"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DucPhong135"},"content":"        String formattedFrom \u003d from.format(formatter);","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DucPhong135"},"content":"        String formattedTo \u003d to.format(formatter);","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DucPhong135"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formattedFrom + \" to: \" + formattedTo + \")\";","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DucPhong135"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"DucPhong135":67}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DucPhong135"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DucPhong135"},"content":"/**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DucPhong135"},"content":" * The Main class serves as the entry point for the Duke application.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DucPhong135"},"content":" * It initializes the Duke instance and starts the chatbot execution.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DucPhong135"},"content":" */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DucPhong135"},"content":"public class Main {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DucPhong135"},"content":"     * The main method is the entry point of the Duke application.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DucPhong135"},"content":"     * It creates an instance of the Duke chatbot and executes it.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DucPhong135"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DucPhong135"},"content":"     * @throws DukeException If there is an error specific to Duke\u0027s execution.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DucPhong135"},"content":"     * @throws IOException If there is an input/output error.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DucPhong135"},"content":"    public static void main(String[] args) throws DukeException, IOException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DucPhong135"},"content":"        Duke LamboInstance \u003d new Duke(); // Create an instance of the Duke chatbot","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DucPhong135"},"content":"        LamboInstance.execute(); // Start the chatbot execution","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DucPhong135"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"DucPhong135":21}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DucPhong135"},"content":"/**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DucPhong135"},"content":" * The Parser class handles the processing and validation of user input.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DucPhong135"},"content":" * It interacts with the TaskList and UI to manage tasks and display appropriate responses.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DucPhong135"},"content":" * It also checks for input validity and throws exceptions where necessary.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DucPhong135"},"content":" */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DucPhong135"},"content":"public class Parser {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DucPhong135"},"content":"    // Reference to the TaskList instance","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DucPhong135"},"content":"    private TaskList taskListInstance;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DucPhong135"},"content":"    // Reference to the UI instance","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DucPhong135"},"content":"    private UI uiInstance;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DucPhong135"},"content":"     * Constructor for the Parser.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DucPhong135"},"content":"     * Associates the Parser with TaskList and UI instances to handle input processing and display.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DucPhong135"},"content":"     * @param taskList The TaskList instance to be used by the Parser.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DucPhong135"},"content":"     * @param uiInstance The UI instance to be used for displaying messages.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DucPhong135"},"content":"    public Parser(TaskList taskList, UI uiInstance) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DucPhong135"},"content":"        this.taskListInstance \u003d taskList;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DucPhong135"},"content":"        this.uiInstance \u003d uiInstance;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DucPhong135"},"content":"     * Checks the validity of ToDo input.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DucPhong135"},"content":"     * Throws a DukeException if the input is empty or null.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DucPhong135"},"content":"     * @param input The description of the ToDo task.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DucPhong135"},"content":"     * @throws DukeException If the input is invalid.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DucPhong135"},"content":"    public void checkTodoInput(String input) throws DukeException {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DucPhong135"},"content":"        if (input \u003d\u003d null || input.isEmpty()) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DucPhong135"},"content":"            // Throw a custom exception for empty input","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DucPhong135"},"content":"            uiInstance.Warning(\"Description for a todo cannot be empty\");","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DucPhong135"},"content":"     * Checks the validity of Deadline input.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DucPhong135"},"content":"     * Throws a DukeException if the description or date input is invalid.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DucPhong135"},"content":"     * @param input The description of the Deadline task.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DucPhong135"},"content":"     * @param state The state indicating whether the \"/by\" date was provided correctly.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DucPhong135"},"content":"     * @throws DukeException If the input is invalid or incomplete.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DucPhong135"},"content":"    public void checkDeadlineInput(String input, int state) throws DukeException {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DucPhong135"},"content":"        if (input \u003d\u003d null || input.isEmpty()) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DucPhong135"},"content":"            // Throw a custom exception for empty input","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DucPhong135"},"content":"            uiInstance.Warning(\"Description for a deadline cannot be empty\");","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DucPhong135"},"content":"        } else if (state \u003d\u003d 0) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DucPhong135"},"content":"            uiInstance.Warning(\"There is no date for a deadline\");","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DucPhong135"},"content":"        } else if (state \u003e 1) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DucPhong135"},"content":"            uiInstance.Warning(\"Too many /by statements\");","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DucPhong135"},"content":"     * Checks the validity of Event input.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DucPhong135"},"content":"     * Throws a DukeException if the description or date range is incomplete.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DucPhong135"},"content":"     * @param input The description of the Event task.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DucPhong135"},"content":"     * @param state The state indicating whether the \"/from\" and \"/to\" dates were provided correctly.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DucPhong135"},"content":"     * @throws DukeException If the input is invalid or incomplete.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DucPhong135"},"content":"    public void checkEventInput(String input, int state) throws DukeException {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DucPhong135"},"content":"        if (input \u003d\u003d null || input.isEmpty()) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DucPhong135"},"content":"            // Throw a custom exception for empty input","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DucPhong135"},"content":"            uiInstance.Warning(\"Description for an event cannot be empty\");","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DucPhong135"},"content":"        } else if (state \u003d\u003d 0) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DucPhong135"},"content":"            uiInstance.Warning(\"There is no start and end for this event\");","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DucPhong135"},"content":"        } else if (state \u003d\u003d 1) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DucPhong135"},"content":"            uiInstance.Warning(\"There is no end for this event\");","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DucPhong135"},"content":"     * Checks the validity of index input for marking and unmarking tasks.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DucPhong135"},"content":"     * Throws a DukeException if the index is invalid or out of range.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DucPhong135"},"content":"     * @param index The index of the task to be marked/unmarked.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DucPhong135"},"content":"     * @param taskCount The total number of tasks in the list.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DucPhong135"},"content":"     * @throws DukeException If the index is out of bounds.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DucPhong135"},"content":"    public void checkMarkUnmarkInput(int index, int taskCount) throws DukeException {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DucPhong135"},"content":"        if (index \u003c 0 || index \u003e taskCount) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DucPhong135"},"content":"            uiInstance.Warning(\"You have input an invalid index\");","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DucPhong135"},"content":"     * Handles general invalid input commands.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DucPhong135"},"content":"     * Throws a DukeException if the command is not recognized.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DucPhong135"},"content":"     * @throws DukeException If the command is invalid.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DucPhong135"},"content":"    public void checkGeneralInput() throws DukeException {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DucPhong135"},"content":"        uiInstance.Warning(\"Sorry I cannot understand that\");","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DucPhong135"},"content":"     * Processes the user\u0027s input commands.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DucPhong135"},"content":"     * Executes appropriate actions based on the command (e.g., adding tasks, marking tasks as done).","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DucPhong135"},"content":"     * @param input The user\u0027s input command as a string.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DucPhong135"},"content":"     * @return -1 if the \"bye\" command is received, 0 for other commands.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DucPhong135"},"content":"     * @throws DukeException If an error occurs during command processing.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"DucPhong135"},"content":"    public int processCommand(String input) throws DukeException {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"DucPhong135"},"content":"        String[] inputComponent \u003d input.split(\" \");","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"DucPhong135"},"content":"        // Switch case based on the first word of input","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"DucPhong135"},"content":"        try {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"DucPhong135"},"content":"            switch (inputComponent[0]) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"DucPhong135"},"content":"                case \"bye\":","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"DucPhong135"},"content":"                    uiInstance.displayMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"DucPhong135"},"content":"                    return -1;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"DucPhong135"},"content":"                case \"list\":","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"DucPhong135"},"content":"                    taskListInstance.list();","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"DucPhong135"},"content":"                    break;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"DucPhong135"},"content":"                case \"mark\":","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"DucPhong135"},"content":"                    try {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"DucPhong135"},"content":"                        TaskList.markAsDone(Integer.parseInt(inputComponent[1]));","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"DucPhong135"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"DucPhong135"},"content":"                        uiInstance.displayMessage(\"Warning: You haven\u0027t input any number\");","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"DucPhong135"},"content":"                    }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"DucPhong135"},"content":"                    break;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"DucPhong135"},"content":"                case \"unmark\":","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"DucPhong135"},"content":"                    try {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"DucPhong135"},"content":"                        taskListInstance.markAsNotDone(Integer.parseInt(inputComponent[1]));","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"DucPhong135"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"DucPhong135"},"content":"                        uiInstance.displayMessage(\"Warning: You haven\u0027t input any number\");","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"DucPhong135"},"content":"                    }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"DucPhong135"},"content":"                    break;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"DucPhong135"},"content":"                case \"todo\":","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"DucPhong135"},"content":"                    taskListInstance.addToDo(inputComponent);","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"DucPhong135"},"content":"                    break;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"DucPhong135"},"content":"                case \"deadline\":","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"DucPhong135"},"content":"                    taskListInstance.addDeadline(inputComponent);","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"DucPhong135"},"content":"                    break;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"DucPhong135"},"content":"                case \"event\":","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"DucPhong135"},"content":"                    taskListInstance.addEvent(inputComponent);","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"DucPhong135"},"content":"                    break;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"DucPhong135"},"content":"                case \"delete\":","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"DucPhong135"},"content":"                    taskListInstance.deleteTask(Integer.parseInt(inputComponent[1]));","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"DucPhong135"},"content":"                    break;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"DucPhong135"},"content":"                case \"find\":","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"DucPhong135"},"content":"                    taskListInstance.findTaskKeyword(inputComponent);","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"DucPhong135"},"content":"                    break;","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"DucPhong135"},"content":"                default:","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"DucPhong135"},"content":"                    checkGeneralInput(); // Check for invalid command","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"DucPhong135"},"content":"            }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"DucPhong135"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"DucPhong135"},"content":"            e.displayMessage();","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"DucPhong135"},"content":"        return 0;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"DucPhong135"},"content":"}","lastModifiedDate":"2024-09-25","isFullCredit":false}],"authorContributionMap":{"DucPhong135":159}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DucPhong135"},"content":"import java.io.File;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DucPhong135"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DucPhong135"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DucPhong135"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DucPhong135"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DucPhong135"},"content":"/**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DucPhong135"},"content":" * The Storage class handles the reading and writing of task data to and from a file.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DucPhong135"},"content":" * It ensures that tasks are persisted between sessions by storing them in a text file.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DucPhong135"},"content":" */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DucPhong135"},"content":"public class Storage {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DucPhong135"},"content":"    // Path to the folder where the data file is stored","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DucPhong135"},"content":"    private static String folderPath \u003d \"./data\";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DucPhong135"},"content":"    // Path to the file where the tasks are saved","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DucPhong135"},"content":"    private static String filePath \u003d folderPath + \"/duke.txt\";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DucPhong135"},"content":"    // Reference to the TaskList instance for managing tasks","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DucPhong135"},"content":"    private static TaskList taskListInstance;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DucPhong135"},"content":"     * Constructs a Storage object with a reference to a TaskList instance.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DucPhong135"},"content":"     * @param taskList The TaskList instance used to store and retrieve tasks.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DucPhong135"},"content":"    public Storage(TaskList taskList) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DucPhong135"},"content":"        this.taskListInstance \u003d taskList;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DucPhong135"},"content":"     * Loads task data from the file and populates the TaskList instance.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DucPhong135"},"content":"     * If the file or directory does not exist, they are created.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DucPhong135"},"content":"     * @throws DukeException If there is an error in loading the file data.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DucPhong135"},"content":"     * @throws IOException If there is an issue accessing the file system.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DucPhong135"},"content":"    public void loadFileData() throws DukeException, IOException {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DucPhong135"},"content":"        File folder \u003d new File(folderPath);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DucPhong135"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DucPhong135"},"content":"            folder.mkdirs();","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DucPhong135"},"content":"        try (Scanner scanner \u003d new Scanner(new File(filePath))) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DucPhong135"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DucPhong135"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DucPhong135"},"content":"                loadLineData(line);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DucPhong135"},"content":"            }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DucPhong135"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DucPhong135"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DucPhong135"},"content":"            boolean succeed \u003d file.createNewFile();","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DucPhong135"},"content":"     * Loads a single line of data from the file and adds the corresponding task to the TaskList.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DucPhong135"},"content":"     * @param line A line of data from the file representing a task.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DucPhong135"},"content":"     * @throws DukeException If there is an error parsing the line data.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DucPhong135"},"content":"    public static void loadLineData(String line) throws DukeException {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DucPhong135"},"content":"        String[] inputComponent \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DucPhong135"},"content":"        switch (inputComponent[0]) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DucPhong135"},"content":"            case \"T\" -\u003e {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DucPhong135"},"content":"                TaskList.add(new ToDo(inputComponent[1]));","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DucPhong135"},"content":"                if (inputComponent[2].equals(\"1\")) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DucPhong135"},"content":"                    taskListInstance.getTask(TaskList.getTaskCount() - 1).markAsDone();","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DucPhong135"},"content":"                }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DucPhong135"},"content":"            }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DucPhong135"},"content":"            case \"D\" -\u003e {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DucPhong135"},"content":"                TaskList.add(new Deadline(inputComponent[1], inputComponent[2]));","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DucPhong135"},"content":"                if (inputComponent[3].equals(\"1\")) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DucPhong135"},"content":"                    taskListInstance.getTask(TaskList.getTaskCount() - 1).markAsDone();","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DucPhong135"},"content":"                }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DucPhong135"},"content":"            }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DucPhong135"},"content":"            case \"E\" -\u003e {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DucPhong135"},"content":"                TaskList.add(new Event(inputComponent[1], inputComponent[2], inputComponent[3]));","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DucPhong135"},"content":"                if (inputComponent[4].equals(\"1\")) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DucPhong135"},"content":"                    taskListInstance.getTask(TaskList.getTaskCount() - 1).markAsDone();","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DucPhong135"},"content":"                }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DucPhong135"},"content":"            }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DucPhong135"},"content":"     * Creates a string representation of a task to be written to the file.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DucPhong135"},"content":"     * The string follows the format \"T | description | status\" for ToDo tasks,","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DucPhong135"},"content":"     * and includes additional details for Deadline and Event tasks.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DucPhong135"},"content":"     * @param task The task to be serialized to a string.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DucPhong135"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DucPhong135"},"content":"     * @throws DukeException If there is an error processing the task data.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DucPhong135"},"content":"     * @throws IOException If there is an issue during serialization.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DucPhong135"},"content":"    public static String addLineData(Task task) throws DukeException, IOException {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DucPhong135"},"content":"        String line \u003d \"\";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DucPhong135"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DucPhong135"},"content":"            line +\u003d \"T | \" + task.getDescription() + \" | \";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DucPhong135"},"content":"            line +\u003d task.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DucPhong135"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DucPhong135"},"content":"            line +\u003d \"D | \" + task.getDescription() + \" | \" + ((Deadline) task).getBy() + \" | \";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DucPhong135"},"content":"            line +\u003d task.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DucPhong135"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DucPhong135"},"content":"            line +\u003d \"E | \" + task.getDescription() + \" | \" + ((Event) task).getFrom() + \" | \" + ((Event) task).getTo() + \" | \";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DucPhong135"},"content":"            line +\u003d task.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DucPhong135"},"content":"        return line;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"DucPhong135"},"content":"     * Updates the file with the latest task data after every command.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"DucPhong135"},"content":"     * This method overwrites the existing file with the current TaskList data.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"DucPhong135"},"content":"     * @throws DukeException If there is an error in generating the task data.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"DucPhong135"},"content":"     * @throws IOException If there is an issue writing to the file.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"DucPhong135"},"content":"    public void updateFileData() throws DukeException, IOException {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"DucPhong135"},"content":"        try (FileWriter writer \u003d new FileWriter(filePath, false)) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"DucPhong135"},"content":"            for (int i \u003d 0; i \u003c TaskList.getTaskCount(); i++) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"DucPhong135"},"content":"                writer.write(addLineData(taskListInstance.getTask(i)) + System.lineSeparator());","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"DucPhong135"},"content":"            }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"DucPhong135"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"DucPhong135"},"content":"            throw new DukeException(\"Cannot write to file\");","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"DucPhong135"},"content":"}","lastModifiedDate":"2024-09-20","isFullCredit":false}],"authorContributionMap":{"DucPhong135":125}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DucPhong135"},"content":"/**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DucPhong135"},"content":" * Represents a task with a description and its completion status.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DucPhong135"},"content":" * Tasks can be marked as done or not done, and their status is tracked.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DucPhong135"},"content":" */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DucPhong135"},"content":"public class Task {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DucPhong135"},"content":"    // Description of the task","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DucPhong135"},"content":"    protected String description;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DucPhong135"},"content":"    // Status of whether the task is done","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DucPhong135"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DucPhong135"},"content":"     * Default constructor for Task, initializes the task with an empty description","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DucPhong135"},"content":"     * and marks it as not done.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DucPhong135"},"content":"    public Task() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DucPhong135"},"content":"        description \u003d \"\";","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DucPhong135"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DucPhong135"},"content":"     * Constructor to create a task with a specific description.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DucPhong135"},"content":"     * The task is initialized as not done.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DucPhong135"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DucPhong135"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DucPhong135"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DucPhong135"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DucPhong135"},"content":"     * Retrieves the status icon for the task.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DucPhong135"},"content":"     * If the task is done, an \"X\" is returned, otherwise a blank space is returned.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DucPhong135"},"content":"     * @return The status icon (\"X\" if done, \" \" if not done).","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DucPhong135"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DucPhong135"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DucPhong135"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DucPhong135"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DucPhong135"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DucPhong135"},"content":"        return description;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DucPhong135"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DucPhong135"},"content":"     * Throws an exception if the task is already marked as done.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DucPhong135"},"content":"     * @throws DukeException if the task is already marked as done.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DucPhong135"},"content":"    public void markAsDone() throws DukeException {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DucPhong135"},"content":"        try {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DucPhong135"},"content":"            if (isDone) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DucPhong135"},"content":"                throw new DukeException(\"This task is already marked as done\"); // throw exception if the task is marked","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DucPhong135"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DucPhong135"},"content":"            isDone \u003d true;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DucPhong135"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DucPhong135"},"content":"            e.displayMessage();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DucPhong135"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DucPhong135"},"content":"     * Throws an exception if the task is already marked as not done.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DucPhong135"},"content":"     * @throws DukeException if the task is already marked as not done.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DucPhong135"},"content":"    public void markAsNotDone() throws DukeException {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DucPhong135"},"content":"        try {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DucPhong135"},"content":"            if (!isDone) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DucPhong135"},"content":"                throw new DukeException(\"This task is already marked as undone\"); // throw exception if the task is unmark","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DucPhong135"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DucPhong135"},"content":"            isDone \u003d false;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DucPhong135"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DucPhong135"},"content":"            e.displayMessage();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DucPhong135"},"content":"     * Returns a string representation of the task, including its status and description.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DucPhong135"},"content":"     * @return A string representing the task.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DucPhong135"},"content":"    @Override","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DucPhong135"},"content":"    public String toString() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DucPhong135"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DucPhong135"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"DucPhong135":94}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DucPhong135"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DucPhong135"},"content":"/**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DucPhong135"},"content":" * The TaskList class manages a collection of tasks.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DucPhong135"},"content":" * It supports adding tasks of different types (ToDo, Deadline, Event),","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DucPhong135"},"content":" * marking them as done/undone, deleting tasks, and finding tasks by keyword.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DucPhong135"},"content":" */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DucPhong135"},"content":"public class TaskList {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DucPhong135"},"content":"    // List to store tasks","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DucPhong135"},"content":"    private static ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DucPhong135"},"content":"    // Number of tasks","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DucPhong135"},"content":"    private static int taskCount;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DucPhong135"},"content":"    // UI instance for user interaction","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DucPhong135"},"content":"    private static UI uiInstance;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DucPhong135"},"content":"    // Parser instance for input handling","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DucPhong135"},"content":"    private Parser parserInstance;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DucPhong135"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DucPhong135"},"content":"     * Initializes an empty task list and sets task count to 0.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DucPhong135"},"content":"    public TaskList() {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DucPhong135"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DucPhong135"},"content":"        taskCount \u003d 0;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DucPhong135"},"content":"        uiInstance \u003d null;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DucPhong135"},"content":"     * Adds a new task to the task list and increments the task count.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DucPhong135"},"content":"     * @param newTask The task to be added.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DucPhong135"},"content":"    public static void add(Task newTask) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DucPhong135"},"content":"        taskList.add(newTask);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DucPhong135"},"content":"        taskCount++;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DucPhong135"},"content":"     * Sets the UI instance for task list.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DucPhong135"},"content":"     * @param ui The UI instance to be set.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DucPhong135"},"content":"    public void setUI(UI ui) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DucPhong135"},"content":"        uiInstance \u003d ui;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DucPhong135"},"content":"     * Sets the Parser instance for task list.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DucPhong135"},"content":"     * @param parser The Parser instance to be set.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DucPhong135"},"content":"    public void setParser(Parser parser) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DucPhong135"},"content":"        parserInstance \u003d parser;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DucPhong135"},"content":"     * Adds a ToDo task to the task list.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DucPhong135"},"content":"     * @param inputComponent Array of input components where the description is built from.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DucPhong135"},"content":"     * @throws DukeException if there is an error in the ToDo input.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DucPhong135"},"content":"    public void addToDo(String[] inputComponent) throws DukeException {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DucPhong135"},"content":"        String description \u003d \"\";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DucPhong135"},"content":"        for (int i \u003d 1; i \u003c inputComponent.length; i++) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DucPhong135"},"content":"            description +\u003d inputComponent[i];","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DucPhong135"},"content":"            description +\u003d \" \";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DucPhong135"},"content":"        try {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DucPhong135"},"content":"            parserInstance.checkTodoInput(description);","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DucPhong135"},"content":"            taskList.add(new ToDo(description.trim()));","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DucPhong135"},"content":"            taskCount++;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DucPhong135"},"content":"            uiInstance.addTaskMessage(taskCount);","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DucPhong135"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DucPhong135"},"content":"            e.displayMessage();","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DucPhong135"},"content":"     * Adds a Deadline task to the task list.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DucPhong135"},"content":"     * @param inputComponent Array of input components where description and deadline date are parsed.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DucPhong135"},"content":"     * @throws DukeException if there is an error in the Deadline input.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DucPhong135"},"content":"    public void addDeadline(String[] inputComponent) throws DukeException {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DucPhong135"},"content":"        String description \u003d \"\";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DucPhong135"},"content":"        String by \u003d \"\";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DucPhong135"},"content":"        int state \u003d 0; // transition from \"description\" to \"by\" string","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DucPhong135"},"content":"        for (int i \u003d 1; i \u003c inputComponent.length; i++) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DucPhong135"},"content":"            if (inputComponent[i].equals(\"/by\")) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DucPhong135"},"content":"                state +\u003d 1;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DucPhong135"},"content":"            } else {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DucPhong135"},"content":"                if (state \u003d\u003d 1) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DucPhong135"},"content":"                    by +\u003d inputComponent[i];","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DucPhong135"},"content":"                    by +\u003d \" \";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DucPhong135"},"content":"                } else {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DucPhong135"},"content":"                    description +\u003d inputComponent[i];","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DucPhong135"},"content":"                    description +\u003d \" \";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DucPhong135"},"content":"                }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DucPhong135"},"content":"            }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DucPhong135"},"content":"        try {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"DucPhong135"},"content":"            parserInstance.checkDeadlineInput(description, state);","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"DucPhong135"},"content":"            taskList.add(new Deadline(description.trim(), by.trim()));","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"DucPhong135"},"content":"            taskCount++;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"DucPhong135"},"content":"            uiInstance.addTaskMessage(taskCount);","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"DucPhong135"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"DucPhong135"},"content":"            e.displayMessage();","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"DucPhong135"},"content":"     * Adds an Event task to the task list.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"DucPhong135"},"content":"     * @param inputComponent Array of input components where description, start time, and end time are parsed.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"DucPhong135"},"content":"    public void addEvent(String[] inputComponent) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"DucPhong135"},"content":"        String description \u003d \"\";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"DucPhong135"},"content":"        String from \u003d \"\";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"DucPhong135"},"content":"        String to \u003d \"\";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"DucPhong135"},"content":"        int state \u003d 0; // transition from \"description\" to \"from\" to \"to\" string","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"DucPhong135"},"content":"        for (int i \u003d 1; i \u003c inputComponent.length; i++) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"DucPhong135"},"content":"            if (inputComponent[i].equals(\"/from\")) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"DucPhong135"},"content":"                state \u003d 1;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"DucPhong135"},"content":"            } else if (inputComponent[i].equals(\"/to\")) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"DucPhong135"},"content":"                state \u003d 2;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"DucPhong135"},"content":"            } else {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"DucPhong135"},"content":"                if (state \u003d\u003d 1) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"DucPhong135"},"content":"                    from +\u003d inputComponent[i];","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"DucPhong135"},"content":"                    from +\u003d \" \";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"DucPhong135"},"content":"                } else if (state \u003d\u003d 2) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"DucPhong135"},"content":"                    to +\u003d inputComponent[i];","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"DucPhong135"},"content":"                    to +\u003d \" \";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"DucPhong135"},"content":"                } else {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"DucPhong135"},"content":"                    description +\u003d inputComponent[i];","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"DucPhong135"},"content":"                    description +\u003d \" \";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"DucPhong135"},"content":"                }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"DucPhong135"},"content":"            }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"DucPhong135"},"content":"        try {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"DucPhong135"},"content":"            parserInstance.checkEventInput(description, state);","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"DucPhong135"},"content":"            taskList.add(new Event(description.trim(), from.trim(), to.trim()));","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"DucPhong135"},"content":"            taskCount++;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"DucPhong135"},"content":"            uiInstance.addTaskMessage(taskCount);","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"DucPhong135"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"DucPhong135"},"content":"            e.displayMessage();","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"DucPhong135"},"content":"     * Deletes a task at the specified index from the task list.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"DucPhong135"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"DucPhong135"},"content":"     * @throws DukeException if the index is invalid.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"DucPhong135"},"content":"    public void deleteTask(int index) throws DukeException {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"DucPhong135"},"content":"        if (index - 1 \u003c 0 || index - 1 \u003e\u003d taskCount) {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"DucPhong135"},"content":"            uiInstance.Warning(\"You have input an invalid index\");","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"DucPhong135"},"content":"            return;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"DucPhong135"},"content":"        String deleted \u003d taskList.get(index - 1).toString();","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"DucPhong135"},"content":"        taskList.remove(index - 1);","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"DucPhong135"},"content":"        taskCount--;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"DucPhong135"},"content":"        uiInstance.deleteTaskMessage(taskCount, deleted);","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"DucPhong135"},"content":"     * Lists all tasks in the task list.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"DucPhong135"},"content":"     * If no tasks are present, a message is displayed.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"DucPhong135"},"content":"    public void list() {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"DucPhong135"},"content":"        if (taskCount \u003d\u003d 0) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"DucPhong135"},"content":"            uiInstance.displayMessage(\"No tasks found\");","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"DucPhong135"},"content":"        } else {","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"DucPhong135"},"content":"            for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"DucPhong135"},"content":"                uiInstance.displayTask(i);","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"DucPhong135"},"content":"            }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"DucPhong135"},"content":"     * Gets the current number of tasks in the task list.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"DucPhong135"},"content":"     * @return The number of tasks.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"DucPhong135"},"content":"    public static int getTaskCount() {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"DucPhong135"},"content":"        return taskCount;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"DucPhong135"},"content":"     * Marks the task at the specified index as done.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"DucPhong135"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"DucPhong135"},"content":"     * @throws DukeException if the index is invalid.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"DucPhong135"},"content":"    public static void markAsDone(int index) throws DukeException {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"DucPhong135"},"content":"        if (index \u003c 0 || index \u003e taskCount) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"DucPhong135"},"content":"            uiInstance.Warning(\"You have input an invalid index\");","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"DucPhong135"},"content":"            return;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"DucPhong135"},"content":"        taskList.get(index - 1).markAsDone();","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"DucPhong135"},"content":"        uiInstance.markTaskMessage(index);","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"DucPhong135"},"content":"     * Marks the task at the specified index as not done.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"DucPhong135"},"content":"     * @param index The index of the task to be marked as not done.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"DucPhong135"},"content":"     * @throws DukeException if the index is invalid.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"DucPhong135"},"content":"    public void markAsNotDone(int index) throws DukeException {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"DucPhong135"},"content":"        if (index \u003c 0 || index \u003e taskCount) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"DucPhong135"},"content":"            uiInstance.Warning(\"You have input an invalid index\");","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"DucPhong135"},"content":"            return;","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"DucPhong135"},"content":"        taskList.get(index - 1).markAsNotDone();","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"DucPhong135"},"content":"        uiInstance.unmarkTaskMessage(index);","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"DucPhong135"},"content":"     * Gets the task at the specified index.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"DucPhong135"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"DucPhong135"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"DucPhong135"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"DucPhong135"},"content":"        return taskList.get(index);","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"DucPhong135"},"content":"     * Finds tasks that contain the specified keyword in their description.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"DucPhong135"},"content":"     * @param inputComponent Array of input components where the keyword is located.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"DucPhong135"},"content":"     * @throws DukeException if no tasks match the keyword.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"DucPhong135"},"content":"    public void findTaskKeyword(String[] inputComponent) throws DukeException {","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"DucPhong135"},"content":"        String keyword \u003d \"\";","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"DucPhong135"},"content":"        for (int i \u003d 1; i \u003c inputComponent.length; i++) {","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"DucPhong135"},"content":"            keyword +\u003d inputComponent[i];","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"DucPhong135"},"content":"            if (i !\u003d inputComponent.length - 1) {","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"DucPhong135"},"content":"                keyword +\u003d \" \";","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"DucPhong135"},"content":"            }","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"DucPhong135"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"DucPhong135"},"content":"        uiInstance.displayMessageForFind();","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"DucPhong135"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"DucPhong135"},"content":"            if (taskList.get(i).getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"DucPhong135"},"content":"                count++;","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"DucPhong135"},"content":"                uiInstance.displayTaskForFind(i, count);","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"DucPhong135"},"content":"            }","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"DucPhong135"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"DucPhong135"},"content":"            uiInstance.displayMessage(\"No tasks found matching the keyword\");","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"DucPhong135"},"content":"        }","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"DucPhong135"},"content":"}","lastModifiedDate":"2024-09-20","isFullCredit":false}],"authorContributionMap":{"DucPhong135":266}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DucPhong135"},"content":"/**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DucPhong135"},"content":" * The ToDo class represents a task with only a description, without any specific dates.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DucPhong135"},"content":" * It extends the Task class and adds a simple string representation for ToDo tasks.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DucPhong135"},"content":" */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DucPhong135"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DucPhong135"},"content":"     * Constructs a ToDo task with the specified description.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DucPhong135"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DucPhong135"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DucPhong135"},"content":"        super(description);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DucPhong135"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DucPhong135"},"content":"     * The string includes a \"[T]\" to indicate that it is a ToDo task.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DucPhong135"},"content":"     * @return A string representing the ToDo task.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DucPhong135"},"content":"    @Override","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DucPhong135"},"content":"    public String toString() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DucPhong135"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DucPhong135"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"DucPhong135":26}},{"path":"src/main/java/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DucPhong135"},"content":"/**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DucPhong135"},"content":" * The UI class handles the display of messages and user interactions.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DucPhong135"},"content":" * It provides methods for showing warnings, task-related messages, and status updates.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DucPhong135"},"content":" */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DucPhong135"},"content":"public class UI {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DucPhong135"},"content":"    // Reference to the TaskList instance","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DucPhong135"},"content":"    private TaskList taskListInstance;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DucPhong135"},"content":"     * Constructor for UI.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DucPhong135"},"content":"     * Associates the UI with a TaskList instance to display information related to tasks.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DucPhong135"},"content":"     * @param taskListInstance The TaskList instance to be used by the UI.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DucPhong135"},"content":"    public UI(TaskList taskListInstance) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DucPhong135"},"content":"        this.taskListInstance \u003d taskListInstance;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DucPhong135"},"content":"     * Displays a warning message and throws a DukeException.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DucPhong135"},"content":"     * @param message The warning message to be displayed.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DucPhong135"},"content":"     * @throws DukeException When a warning condition occurs.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DucPhong135"},"content":"    public void Warning(String message) throws DukeException {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DucPhong135"},"content":"        throw new DukeException(message);","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DucPhong135"},"content":"     * Displays a general message.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DucPhong135"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DucPhong135"},"content":"    public void displayMessage(String message) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DucPhong135"},"content":"        System.out.println(message);","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DucPhong135"},"content":"     * Displays a message when a task is added.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DucPhong135"},"content":"     * Shows the task details and the updated task count.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DucPhong135"},"content":"     * @param taskCount The current number of tasks in the list after the addition.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DucPhong135"},"content":"    public void addTaskMessage(int taskCount) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DucPhong135"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DucPhong135"},"content":"        System.out.println(taskListInstance.getTask(taskCount - 1).toString());","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DucPhong135"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list\");","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DucPhong135"},"content":"     * Displays a message when a task is deleted.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DucPhong135"},"content":"     * Shows the deleted task details and the updated task count.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DucPhong135"},"content":"     * @param taskCount The current number of tasks after deletion.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DucPhong135"},"content":"     * @param deleted The details of the deleted task.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DucPhong135"},"content":"    public void deleteTaskMessage(int taskCount, String deleted) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DucPhong135"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DucPhong135"},"content":"        System.out.println(deleted);","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DucPhong135"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list\");","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DucPhong135"},"content":"     * Displays a message when a task is marked as done.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DucPhong135"},"content":"     * Shows the task details with its marked status.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DucPhong135"},"content":"     * @param taskIndex The index of the task that was marked as done.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DucPhong135"},"content":"    public void markTaskMessage(int taskIndex) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DucPhong135"},"content":"        System.out.println(\"Noted. I\u0027ve marked this task:\");","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DucPhong135"},"content":"        System.out.print(taskIndex + \". \");","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DucPhong135"},"content":"        System.out.println(taskListInstance.getTask(taskIndex - 1).toString());","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DucPhong135"},"content":"     * Displays a message when a task is marked as not done.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DucPhong135"},"content":"     * Shows the task details with its unmarked status.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DucPhong135"},"content":"     * @param taskIndex The index of the task that was marked as not done.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DucPhong135"},"content":"    public void unmarkTaskMessage(int taskIndex) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DucPhong135"},"content":"        System.out.println(\"Noted. I\u0027ve unmarked this task:\");","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DucPhong135"},"content":"        System.out.print(taskIndex + \". \");","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DucPhong135"},"content":"        System.out.println(taskListInstance.getTask(taskIndex - 1).toString());","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DucPhong135"},"content":"     * Displays a task in the task list.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DucPhong135"},"content":"     * Shows the task index and details.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DucPhong135"},"content":"     * @param index The index of the task to be displayed.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DucPhong135"},"content":"    public void displayTask(int index) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DucPhong135"},"content":"        System.out.print((index + 1) + \". \");","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DucPhong135"},"content":"        System.out.println(taskListInstance.getTask(index).toString());","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DucPhong135"},"content":"     * Displays a found task matching a keyword search.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DucPhong135"},"content":"     * Shows the found task index in the list and its details.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DucPhong135"},"content":"     *","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DucPhong135"},"content":"     * @param taskIndex The index of the found task in the task list.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DucPhong135"},"content":"     * @param displayIndex The index of the task in the found list (for display purposes).","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DucPhong135"},"content":"    public void displayTaskForFind(int taskIndex, int displayIndex) {","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DucPhong135"},"content":"        System.out.print(displayIndex + \". \");","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DucPhong135"},"content":"        System.out.println(taskListInstance.getTask(taskIndex).toString());","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"DucPhong135"},"content":"","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"DucPhong135"},"content":"    /**","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"DucPhong135"},"content":"     * Displays a message indicating the start of a keyword search.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"DucPhong135"},"content":"     * Lists tasks that match the search keyword.","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"DucPhong135"},"content":"     */","lastModifiedDate":"2024-09-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"DucPhong135"},"content":"    public void displayMessageForFind() {","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"DucPhong135"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"DucPhong135"},"content":"    }","lastModifiedDate":"2024-09-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"DucPhong135"},"content":"}","lastModifiedDate":"2024-09-20","isFullCredit":false}],"authorContributionMap":{"DucPhong135":118}}]
