{"authorDailyContributionsMap":{"sarahchow03":[{"date":"2024-08-20","commitResults":[{"hash":"631a4ae61b8444e64a61dba24825abdb397bdefd","isMergeCommit":false,"messageTitle":"Add increment Level-0","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":10}}}]},{"date":"2024-08-26","commitResults":[{"hash":"36330d6105deeaa04f755a9c5b7201923ddc8955","isMergeCommit":false,"messageTitle":"Add increment Level-1","messageBody":"Following the instructions for Week 3, Level-1 of Mong can echo commands\nsent to the command line. Mong will exit the program when the user types\nthe command \"bye\".\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":2}}},{"hash":"f5b950c548e2afd184cf76af62c4f1a886a5165e","isMergeCommit":false,"messageTitle":"Add increment Level-2","messageBody":"Following the instructions for Week 3, Level-2 of Mong allows users to\nadd items into a list, which can be printed in index order when the\n\"list\" command is entered.\n\nAdd items to the list: add items from the command line into a list that\ndisplays when the command \"list\" is typed out.\n\nIndex items in the list: items in the list start from the number \"1\".\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":5}}},{"hash":"5e7f81753f531a4e6b28f252f5728c8125e75180","isMergeCommit":false,"messageTitle":"Add increment Level-3","messageBody":"Following the instructions for Week 3, Level-3 of Mong introduces a\nmarking command for users to set items in the command list as completed\nor uncompleted.\n\nCreate a class of ListItem: use a class to implement the adding,\nindexing, marking, and unmarking of each item in the list.\n\nThe class will handle the instantiation of each ListItem and setting of\nthe \"isCompleted\" variable that is assigned to each ListItem in the\narray of ListItems.\n","tags":["Level-3","A-CodingStandard","A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":70,"deletions":7}}}]},{"date":"2024-09-01","commitResults":[{"hash":"c2adf1b41fba22e6d0e8035ddf4b9d056f4ac7da","isMergeCommit":false,"messageTitle":"Refactor ListItem class to Task","messageBody":"To better align class names with their use cases in the iP, ListItem\nclass has been refactored to Task.\n","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":8}}},{"hash":"536437fd811fd19e9d60694b5e8c49c0aa04bab0","isMergeCommit":false,"messageTitle":"Add increment Level-4","messageBody":"Level-4 of Mong supports the tracking of three types of data, namely\nTodos, Deadlines, and Events. To implement these changes, we use\nInheritance and Polymorphism.\n\nEnumerators for TaskType: we decipher the first word in the command line\nas the TaskType. Currently, Mong supports LIST, BYE, MARK, UNMARK,\nEVENT, TODO and DEADLINE as valid task types.\n\nImprove code quality: In line with the Week 4 instructions, we improve\ncode quality through the use of constants (rather than magic numbers),\nand following of coding standards. For example, indentations of switch\nstatements are in-line and naming standards.\n\nInheritance and polymorphism: Event, Todo, and Deadlines are child\nclasses of the Task class. The toString() function takes on a\ndifferent form based on the whether the object is a Event, Todo, or\nDeadline object.\n","fileTypesAndContributionMap":{"java":{"insertions":167,"deletions":38}}},{"hash":"8ca5d3b98b9f2b66910c94646a8b19a7ec381246","isMergeCommit":false,"messageTitle":"Add increment Level-4","messageBody":"Level-4 of Mong supports the tracking of three types of data, namely\nTodos, Deadlines, and Events. To implement these changes, we use\nInheritance and Polymorphism.\n\nEnumerators for TaskType: we decipher the first word in the command line\nas the TaskType. Currently, Mong supports LIST, BYE, MARK, UNMARK,\nEVENT, TODO and DEADLINE as valid task types.\n\nImprove code quality: In line with the Week 4 instructions, we improve\ncode quality through the use of constants (rather than magic numbers),\nand following of coding standards. For example, indentations of switch\nstatements are in-line and naming standards.\n\nInheritance and polymorphism: Event, Todo, and Deadlines are child\nclasses of the Task class. The toString() function takes on a\ndifferent form based on the whether the object is a Event, Todo, or\nDeadline object.\n","fileTypesAndContributionMap":{"java":{"insertions":167,"deletions":38}}},{"hash":"49ebaa3049b7fcd039937873848332e1ad7071d1","isMergeCommit":false,"messageTitle":"Add increment Level-4","messageBody":"Level-4 of Mong supports the tracking of three types of data, namely\nTodos, Deadlines, and Events. To implement these changes, we use\nInheritance and Polymorphism.\n\nEnumerators for TaskType: we decipher the first word in the command line\nas the TaskType. Currently, Mong supports LIST, BYE, MARK, UNMARK,\nEVENT, TODO and DEADLINE as valid task types.\n\nImprove code quality: we improve code quality through the use of\nconstants (rather than magic numbers), and following of coding\nstandards. For example, indentations of switch statements are in-line\nand the following of naming standards.\n\nInheritance and polymorphism: Event, Todo, and Deadlines are child\nclasses of the Task class. The toString() function takes on a\ndifferent form based on the whether the object is a Event, Todo, or\nDeadline object.\n","tags":["Level-4","A-Inheritance","A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":167,"deletions":38}}},{"hash":"6b48b8944add2d3d34589bebe5d209127d6b18bd","isMergeCommit":false,"messageTitle":"Test using the I/O redirection technique","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"bat":{"insertions":2,"deletions":2}}}]},{"date":"2024-09-08","commitResults":[{"hash":"0efbf428e66f354d7c9026b8d5822c1cbe03c04d","isMergeCommit":false,"messageTitle":"Use exceptions to handle errors","messageBody":"Level-5 of Mong is able to handle errors involving the adding, marking,\nunmarking, listing, and other basic command errors.\n\nExceptions will print out the specific error in the terminal.\nMongException represents errors specific to Mong such as wrong\ntask types and erroneous task formats  .\n","tags":["A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":107,"deletions":34}}},{"hash":"a96453558601d18bc03d9edb3802156c02569883","isMergeCommit":false,"messageTitle":"Divide classes into packages","messageBody":"Put all classes into \u0027mong\u0027 package.\nOrganize related classes into either \u0027task\u0027 or \u0027exception\u0027 package.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":1}}},{"hash":"9adffcbd1ac43f2f521c12a2108348da38d1e6af","isMergeCommit":false,"messageTitle":"Update test files with the refactoring of code directory","messageBody":"","tags":["branch-A-Packages"],"fileTypesAndContributionMap":{"bat":{"insertions":2,"deletions":2},"sh":{"insertions":2,"deletions":2}}},{"hash":"0f9c27d1e6109eee6180777f089fd745ac10041d","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-5\u0027","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"sarahchow03":{"java":367,"md":0,"fxml":0,"sh":2,"bat":3,"gradle":0,"txt":1}},"authorContributionVariance":{"sarahchow03":17644.521},"authorDisplayNameMap":{"sarahchow03":"CS2113-T10-3 SARA..XUAN"}}
