[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"# JeM chatbot User Guide","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"![Jem ChatBot Screenshot](https://imgur.com/RZW6wEB)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"JeM is a personal task management chatbot designed to help you organize and track your to-dos, deadlines, and events in a simple and efficient way. With JeM, you can add tasks, mark them as completed, delete them, and much more. This guide will walk you through all of JeM\u0027s features so you can use it effectively.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"To try out the chatbot, you can download the latest version of JeM from [here](https://github.com/Atulteja/ip/releases/tag/A-Release).","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"## Features Overview","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"- Words in UPPER_CASE represents parameters to be supplied by the user. ","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"  - e.g.: `deadline TASK /by DATE_TIME`, where `TASK` and `DATE_TIME` are parameters you provide.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"- Types of Tasks that can inputted into the chatbot are Todo, Deadline and Event using the keywords `Todo`, `Deadline`, `Event` at the start of the inputs","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"- Certain flags need to be used when it comes to inputting tasks","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"  - e.g.: `/by DATE_TIME` for deadlines and `/from START_DATE_TIME /to END_DATE_TIME` for events","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"## Adding a deadline","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"The `deadline` command allows you to add a task with a specified deadline.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"### Usage:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"`deadline TASK /by DATE_TIME`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"- **TASK**: The description of the task.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"- **DATE_TIME**: The deadline date and time in the format `dd/MM/yyyy HH:mm`.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"### Example:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"deadline submit project report /by 15/10/2024 18:00","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"### Outcome:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"[D][ ] submit project report (by: 15-10-2024 06:00 PM)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"Now you have 1 task in your list.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"1.[D][ ] submit project report (by: 15-10-2024 06:00 PM)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"## Adding an Event","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"The `event` command allows you to add a task that occurs over a period of time.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"### Usage:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"`event TASK /from START_DATE_TIME /to END_DATE_TIME`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"- **TASK**: The description of the event.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"- **START_DATE_TIME**: The start date and time of the event.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"- **END_DATE_TIME**: The end date and time of the event.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"### Example:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"`event project meeting /from 15/10/2024 09:00 /to 15/10/2024 11:00`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"### Outcome:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"[E][ ] project meeting (from: 15-10-2024 09:00 AM to 15-10-2024 11:00 AM)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"Now you have 2 tasks in your list.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"1.[D][ ] submit project report (by: 15-10-2024 06:00 PM)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"2.[E][ ] project meeting (from: 15-10-2024 09:00 AM to 15-10-2024 11:00 AM)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"## Adding a To-Do","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Atulteja"},"content":"The `todo` command allows you to add a simple task without a deadline.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Atulteja"},"content":"### Usage:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Atulteja"},"content":"`todo TASK`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Atulteja"},"content":"- **TASK**: The description of the task.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Atulteja"},"content":"### Example:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Atulteja"},"content":"`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Atulteja"},"content":"- **TASK**: The description of the task.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Atulteja"},"content":"### Outcome:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Atulteja"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Atulteja"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Atulteja"},"content":"[T][ ] buy groceries ","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Atulteja"},"content":"Now you have 3 tasks in your list.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Atulteja"},"content":"1.[D][ ] submit project report (by: 15-10-2024 06:00 PM)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Atulteja"},"content":"2.[E][ ] project meeting (from: 15-10-2024 09:00 AM to 15-10-2024 11:00 AM)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Atulteja"},"content":"3.[T][ ] buy groceries","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Atulteja"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Atulteja"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Atulteja"},"content":"## Marking a Task as Done","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Atulteja"},"content":"The `mark` command allows you to mark a task as completed.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Atulteja"},"content":"### Usage:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Atulteja"},"content":"`mark INDEX`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Atulteja"},"content":"- **INDEX**: The index of the task to be marked as done.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Atulteja"},"content":"### Example:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Atulteja"},"content":"`mark 1`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Atulteja"},"content":"### Outcome:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Atulteja"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Atulteja"},"content":"Here is your current list:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Atulteja"},"content":"1.[D][X] submit project report (by: 15-10-2024 06:00 PM)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Atulteja"},"content":"2.[E][ ] project meeting (from: 15-10-2024 09:00 AM to 15-10-2024 11:00 AM)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Atulteja"},"content":"3.[T][ ] buy groceries","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Atulteja"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Atulteja"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Atulteja"},"content":"## Unmarking a Task","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Atulteja"},"content":"The `unmark` command allows you to mark a task as completed.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Atulteja"},"content":"### Usage:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Atulteja"},"content":"`unmark INDEX`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Atulteja"},"content":"- **INDEX**: The index of the task to be marked as done.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Atulteja"},"content":"### Example:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Atulteja"},"content":"`unmark 1`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Atulteja"},"content":"### Outcome:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Atulteja"},"content":"Here is your current list:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Atulteja"},"content":"1.[D][ ] submit project report (by: 15-10-2024 06:00 PM)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Atulteja"},"content":"2.[E][ ] project meeting (from: 15-10-2024 09:00 AM to 15-10-2024 11:00 AM)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Atulteja"},"content":"3.[T][ ] buy groceries ","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Atulteja"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Atulteja"},"content":"## Deleting a Task","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Atulteja"},"content":"The `delete` command allows you to remove a task from your list.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Atulteja"},"content":"### Usage:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Atulteja"},"content":"`delete INDEX`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Atulteja"},"content":"- **INDEX**: The index of the task to delete.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Atulteja"},"content":"### Example:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Atulteja"},"content":"`delete 3`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Atulteja"},"content":"### Outcome:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Atulteja"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Atulteja"},"content":"I have removed this task: ","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Atulteja"},"content":"[T][ ] buy groceries ","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Atulteja"},"content":"Here is your current list:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Atulteja"},"content":"1.[D][ ] submit project report (by: 15-10-2024 06:00 PM)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Atulteja"},"content":"2.[E][ ] project meeting (from: 15-10-2024 09:00 AM to 15-10-2024 11:00 AM)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Atulteja"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Atulteja"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Atulteja"},"content":"## Finding a Task","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Atulteja"},"content":"The `find` command allows you to search for tasks that contain a specific keyword.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Atulteja"},"content":"### Usage:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Atulteja"},"content":"`find KEYWORD`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Atulteja"},"content":"- **KEYWORD**: The keyword to search for in your task list.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Atulteja"},"content":"### Example:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Atulteja"},"content":"`find project`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Atulteja"},"content":"### Outcome:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Atulteja"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Atulteja"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Atulteja"},"content":"[D][ ] submit project report (by: 15-10-2024 06:00 PM)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Atulteja"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Atulteja"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Atulteja"},"content":"## Clearing the Task List","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Atulteja"},"content":"The `clear` command allows you to remove all tasks from your list.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Atulteja"},"content":"### Usage:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Atulteja"},"content":"`clear`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Atulteja"},"content":"### Example:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Atulteja"},"content":"`clear`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Atulteja"},"content":"### Outcome:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Atulteja"},"content":"Your task list is empty.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Atulteja"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Atulteja"},"content":"## Listing All Tasks","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Atulteja"},"content":"The `list` command allows you to view all the tasks in your list.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Atulteja"},"content":"### Usage:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Atulteja"},"content":"`list`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Atulteja"},"content":"### Example:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Atulteja"},"content":"`list`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Atulteja"},"content":"### Outcome:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Atulteja"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Atulteja"},"content":"Here is your current list:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Atulteja"},"content":"1. [D][ ] submit project report (by: 15-10-2024 06:00 PM)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Atulteja"},"content":"2. [E][ ] project meeting (from: 15-10-2024 09:00 AM to 15-10-2024 11:00 AM)","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Atulteja"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Atulteja"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Atulteja"},"content":"## Exiting the Chatbot","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Atulteja"},"content":"The `bye` command allows you to exit the chatbot.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Atulteja"},"content":"### Usage:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Atulteja"},"content":"`bye`","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Atulteja"},"content":"### Outcome:","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Atulteja"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Atulteja"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Atulteja"},"content":"```","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Atulteja"},"content":"---","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Atulteja"},"content":"## Command Summary","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Atulteja"},"content":"| Command          | Description                                 | Format                                            |","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Atulteja"},"content":"|------------------|---------------------------------------------|---------------------------------------------------|","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Atulteja"},"content":"| **List Tasks**   | Displays all the tasks in the list.         | `list`                                            |","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Atulteja"},"content":"| **Add Todo**     | Adds a todo task.                           | `todo DESCRIPTION`                                |","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Atulteja"},"content":"| **Add Deadline** | Adds a deadline task.                       | `deadline DESCRIPTION /by DEADLINE`               |","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Atulteja"},"content":"| **Add Event**    | Adds an event task.                         | `event DESCRIPTION /from START_DATE /to END_DATE` |","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Atulteja"},"content":"| **Mark Task**    | Marks a task as completed using its index.  | `mark INDEX`                                      |","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Atulteja"},"content":"| **Unmark Task**  | Marks a task as incomplete using its index. | `unmark INDEX`                                    |","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Atulteja"},"content":"| **Delete Task**  | Deletes a task using its index.             | `delete INDEX`                                    |","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Atulteja"},"content":"| **Find Task**    | Displays tasks matching a keyword.          | `find KEYWORD`                                    |","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Atulteja"},"content":"| **Clear Tasks**  | Clears the entire task list.                | `clear`                                           |","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Atulteja"},"content":"| **Exit**         | Exits the application.                      | `bye`                                             |","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Atulteja"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Atulteja"},"content":"## Conclusion","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Atulteja"},"content":"JeM is a powerful and simple chatbot that helps you stay organized by managing your to-dos, deadlines, and events. Use the commands listed above to effectively track your tasks and manage your workload. Enjoy your time with JeM, and feel free to explore the commands to see how they can assist you in your daily life!","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Atulteja"},"content":"---","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"Atulteja":257,"-":21}},{"path":"src/main/java/app/JeM.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package app;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import commands.Command;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import taskmanager.TaskManager;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":" * JeM is the main class for the JeM chatbot application.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":" * It initializes the necessary components (Ui, Storage, and Parser)","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":" * and handles the main loop of the application, processing user inputs","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":" * until the chatbot is instructed to exit.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"public class JeM {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"    private final Ui ui;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"    private final TaskManager storage;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"    private final Parser parser;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"    public JeM(){","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"        storage \u003d new TaskManager();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"     * Runs the chatbot, accepting user input and processing commands","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"     * until the user exits by typing \u0027bye\u0027.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"    public void run() {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"        ui.displayWelcomeMessage();","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"        while (true) {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"            String userInput \u003d ui.readInput();","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"            if (userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"                ui.exitChatBot();","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"                break;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"            try {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"                Command command \u003d parser.parse(userInput);","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"                command.execute(storage);","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"            }catch(InvalidCommandException e) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"            }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"     * The main method that serves as the entry point for the JeM application.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"     * It creates a new instance of JeM and starts the chatbot.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"        new JeM().run();","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-07-11","isFullCredit":false}],"authorContributionMap":{"Atulteja":58,"-":1}},{"path":"src/main/java/app/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package app;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import commands.addcommands.AddDeadlineCommand;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import commands.addcommands.AddEventCommand;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import commands.addcommands.AddTodoCommand;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"import commands.ClearCommand;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"import commands.Command;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"import commands.FindCommand;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"import commands.ListCommand;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"import commands.MarkCommand;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"import commands.UnmarkCommand;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":" * The Parser class is responsible for interpreting the user\u0027s input","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":" * and returning the appropriate Command object. It ensures that user","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":" * input is correctly matched to known commands and throws an exception","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":" * if the input is invalid.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"public class Parser {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"    public Parser() {}","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"     * Parses the user input and maps it to the corresponding command.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"     * @param userInput The input provided by the user.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"     * @return The corresponding Command object based on the user input.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"     * @throws InvalidCommandException If the input does not match a known command.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"    public Command parse(String userInput) throws InvalidCommandException {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"        if (userInput.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"            return new ListCommand();","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"        } else if (userInput.toLowerCase().startsWith(\"delete\")) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"            return new DeleteCommand(userInput);","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"        } else if (userInput.toLowerCase().startsWith(\"unmark\")) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"            return new UnmarkCommand(userInput);","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"        } else if (userInput.toLowerCase().startsWith(\"mark\")) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"            return new MarkCommand(userInput);","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"        } else if (userInput.toLowerCase().startsWith(\"todo\")) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"            return new AddTodoCommand(userInput);","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"        } else if (userInput.toLowerCase().startsWith(\"deadline\")) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"            return new AddDeadlineCommand(userInput);","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"        } else if (userInput.toLowerCase().startsWith(\"event\")) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"            return new AddEventCommand(userInput);","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"        } else if (userInput.toLowerCase().startsWith(\"clear\")) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"            return new ClearCommand();","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"        } else if (userInput.toLowerCase().startsWith(\"find\")) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"            return new FindCommand(userInput);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"        } else {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"            throw new InvalidCommandException(\"Unknown command: \" + userInput);","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"Atulteja":57}},{"path":"src/main/java/app/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package app;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":" * The Ui class handles all interactions with the user.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":" * It reads user input, displays welcome and exit messages,","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":" * and manages the interface of the JeM chatbot.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"public class Ui {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"    public Ui() {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"        scanner \u003d new Scanner(System.in);  // Set up the scanner to read user input","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"    public String readInput() {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"        return scanner.nextLine().trim();  // Read and return user input","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"    public void printBreakLine() {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"    public void exitChatBot() {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"        scanner.close();","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"     * Prints the instructions to the user when the chatbot starts.","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"     * Includes the basic command descriptions.","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"    public void botInstructions(){","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"        System.out.println(\" Hello! I\u0027m JeM, Your e-Assistant Personal To-Do list bot! \");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"        System.out.println(\" Just type out your tasks you have to complete and I will make a list of them for you.\");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"        System.out.println();","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"        System.out.println(\" For tasks with no deadline, type todo \u003ctask name\u003e\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"        System.out.println(\" For tasks with deadlines, type \u0027deadline \u003ctask name\u003e /by \u003cdate and time\u003e\u0027 using \u0027/by\u0027 \"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"                + \"to include the date and time\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"        System.out.println(\" For events, type event \u003ctask name\u003e /from \u003cdate and time\u003e /to \u003cdate and time\u003e\"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"                + \"using \u0027/to\u0027 and \u0027/from\u0027 to specify the duration of the event\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"        System.out.println();","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"        System.out.println(\" For all \u003cdate and time\u003e, type them as \u0027dd/MM/yyyy HH:mm\u0027 where \u0027HH:mm\u0027 are in 24Hrs\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"        System.out.println();","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"        System.out.println(\" To mark a task as completed, type \u0027mark \u003ctask index\u003e\u0027 and to unmark, \"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"                + \"type \u0027unmark \u003ctask index\u003e\u0027\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"        System.out.println(\" Type \u0027list\u0027 to see the current list of tasks\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"        System.out.println(\" Type \u0027delete \u003ctask index\u003e to delete the task at the specified index\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"        System.out.println(\" Type \u0027clear\u0027 to empty your tasklist\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"        System.out.println(\" Type \u0027find \u003ckeyword\u003e\u0027 to find the task with the specified keyword\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"        System.out.println();","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"        System.out.println(\" Finally, type \u0027bye\u0027 to end the chat!\");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"     * Displays the welcome message and instructions to the user when the chatbot starts.","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"     * Includes the JeM logo and basic command descriptions.","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"    public void displayWelcomeMessage() {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"        String logo \u003d \"      _         __  __ \\n\"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"                + \"     | |       |  \\\\/  |\\n\"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"                + \"     | |  ___  | |\\\\/| |\\n\"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"                + \" _   | | / _ \\\\ | |  | |\\n\"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"                + \"| |__| ||  __/ | |  | |\\n\"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Atulteja"},"content":"                + \" \\\\____/  \\\\___| |_|  |_|\\n\";","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Atulteja"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Atulteja"},"content":"        printBreakLine();","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Atulteja"},"content":"        botInstructions();","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Atulteja"},"content":"        printBreakLine();","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"Atulteja":77}},{"path":"src/main/java/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package commands;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import taskmanager.TaskManager;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":" * The AddCommand class is an abstract class that represents a command for adding tasks.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":" * It stores the user input and provides an abstract execute method that must be implemented","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":" * by its subclasses to define the behavior of adding different types of tasks.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"    protected final String userInput;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"    public AddCommand(String userInput) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"     * Executes the specific add command logic. Each subclass of AddCommand","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"     * must implement this method to define how the command interacts with Storage.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"     * @param storage The storage object that the command will interact with.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"     * @throws InvalidCommandException If the command is invalid or cannot be executed properly.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"    ","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"    public abstract void execute(TaskManager storage) throws InvalidCommandException;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"Atulteja":29}},{"path":"src/main/java/commands/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package commands;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import taskmanager.TaskManager;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":" * The ClearCommand class handles clearing all tasks from the task list.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":" * It calls the appropriate method in Storage to remove all tasks and prints a confirmation message.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"     * Executes the clear command by clearing all tasks from storage.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"     * After clearing the tasks, it prints a message indicating that the task list is empty.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"     * @param storage The storage object that manages the task list.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"    public void execute(TaskManager storage) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"        storage.clearTasklist();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"        System.out.println(\"Your Task list is empty\");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"Atulteja":25}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package commands;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import taskmanager.TaskManager;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":" * The Command class is an abstract class that represents a command issued by the user.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":" * Each command must define its own execute method, which operates on the provided Storage.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"public abstract class Command {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"     * Executes the command with the given storage. Each subclass of Command","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"     * must implement this method to define the behavior of the command.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"     * @param storage The storage object that the command will interact with.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"     * @throws InvalidCommandException If the command is invalid or cannot be executed properly.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"    public abstract void execute(TaskManager storage) throws InvalidCommandException;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"Atulteja":22}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package commands;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import taskmanager.TaskManager;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":" * The DeleteCommand class handles the deletion of a task based on the user\u0027s input.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":" * It parses the task index from the input, validates it, and removes the task from storage.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"    protected final String userInput;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"    public DeleteCommand(String userInput) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"     * Executes the delete command by parsing the user input to extract the task index.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"     * The method then deletes the task from storage and prints the remaining tasks.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"     * If the task number is invalid or missing, an exception is thrown.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"     * @param tasklist The storage object that manages the task list.","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"     * @throws InvalidCommandException If the task number is invalid or missing.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"    public void execute(TaskManager tasklist) throws InvalidCommandException {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"        String[] parts \u003d userInput.split(\" \");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"            throw new InvalidCommandException(\"Provide index of the task to delete\");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"        try {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"            // Parse the index and delete the task","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"            int index \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"            if (index \u003c\u003d 0 || index \u003e tasklist.getTaskList().size()) {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"                throw new InvalidCommandException(\"Task index out of bounds\");","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"            }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"            System.out.println(\"I have removed this task: \");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"            tasklist.printTask(index);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"            tasklist.deleteTask(index);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"            tasklist.printList();","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"            throw new InvalidCommandException(\"Invalid task number format\");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"Atulteja":52}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package commands;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import taskmanager.TaskManager;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import tasks.Task;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":" * The FindCommand class handles searching for tasks that match a given keyword.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":" * It iterates through the task list and prints tasks that contain the specified keyword in their description.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"    private final String keyword;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"        this.keyword \u003d keyword.substring(4).trim();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"     * Executes the find command by searching for tasks that contain the keyword in their description.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"     * It prints the matching tasks if any are found, or a message indicating that no matches were found.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"     * @param storage The storage object that manages the task list.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"    public void execute(TaskManager storage) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"        int index;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"        for (index \u003d 0; index \u003c storage.getTaskList().size(); index++) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"            Task task \u003d storage.getTaskList().get(index);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"            if (task.getContents().contains(keyword)) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"                storage.printTask(index + 1);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"                count++;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"            }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"        if (count \u003d\u003d 0){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"            System.out.println(\"No matching tasks found with keyword \" + keyword);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-09-28","isFullCredit":false}],"authorContributionMap":{"Atulteja":45}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package commands;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import taskmanager.TaskManager;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":" * The ListCommand class is responsible for listing all tasks currently stored.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":" * It calls the appropriate method in the Storage class to print the task list.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"     * Executes the list command by calling the storage\u0027s method to display all tasks.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"     * @param storage The storage object that manages the task list.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"    public void execute(TaskManager storage) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"        storage.printList();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"Atulteja":22}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package commands;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import taskmanager.TaskManager;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":" * The MarkCommand class handles marking a task as completed based on the user\u0027s input.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":" * It parses the task index from the input, validates it, and marks the task as done in storage.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"    protected final String userInput;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"    public MarkCommand(String userInput) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"     * Executes the mark command by parsing the user input to extract the task index.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"     * The method then marks the task as done in storage and prints the updated list of tasks.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"     * If the task number is invalid or missing, an exception is thrown.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"     * @param tasklist The storage object that manages the task list.","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"     * @throws InvalidCommandException If the task number is invalid or missing.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"    public void execute(TaskManager tasklist) throws InvalidCommandException {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"        // Split the user input to extract the index of the task to mark","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"        String[] parts \u003d userInput.split(\" \");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"            throw new InvalidCommandException(\"Provide index of the task to mark\");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"        try {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"            int index \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"            if (index \u003c\u003d 0 || index \u003e tasklist.getTaskList().size()) {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"                throw new InvalidCommandException(\"Task index out of bounds\");","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"            }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"            tasklist.markTask(index);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"            tasklist.printList();","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"            throw new InvalidCommandException(\"Invalid task number format\");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"Atulteja":51}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package commands;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import taskmanager.TaskManager;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":" * The UnmarkCommand class handles marking a task as not completed based on the user\u0027s input.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":" * It parses the task index from the input, validates it, and unmarks the task in storage.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"    protected final String userInput;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"    public UnmarkCommand(String userInput) {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"     * Executes the unmark command by parsing the user input to extract the task index.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"     * The method then unmarks the task in storage and prints the updated list of tasks.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"     * If the task number is invalid or missing, an exception is thrown.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"     * @param tasklist The storage object that manages the task list.","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"     * @throws InvalidCommandException If the task number is invalid or missing.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"    public void execute(TaskManager tasklist) throws InvalidCommandException {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"        String[] parts \u003d userInput.split(\" \");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"            throw new InvalidCommandException(\"Provide index of the task to unmark\");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"        try {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"            int index \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"            if (index \u003c\u003d 0 || index \u003e tasklist.getTaskList().size()) {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"                throw new InvalidCommandException(\"Task index out of bounds\");","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"            }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"            tasklist.unmarkTask(index);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"            tasklist.printList();","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"            throw new InvalidCommandException(\"Invalid task number format\");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"Atulteja":48}},{"path":"src/main/java/commands/addcommands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package commands.addcommands;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import commands.AddCommand;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import taskmanager.TaskManager;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"import tasks.Task;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":" * The AddDeadlineCommand class handles the creation of a deadline task based on the user\u0027s input.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":" * It parses the task description and deadline date from the input, validates them, and adds the task","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":" * to storage if valid.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"public class AddDeadlineCommand extends AddCommand {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"    public AddDeadlineCommand(String userInput) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"        super(userInput);","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"     * Executes the add deadline command by parsing the user input to create a new Deadline task.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"     * The task description and deadline date are extracted from the input and validated.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"     * If valid, the task is inserted into storage. If invalid, an exception is thrown.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"     * @param storage The storage object that manages the task list.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"     * @throws InvalidCommandException If the task description or deadline is invalid or in the wrong format.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"    public void execute(TaskManager storage) throws InvalidCommandException {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"        String[] parts \u003d userInput.substring(8).split(\" /by \");","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"        if (parts[0].trim().isEmpty()) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"            throw new InvalidCommandException(\"The description of the deadline task cannot be empty\");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"            throw new InvalidCommandException(\"The deadline of the task cannot be empty\");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"        String taskContent \u003d parts[0].trim();","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"        String deadlineString \u003d parts[1].trim();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"        try {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"            LocalDateTime deadline \u003d LocalDateTime.parse(deadlineString, formatter);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"            Task task \u003d new Deadline(taskContent, deadline);","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"            storage.insertTask(task);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"            throw new InvalidCommandException(\"Invalid date format! Please use dd/MM/yyyy HH:mm.\");","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"        storage.printList();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"Atulteja":57}},{"path":"src/main/java/commands/addcommands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package commands.addcommands;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import commands.AddCommand;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import taskmanager.TaskManager;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"import tasks.Task;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"import tasks.Event;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":" * The AddEventCommand class handles the creation of an event task based on the user\u0027s input.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":" * It parses the task description, start time, and end time from the input, validates them,","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":" * and adds the task to storage if valid.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"    public AddEventCommand(String userInput) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"        super(userInput);","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"     * Executes the add event command by parsing the user input to create a new Event task.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"     * The task description, start time, and end time are extracted from the input and validated.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"     * If valid, the task is inserted into storage. If invalid, an exception is thrown.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"     * @param storage The storage object that manages the task list.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"     * @throws InvalidCommandException If the task description, start time,","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"     *         or end time is invalid or in the wrong format.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"    public void execute(TaskManager storage) throws InvalidCommandException {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"        if (!userInput.contains(\"/from\") || !userInput.contains(\"/to\")) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"            throw new InvalidCommandException(\"Missing start or end date and time\");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"        String[] parts \u003d userInput.split(\" /from \");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"        String preCleanedTaskContent \u003d parts[0].trim();","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"        if (preCleanedTaskContent.length() \u003c\u003d 5) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"            throw new InvalidCommandException(\"The description of the event task is missing\");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"        String taskContent \u003d preCleanedTaskContent.substring(5).trim();","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"        String[] dateTime \u003d parts[1].split(\" /to \");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"        if (dateTime.length \u003c 2) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"            throw new InvalidCommandException(\"The start or end date and time are missing\");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"        String startString \u003d dateTime[0].trim();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"        String endString \u003d dateTime[1].trim();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"        try{","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"            LocalDateTime start \u003d LocalDateTime.parse(startString, formatter);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"            LocalDateTime end \u003d LocalDateTime.parse(endString, formatter);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"            Task task \u003d new Event(taskContent, start, end);","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"            storage.insertTask(task);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"        }catch (DateTimeParseException e){","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"            throw new InvalidCommandException(\"Invalid date format! Please use dd/MM/yyyy HH:mm.\");","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"        storage.printList();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"Atulteja":69}},{"path":"src/main/java/commands/addcommands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package commands.addcommands;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import commands.AddCommand;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import taskmanager.TaskManager;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"import tasks.Task;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"import tasks.Todo;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":" * The AddTodoCommand class handles the creation of a todo task based on the user\u0027s input.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":" * It parses the task description from the input, validates it, and adds the task to storage if valid.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"public class AddTodoCommand extends AddCommand {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"    public AddTodoCommand(String userInput) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"        super(userInput);","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"     * Executes the add todo command by parsing the user input to create a new Todo task.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"     * The task description is extracted from the input and validated. If valid, the task","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"     * is inserted into storage. If the task description is empty or invalid, an exception is thrown.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"     * @param storage The storage object that manages the task list.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"     * @throws InvalidCommandException If the task description is invalid or empty.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"    public void execute(TaskManager storage) throws InvalidCommandException {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"        if (userInput.trim().length() \u003c\u003d 4) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"            throw new InvalidCommandException(\"The description of the todo task cannot be empty\");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"        String taskContent \u003d userInput.substring(5).trim();","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"        Task task \u003d new Todo(taskContent);","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"        storage.insertTask(task);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"        storage.printList();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"Atulteja":41}},{"path":"src/main/java/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package exceptions;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":" * The InvalidCommandException class represents an exception that is thrown","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":" * when an invalid command is provided by the user. This extends the","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":" * Exception class and is used to indicate invalid input in the chatbot.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"public class InvalidCommandException extends Exception{","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"    public InvalidCommandException(String message){","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"        super(message);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-09-07","isFullCredit":false}],"authorContributionMap":{"Atulteja":13}},{"path":"src/main/java/filemanager/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package filemanager;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import tasks.Task;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import tasks.Event;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"import tasks.Todo;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"import java.io.File;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"import java.io.IOException;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":" * The Storage class handles the loading and saving of tasks to and from a file.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":" * It supports the reading of tasks from a file, parsing them into Task objects,","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":" * and writing them back to the file in a specific format. The supported task types","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":" * include ToDo, Deadline, and Event.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"public class Storage {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"    private String filePath;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"     * Ensures the parent directory of the specified file exists.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"     * If it does not exist, this method attempts to create it.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"     * @param file The file whose parent directory needs to be checked.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"     * @return true if the directory exists or was successfully created, false otherwise.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"    private boolean ensureDirectoryExists(File file) {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"        File parentDir \u003d file.getParentFile();","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"        if (parentDir !\u003d null \u0026\u0026 !parentDir.exists()) {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"            if (!parentDir.mkdirs()) {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"                System.out.println(\"Failed to create directory: \" + parentDir.getAbsolutePath());","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"                return false;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"            }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"        return true;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"     * Fallback mechanism to handle missing directories and update the path to the current working directory.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"     * @return the updated path in the current working directory.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"    private String fallbackToCurrentDirectory() {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"        try {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"            String currentDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"            String newFilePath \u003d Paths.get(currentDir, \"data\", \"tasks.txt\").toString();","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"            this.filePath \u003d newFilePath;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"            File file \u003d new File(newFilePath);","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"            ensureDirectoryExists(file);","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"            return newFilePath;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"            System.out.println(\"Failed to fallback to current directory: \" + e.getMessage());","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Atulteja"},"content":"            return null;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Atulteja"},"content":"     * Loads tasks from the file at the specified file path.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Atulteja"},"content":"     * If the file or directory does not exist, it attempts to create them.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Atulteja"},"content":"     * If the directory is missing, it falls back to the current working directory.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Atulteja"},"content":"     * @return An ArrayList of Task objects loaded from the file.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Atulteja"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Atulteja"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Atulteja"},"content":"        try {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Atulteja"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Atulteja"},"content":"            // If directory or file creation fails, fallback to the current directory","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Atulteja"},"content":"            if (!ensureDirectoryExists(file)) {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Atulteja"},"content":"                filePath \u003d fallbackToCurrentDirectory();","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Atulteja"},"content":"                file \u003d new File(filePath);","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Atulteja"},"content":"            }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Atulteja"},"content":"            // Check if the file exists, if not, create it","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Atulteja"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Atulteja"},"content":"                if (!file.createNewFile()) {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Atulteja"},"content":"                    System.out.println(\"Failed to create file: \" + file.getAbsolutePath());","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Atulteja"},"content":"                    return taskList;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Atulteja"},"content":"                }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Atulteja"},"content":"            }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Atulteja"},"content":"            Scanner scanner \u003d new Scanner(new FileReader(file));","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Atulteja"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Atulteja"},"content":"                String taskLine \u003d scanner.nextLine();","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Atulteja"},"content":"                taskList.add(parseTask(taskLine));","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Atulteja"},"content":"            }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Atulteja"},"content":"            scanner.close();","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Atulteja"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Atulteja"},"content":"            System.out.println(\"Error reading file: \" + e.getMessage());","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Atulteja"},"content":"        return taskList;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Atulteja"},"content":"     * Saves the list of tasks to the file at the specified file path.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Atulteja"},"content":"     * If the file or directory does not exist, it attempts to create them.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Atulteja"},"content":"     * If the directory is missing, it falls back to the current working directory.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Atulteja"},"content":"     * @param tasks An ArrayList of Task objects to be saved to the file.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Atulteja"},"content":"    public void saveTasksToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Atulteja"},"content":"        try {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Atulteja"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Atulteja"},"content":"            if (!ensureDirectoryExists(file)) {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Atulteja"},"content":"                filePath \u003d fallbackToCurrentDirectory();","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Atulteja"},"content":"                file \u003d new File(filePath);  // Update file reference to the new path","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Atulteja"},"content":"            }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Atulteja"},"content":"            FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Atulteja"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Atulteja"},"content":"                writer.write(task.fileFormat() + System.lineSeparator());","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Atulteja"},"content":"            }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Atulteja"},"content":"            writer.flush();","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Atulteja"},"content":"            writer.close();","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Atulteja"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Atulteja"},"content":"            System.out.println(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Atulteja"},"content":"     * Parses a line from the file into a Task object.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Atulteja"},"content":"     * The line is expected to be in a specific format corresponding to different task types (ToDo, Deadline, or Event).","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Atulteja"},"content":"     * Invalid or unrecognized lines are skipped.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Atulteja"},"content":"     * @param line The string representing a task from the file.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Atulteja"},"content":"     * @return A Task object corresponding to the line or null if the line is invalid.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Atulteja"},"content":"    public Task parseTask(String line) {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Atulteja"},"content":"        if (line.trim().isEmpty()) {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Atulteja"},"content":"            System.out.println(\"Empty line found, skipping...\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Atulteja"},"content":"            return null;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Atulteja"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Atulteja"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Atulteja"},"content":"        boolean isCompleted \u003d parts[1].equals(\"+\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Atulteja"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Atulteja"},"content":"        switch (taskType) {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Atulteja"},"content":"        case \"T\":","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Atulteja"},"content":"            if (parts.length \u003c 3) {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Atulteja"},"content":"                System.out.println(\"Invalid ToDo task format: \" + line);","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Atulteja"},"content":"                return null;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Atulteja"},"content":"            }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Atulteja"},"content":"            String taskName \u003d parts[2];","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Atulteja"},"content":"            Task todoTask \u003d new Todo(taskName);","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Atulteja"},"content":"            if (isCompleted) {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Atulteja"},"content":"                todoTask.setStatus();","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Atulteja"},"content":"            }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Atulteja"},"content":"            return todoTask;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Atulteja"},"content":"        case \"D\":","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Atulteja"},"content":"            if (parts.length \u003c 4) {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Atulteja"},"content":"                System.out.println(\"Invalid Deadline task format: \" + line);","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Atulteja"},"content":"                return null;  // Skip invalid tasks","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Atulteja"},"content":"            }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Atulteja"},"content":"            String deadlineTaskName \u003d parts[2];","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Atulteja"},"content":"            String deadlineString \u003d parts[3].replace(\"by \", \"\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Atulteja"},"content":"            LocalDateTime deadline \u003d LocalDateTime.parse(deadlineString, formatter);","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Atulteja"},"content":"            Task deadlineTask \u003d new Deadline(deadlineTaskName, deadline);","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Atulteja"},"content":"            if (isCompleted) {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Atulteja"},"content":"                deadlineTask.setStatus();","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Atulteja"},"content":"            }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Atulteja"},"content":"            return deadlineTask;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Atulteja"},"content":"        case \"E\":","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Atulteja"},"content":"            if (parts.length \u003c 4) {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Atulteja"},"content":"                System.out.println(\"Invalid Event task format: \" + line);","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Atulteja"},"content":"                return null;  // Skip invalid tasks","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Atulteja"},"content":"            }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Atulteja"},"content":"            String eventTaskName \u003d parts[2];","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Atulteja"},"content":"            String[] eventTimes \u003d parts[3].replace(\"from \", \"\").split(\" to \");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Atulteja"},"content":"            if (eventTimes.length \u003c 2) {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Atulteja"},"content":"                System.out.println(\"Invalid Event task time format: \" + line);","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Atulteja"},"content":"                return null;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Atulteja"},"content":"            }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Atulteja"},"content":"            String startString \u003d eventTimes[0];","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Atulteja"},"content":"            String endString \u003d eventTimes[1];","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Atulteja"},"content":"            LocalDateTime start \u003d LocalDateTime.parse(startString, formatter);","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Atulteja"},"content":"            LocalDateTime end \u003d LocalDateTime.parse(endString, formatter);","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Atulteja"},"content":"            Task eventTask \u003d new Event(eventTaskName, start, end);","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Atulteja"},"content":"            if (isCompleted) {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Atulteja"},"content":"                eventTask.setStatus();","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Atulteja"},"content":"            }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Atulteja"},"content":"            return eventTask;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Atulteja"},"content":"        default:","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Atulteja"},"content":"            System.out.println(\"Unrecognized task format: \" + line);","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Atulteja"},"content":"            return null;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-10-05","isFullCredit":false}],"authorContributionMap":{"Atulteja":219}},{"path":"src/main/java/taskmanager/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package taskmanager;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import tasks.Task;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import tasks.Event;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"import filemanager.Storage;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":" * The Taskmanager class manages the task list and handles the interaction","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":" * between the in-memory task list and the file where tasks are saved.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":" * It provides methods to insert, delete, mark, unmark, list, and clear tasks,","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":" * as well as safe and load tasks to and from a file using the FileManager.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"public class TaskManager {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"    Storage fileManager;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"    public TaskManager() {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"        fileManager \u003d new Storage(\"C:\\\\Users\\\\ASUS\\\\Documents\\\\NUS\\\\Yr 2 Sem 1\\\\CS2113\\\\ip\\\\.\\\\data\\\\tasks.txt\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"        taskList \u003d fileManager.loadTasks();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"     * Returns the current list of tasks.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"        return taskList;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"     * Saves the current list of tasks to the file.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"    public void saveTasks() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"        fileManager.saveTasksToFile(taskList);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"     * Inserts a task into the task list, saves the updated list to the file,","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"     * and displays the added task and the total number of tasks.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"     * @param task The task to be inserted into the list.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"    public void insertTask(Task task) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"        taskList.add(task);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"        saveTasks();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"        int numOfTasks \u003d taskList.size();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"        System.out.print(task.getStatusIcon() + \" \" + task.getContents());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"            System.out.print(\" (by: \" + ((Deadline) task).getDeadline() + \")\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"            System.out.print(\" (from: \" + ((Event) task).getStart() + \" to: \" + ((Event) task).getEnd() + \")\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"        System.out.println();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"        System.out.println(\"Now you have \" + numOfTasks + \" tasks in your list.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Atulteja"},"content":"     * Deletes a task at the specified index from the task list, saves the updated list,","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Atulteja"},"content":"     * and throws an InvalidCommandException if the index is out of bounds.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Atulteja"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Atulteja"},"content":"     * @throws InvalidCommandException If the task at the given index does not exist.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Atulteja"},"content":"    public void deleteTask(int index) throws InvalidCommandException {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Atulteja"},"content":"        if (index \u003e taskList.size()) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Atulteja"},"content":"            throw new InvalidCommandException(\"Task number \" + index + \" does not exist\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Atulteja"},"content":"        taskList.remove(index - 1);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Atulteja"},"content":"        saveTasks();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Atulteja"},"content":"     * Marks a task at the specified index as completed, saves the updated list,","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Atulteja"},"content":"     * and throws an InvalidCommandException if the index is out of bounds.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Atulteja"},"content":"     * @param index The index of the task to be marked.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Atulteja"},"content":"     * @throws InvalidCommandException If the task at the given index does not exist.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Atulteja"},"content":"    public void markTask(int index) throws InvalidCommandException {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Atulteja"},"content":"        if (index \u003e taskList.size()) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Atulteja"},"content":"            throw new InvalidCommandException(\"Task number \" + index + \" does not exist\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Atulteja"},"content":"        taskList.get(index - 1).setStatus();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Atulteja"},"content":"        saveTasks();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Atulteja"},"content":"     * Unmarks a task at the specified index as completed, saves the updated list,","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Atulteja"},"content":"     * and throws an InvalidCommandException if the index is out of bounds.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Atulteja"},"content":"     * @param index The index of the task to be marked.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Atulteja"},"content":"     * @throws InvalidCommandException If the task at the given index does not exist.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Atulteja"},"content":"    public void unmarkTask(int index) throws InvalidCommandException {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Atulteja"},"content":"        if (index \u003e taskList.size()) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Atulteja"},"content":"            throw new InvalidCommandException(\"Task number \" + index + \" does not exist\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Atulteja"},"content":"        taskList.get(index - 1).unsetStatus();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Atulteja"},"content":"        saveTasks();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Atulteja"},"content":"     * Prints the whole list.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Atulteja"},"content":"    public void printList() {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Atulteja"},"content":"        if (taskList.isEmpty()){","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Atulteja"},"content":"            System.out.println(\"Your task list is empty!\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Atulteja"},"content":"        }else {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Atulteja"},"content":"            System.out.println(\"Here is your current list: \");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Atulteja"},"content":"        int index \u003d 0;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Atulteja"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Atulteja"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Atulteja"},"content":"                System.out.println((index + 1) + \".\" + task.getStatusIcon() + \" \" + task","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Atulteja"},"content":"                        + \" (by: \" + ((Deadline) task).getDeadline() + \")\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Atulteja"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Atulteja"},"content":"                System.out.println((index + 1) + \".\" + task.getStatusIcon() + \" \" + task","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Atulteja"},"content":"                        + \" (from: \" + ((Event) task).getStart()","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Atulteja"},"content":"                        + \" to: \" + ((Event) task).getEnd() + \")\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Atulteja"},"content":"            } else {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Atulteja"},"content":"                System.out.println((index + 1) + \".\" + task.getStatusIcon() + \" \" + task);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Atulteja"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Atulteja"},"content":"            index++;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Atulteja"},"content":"     * Prints the task at the specified index as a string","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Atulteja"},"content":"     * @param index The index of the task to be printed.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Atulteja"},"content":"    public void printTask(int index){","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Atulteja"},"content":"        Task task \u003d taskList.get(index - 1);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Atulteja"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Atulteja"},"content":"            System.out.println((index) + \".\" + task.getStatusIcon() + \" \" + task","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Atulteja"},"content":"                    + \" (by: \" + ((Deadline) task).getDeadline() + \")\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Atulteja"},"content":"        }else if (task instanceof Event) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Atulteja"},"content":"            System.out.println((index) + \".\" + task.getStatusIcon() + \" \" + task","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Atulteja"},"content":"                    + \" (from: \" + ((Event) task).getStart()","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Atulteja"},"content":"                    + \" to: \" + ((Event) task).getEnd() + \")\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Atulteja"},"content":"        }else{","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Atulteja"},"content":"            System.out.println((index) + \".\" + task.getStatusIcon() + \" \" + task);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Atulteja"},"content":"     * Clears the whole list and makes it empty.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Atulteja"},"content":"    public void clearTasklist(){","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Atulteja"},"content":"        taskList.clear();","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Atulteja"},"content":"        saveTasks();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false}],"authorContributionMap":{"Atulteja":181}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package tasks;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":" * The Deadline class represents a task that has a specific deadline.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":" * It extends the Task class, adding a deadline date and time.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":" * This class includes methods for retrieving the deadline and formatting","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":" * the task for file storage and display.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"    private final DateTimeFormatter fileFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"    private final DateTimeFormatter stringFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy hh:mm a\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"    public Deadline(String task, LocalDateTime deadline) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"        super(task);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"    public String getStatusIcon(){","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"        return \"[D]\" + (getIsDone() ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"    public String fileFormat(){","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"        return (\"D | \" + (getIsDone() ? \"+\" : \"-\") + \" | \" + getTask() + \" | by \" + deadline.format(fileFormatter));","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"    public String getDeadline(){","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"        return this.deadline.format(stringFormatter);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"Atulteja":36}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package tasks;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":" * The Event class represents a task that occurs during a specific time period.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":" * It extends the Task class and adds start and end times to the task.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":" * This class provides methods to retrieve the start and end times, as well as","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":" * to format the task for file storage.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"public class Event extends Task{","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"    private final DateTimeFormatter stringFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy hh:mm a\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"    private final DateTimeFormatter fileFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"     * Constructs a new Event task with the specified task description, start time, and end time.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"     * @param task The description of the event task.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"     * @param start The LocalDateTime object representing the start time of the event.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"     * @param end The LocalDateTime object representing the end time of the event.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"    public Event(String task, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"        super(task);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"    public String getStatusIcon(){","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"        return \"[E]\" + (getIsDone() ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"    public String fileFormat(){","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"        return \"E | \"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"                + (getIsDone() ? \"+\" : \"-\")","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"                + \" | \" + getTask()","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"                + \" | from \" + start.format(fileFormatter)","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"                + \" to \" + end.format(fileFormatter);","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"     * Returns the end time of the event in a human-readable format.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"     * The start time is formatted as \"dd-MM-yyyy hh:mm a\".","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"     * @return A string representing the formatted end time.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"    public String getStart(){","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"        return start.format(stringFormatter);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"     * Returns the end time of the event in a human-readable format.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"     * The end time is formatted as \"dd-MM-yyyy hh:mm a\".","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"     * @return A string representing the formatted end time.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"    public String getEnd(){","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"        return end.format(stringFormatter);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"Atulteja":70}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package tasks;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":" * The Task class represents a task with a description and a completion status.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":" * It provides methods to retrieve the task details, mark the task as done or not done,","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":" * and convert the task into a format suitable for saving to a file.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"public class Task {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"    private final String task;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"    private boolean isDone;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"    public Task(String task) {","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"    public Task() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"        task \u003d \"\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"        return isDone;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"     * Returns the task description.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"    public String getTask() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"        return task;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"     * Returns the status icon for the task, which is \"[X]\" if the task is done","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"     * and \"[ ]\" if it is not done.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"     * @return A string representing the status icon of the task.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"    public void setStatus() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"    public void unsetStatus() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"    public String getContents() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"        return task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"    public String toString() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"        return this.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"     * Returns the task in a file-saving format, including its type and status.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"     * @return A string in the format suitable for saving to a file.","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Atulteja"},"content":"    public String fileFormat(){","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Atulteja"},"content":"        return (\"T | \" + (getIsDone() ? \"+\" : \"-\") + \" | \" + getTask());","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Atulteja":73}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package tasks;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":" * The Todo class represents a simple task without any specific deadline or event time.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":" * It extends the Task class and only requires a task description.","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"public class Todo extends Task{","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"    public Todo(String task) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"        super(task);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"        return (\"[T]\" + (getIsDone() ? \"[X]\" : \"[ ]\"));","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"Atulteja":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"todo borrow book","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"deadline submit report /by 2023-09-01 12:00","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"event project meeting /from 2023-09-01 14:00 /to 2023-09-01 16:00","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"mark 1","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"list","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"unmark 1","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"list","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"bye","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"Atulteja":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"java -classpath ..\\bin JeM \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"Atulteja":2,"-":20}}]
