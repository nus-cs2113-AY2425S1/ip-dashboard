{"authorDailyContributionsMap":{"limkongkiat":[{"date":"2024-08-20","commitResults":[{"hash":"a11731ab0164397aef908aa362461371295f0515","isMergeCommit":false,"messageTitle":"Change bot name to Tyrone","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":10}}}]},{"date":"2024-08-25","commitResults":[{"hash":"43b428ae7e9191d2210e58c0e44e07bd5c8b9787","isMergeCommit":false,"messageTitle":"Add echo function","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":2}}}]},{"date":"2024-08-26","commitResults":[{"hash":"06a81dbff69be2e4ba53ee4c1f8c852afe2a3ad0","isMergeCommit":false,"messageTitle":"Implement Add Task and List Task features","messageBody":"Tasks are added, stored and listed using a new class\nTaskList in TaskList.java for greater neatness of code\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":1}}}]},{"date":"2024-08-28","commitResults":[{"hash":"debb98b87926213842aa1ef026873c2aa4dc723c","isMergeCommit":false,"messageTitle":"Add mark/unmark task feature","messageBody":"Create new class Task in Task.java to record\ndescription and whether task is done\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":78,"deletions":9}}},{"hash":"366bd5ee4773478314792bc757192bf754f7c04b","isMergeCommit":false,"messageTitle":"Make minor tweaks to comply with coding standard","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":14}}}]},{"date":"2024-09-01","commitResults":[{"hash":"793ef96a39401195881741a63cfd627a59d6cc89","isMergeCommit":false,"messageTitle":"Add CommandHandler class to handle commands","messageBody":"Extracting code to parse and handle commands from main to a new class\nallows for greater readability of main code.\n\nLet\u0027s extract code to parse and handle commands to a new class CommandHandler.\n","fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":30}}},{"hash":"c67e9265c0f6d95362a7c9fcae0e2d0b31a99dad","isMergeCommit":false,"messageTitle":"Add Todo class to keep track of Todo tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":0}}},{"hash":"a3aafd83a87f7fc3391503471a4fd23ebf1f75cf","isMergeCommit":false,"messageTitle":"Add Deadline class to track deadlines","messageBody":"","tags":["A-Inheritance"],"fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":0}}},{"hash":"5cb1675fcb47292e04e33c3f3bb48fd0cc956e6e","isMergeCommit":false,"messageTitle":"Add Event class to track event tasks","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":1}}},{"hash":"8ffaf9bf8dd8f138be6470668bf05aac52ac80da","isMergeCommit":false,"messageTitle":"Refactor handleCommand by extracting multiple methods","messageBody":"Before this, handleCommand was a very long method with poor readability.\n\nLet\u0027s extract out code in handleCommand into multiple methods, with one method\nto handle each command type. This shortens the handleCommand method which\nmakes it much more readable.\n","fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":35}}},{"hash":"4551f5c758eef2c42cc74828a06a542d5eac069a","isMergeCommit":false,"messageTitle":"Add input.txt to allow for semi-automated testing","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":12,"deletions":0},"bat":{"insertions":1,"deletions":1}}}]},{"date":"2024-09-02","commitResults":[{"hash":"af3955d9cc74e0e12d9f2503077dc8a26a82f4ba","isMergeCommit":false,"messageTitle":"Amend Tyrone main method to improve readability.","messageBody":"Main path (handleCommand) was initially indented in an if block\nwhich checks if the bye command has been entered.\n\nLet\u0027s amend the code to reduce the level of indentation of the main path.\n","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":5}}}]},{"date":"2024-09-08","commitResults":[{"hash":"303d0d4caafc138b6e4f9a37bb3a12ac533a2d18","isMergeCommit":false,"messageTitle":"Add error handling for Deadline and Event tasks","messageBody":"Program would crash when Deadline/Event tasks were input\nimproperly (i.e. task deadline/start/end was missing or input without\nproper flag)\n\nLet\u0027s add try-catch statements to handle the exceptions arising from\nthese situations, and print out the proper format for inputting Deadline/Event\ntasks when user inputs Deadline/Event tasks with the incorrect format.\n","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":11}}},{"hash":"2e57f93404c57779c73723ff69cc367a2d0d9634","isMergeCommit":false,"messageTitle":"Change handleTask method to handleUnknown to handle unrecognized commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":5}}},{"hash":"ebe3baa7e0e38ef01c5fdb2196d82c13e64b656b","isMergeCommit":false,"messageTitle":"Add error handling for mark/unmark tasks","messageBody":"Code crashes when mark/unmark commands were input with no index or\nnon-numeric index.\n\nLet\u0027s add try-catch statements to handle missing index or non-numeric index\nbeing input into the program, which will also print an error message informing the user\nof the mistake they made in inputting the command.\n","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":14}}}]},{"date":"2024-09-09","commitResults":[{"hash":"9f6339752d9c6267f1a751f3dd8928ce7d340df9","isMergeCommit":false,"messageTitle":"Add error handling to handle empty input fields for tasks","messageBody":"Program allows users to successfully log tasks with empty descriptions,\ndeadlines, start times or end times.\n\nThis is bad as it can potentially allow for tasks with empty fields to\nbe logged which may confuse the user later on.\n\nLet\u0027s create a EmptyFieldException class to flag empty deadline/\nstart date/end date inputs. handleTodo, handleDeadline and handleEvent\nmethods will throw a EmptyFieldException upon detecting empty field\ninputs, which triggers the program to print an error message informing\nthe user not to input empty fields.\n\nA new EmptyFieldException class was used to clearly signal to future\ncode readers that the code is meant to handle errors regarding empty\nfields.\n","tags":["A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":3}}},{"hash":"354d79505543af3f19da8ef14de5d702c5af49af","isMergeCommit":false,"messageTitle":"Refactor hasNonWhitespaceChar method to hasOnlyWhitespaceChar method","messageBody":"Program checks for empty input fields (description/deadline/start/end)\nby checking if hasNonWhitespaceChar returns false for these fields.\n\nThis creates unnecessary confusion for future readers of the code.\n\nLet\u0027s refactor the hasNonWhitespaceChar method to hasOnlyWhitespaceChar\nsuch that the program detects empty fields when hasOnlyWhitespaceChar\nreturns true.\n\nThis helps make reading the code less confusing by removing\nnegation signs in the conditional statements when checking for\nempty fields.\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"ea09fda147ae0be3d014d893aafdf5c81a5296fc","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-5\u0027","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{}},{"hash":"5faaf20a0796f56ba08bc5c2ec6ad02053b0b6d8","isMergeCommit":false,"messageTitle":"Sort files into different packages for easier organization","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":0}}},{"hash":"6f47daafe1251c625bdba928e9fc41fffd51651a","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Packages\u0027","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{}}]},{"date":"2024-09-14","commitResults":[{"hash":"8d3f03a67ffff4a4f0a69986950a0a4f4778c509","isMergeCommit":false,"messageTitle":"Change TaskList to store tasks using ArrayList instead of array","messageBody":"TaskList uses a fixed-sized array to store tasks.\n\nThis limits the number of tasks we can store in our list and is\ninefficient in terms of memory usage as we cannot dynamically size\nthe array.\n\nLet\u0027s replace the array of tasks with an ArrayList to store the tasks.\n\nThis lets us store and unlimited number of tasks and allows more\nefficient use of memory through dynamic sizing of the ArrayList.\n","tags":["A-Collections"],"fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":9}}}]},{"date":"2024-09-15","commitResults":[{"hash":"c9c9eca3b2d7837959fb070437893475f996ad92","isMergeCommit":false,"messageTitle":"Implement Delete Task feature","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":0}}},{"hash":"19f05951ea8e8fa72af40b332196e419bb71b82b","isMergeCommit":false,"messageTitle":"Add getAllTaskDetails method to TaskList class","messageBody":"Program has no means of retrieving all tasks logged in TaskList,\nmaking writing the list of tasks to a new file difficult.\n\nLet\u0027s create a method getAllTaskDetails that compiles the details of\nall logged tasks and returns it as a single string.\n\nThis allows the program to write all tasks onto an external file\neasily.\n","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":0}}},{"hash":"0b9fa6c025213ed0cf243667985ae8a7b06241bc","isMergeCommit":false,"messageTitle":"Add methods to create and update save file","messageBody":"Program does not save tasks logged into it, meaning all data is lost\nonce the program is closed.\n\nLet\u0027s create a FileReadWriter class with methods to create a new file\nto store the logged tasks and write the list of all logged tasks to it\nwhenever the list of tasks is updated.\n\nFeature of reading from the save file is a work in progress.\n","fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":0}}},{"hash":"f9fc1fd1bb4df7f7597a7799f7ef1901084c619d","isMergeCommit":false,"messageTitle":"Implement feature to save tasks in external .txt file","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}}]},{"date":"2024-09-16","commitResults":[{"hash":"1ef0383573e72c9d65a749da766c5295f5905221","isMergeCommit":false,"messageTitle":"Implement Read Task list from save file feature","messageBody":"Program saves list of tasks to external file but does not read from\nthe file to access the saved task list.\n\nLet\u0027s add an initTaskListFromSaveFile method in FileReadWriter class\nwhich populates TaskList according to the list of tasks logged in\nthe save file.\n\nThis allows the program to initialize its list of tasks according to\nthe list of tasks as of the program\u0027s last closure. FileReadWriter has\nalso been added to a new savemanager package for better organization of\nfiles.\n","fileTypesAndContributionMap":{"java":{"insertions":103,"deletions":41}}},{"hash":"c95e08dd1a77963cec5e4b309b27205e2558222a","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-6\u0027","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{}},{"hash":"ff11aaa841a9f62cd1b79fcd2874c630b89f1588","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"200bc1f87d5a6e0a2874297157981cd40b1577fd","isMergeCommit":false,"messageTitle":"Fix getAllTaskDetails method to work with ArrayList task list","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2024-09-23","commitResults":[{"hash":"456b6a2fab809876cfbb6563e77518420da358fb","isMergeCommit":false,"messageTitle":"Refactor CommandHandler to InputHandler","messageBody":"Entire user input is saved as command variable, which is handled by\nCommandHandler class.\n\nLet\u0027s refactor our code to relabel the user\u0027s input as input, which\nallows us to name the command type of the user input (todo, deadline,\netc.) as \u0027command\u0027.\n","fileTypesAndContributionMap":{"java":{"insertions":59,"deletions":33}}},{"hash":"c1b285c5ed2df9ef07e60b7f6693f2b0c5b4f4fb","isMergeCommit":false,"messageTitle":"Refactor magic literals to constant variables","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":7}}},{"hash":"cb4efa2e0e77d82178b1162f173d0b0a3fd078f2","isMergeCommit":false,"messageTitle":"Replace hasOnlyWhitespaceChar method with isBlank method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":12}}},{"hash":"b5f3148cf9549e409388f7f342798dcf4f01b408","isMergeCommit":false,"messageTitle":"Change format of reading/writing data in Tyrone.txt","messageBody":"Data format of reading/writing Tyrone.txt allows for errors to arise\nfrom the way the user writes the task descriptions (e.g. if description\ncontains \"(by: \" substring.)\n\nLet\u0027s change the format in which data is written to and read from\nTyrone.txt to greater resemble the user input format so as to\nreduce likelihood of an erronous update of TaskList from Tyrone.txt\narising from format of user-input description.\n","fileTypesAndContributionMap":{"java":{"insertions":99,"deletions":33}}},{"hash":"0a7bfb7de7d9494d228891b9f853cbba72e98669","isMergeCommit":false,"messageTitle":"Update print messages of methods to parse Tyrone.txt","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":14}}}]}]},"authorFileTypeContributionMap":{"limkongkiat":{"java":484,"md":0,"fxml":0,"sh":0,"bat":1,"gradle":0,"txt":12}},"authorContributionVariance":{"limkongkiat":3978.6755},"authorDisplayNameMap":{"limkongkiat":"CS2113-W14-3 LIM ..KIAT"}}
