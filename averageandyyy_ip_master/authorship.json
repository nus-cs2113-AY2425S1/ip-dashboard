[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"# Bento User Guide","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"averageandyyy":1,"-":28}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"import bento.Bento;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":" * The Main class serves as the entry point for Bento.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":" * It initializes and starts the chatbot.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":"public class Main {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"     * The main method is the entry point of the application.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"     * It creates an instance of Bento and starts the chatbot.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"        Bento bento \u003d new Bento();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"        bento.run();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"averageandyyy":18}},{"path":"src/main/java/bento/Bento.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package bento;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"import commands.Command;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":"import exception.BentoException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":"import storage.Storage;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":"import ui.Parser;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"import ui.Ui;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":" * The Bento class represents the main application for chatbot.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":" * It handles user interactions, processes commands, and manages the","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":" * lifecycle of the application.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"public class Bento {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"    private final Ui ui;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"    private final Parser parser;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"    private final Storage storage;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"averageandyyy"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"averageandyyy"},"content":"     * Constructs a Bento instance and initializes the user interface,","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"averageandyyy"},"content":"     * parser, task list, and storage.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"averageandyyy"},"content":"    public Bento() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"averageandyyy"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"averageandyyy"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"averageandyyy"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"averageandyyy"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"averageandyyy"},"content":"     * Runs the main loop of Bento. It greets the user,","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"averageandyyy"},"content":"     * loads existing tasks, and continuously processes user commands","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"averageandyyy"},"content":"     * until the bye command is given.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"averageandyyy"},"content":"    public void run() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"averageandyyy"},"content":"        ui.sayKonichiwa();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"averageandyyy"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"averageandyyy"},"content":"            storage.loadTaskList(tasks, ui, parser);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"averageandyyy"},"content":"        } catch (BentoException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"averageandyyy"},"content":"            ui.displayErrorMessage(e.getMessage());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"averageandyyy"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"averageandyyy"},"content":"        // Main application loop","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"averageandyyy"},"content":"        while (!isExit) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"averageandyyy"},"content":"            try {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"averageandyyy"},"content":"                String userInput \u003d ui.getUserInput();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"averageandyyy"},"content":"                Command userCommand \u003d parser.getCommand(userInput, true);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"averageandyyy"},"content":"                userCommand.execute(tasks, ui, storage);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"averageandyyy"},"content":"                isExit \u003d userCommand.isExit();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"averageandyyy"},"content":"            } catch (BentoException e) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"averageandyyy"},"content":"                ui.displayErrorMessage(e.getMessage());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"averageandyyy"},"content":"            }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"averageandyyy"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"averageandyyy":58}},{"path":"src/main/java/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package commands;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"import exception.InvalidDateFormatException;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":"import exception.InvalidDeadlineException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":"import exception.SaveFileErrorException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":"import storage.Storage;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"import ui.Ui;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"import static constants.Command.DEADLINE_COMMAND;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"import static constants.Regex.BY_PREFIX;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"import static constants.Regex.INPUT_DATE_FORMAT;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"averageandyyy"},"content":" * Represents a command that adds a Deadline to Bento.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"averageandyyy"},"content":" * This class extends {@link Command} and handles the execution of the add Deadline command,","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"averageandyyy"},"content":" * which creates a new Deadline based on user input, including its due date.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"averageandyyy"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"averageandyyy"},"content":"    private String userInput;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"averageandyyy"},"content":"    private final boolean fromUserInput;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"averageandyyy"},"content":"    private final DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(INPUT_DATE_FORMAT);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"averageandyyy"},"content":"     * Constructs an AddDeadlineCommand with the user\u0027s input for the Deadline and a flag indicating","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"averageandyyy"},"content":"     * if the input is from the user.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"averageandyyy"},"content":"     * @param userInput The input string for the Deadline task.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"averageandyyy"},"content":"     * @param fromUserInput Indicates if the input was provided by the user.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"averageandyyy"},"content":"    public AddDeadlineCommand(String userInput, boolean fromUserInput) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"averageandyyy"},"content":"        super(DEADLINE_COMMAND);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"averageandyyy"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"averageandyyy"},"content":"        this.fromUserInput \u003d fromUserInput;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"averageandyyy"},"content":"     * Executes the add Deadline command, creating a new Deadline and saving it to the task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"averageandyyy"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"averageandyyy"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"averageandyyy"},"content":"     * @param storage The storage object to handle file operations.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"averageandyyy"},"content":"     * @throws InvalidDeadlineException If the Deadline input is invalid (e.g., missing name or date).","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"averageandyyy"},"content":"     * @throws SaveFileErrorException If an error occurs while saving the task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"averageandyyy"},"content":"     * @throws InvalidDateFormatException If the date format is invalid.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"averageandyyy"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"averageandyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidDeadlineException,","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"averageandyyy"},"content":"            SaveFileErrorException, InvalidDateFormatException {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"averageandyyy"},"content":"        userInput \u003d parser.removeDeadlinePrefix(userInput);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"averageandyyy"},"content":"        int indexOfByPrefix \u003d userInput.indexOf(BY_PREFIX);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"averageandyyy"},"content":"        if (indexOfByPrefix \u003d\u003d -1) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"averageandyyy"},"content":"            throw new InvalidDeadlineException();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"averageandyyy"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"averageandyyy"},"content":"        String deadlineName \u003d parser.extractDeadlineName(userInput);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"averageandyyy"},"content":"        String deadlineBy \u003d parser.extractDeadlineBy(userInput);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"averageandyyy"},"content":"        if (deadlineName.isEmpty() || deadlineBy.isEmpty()) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"averageandyyy"},"content":"            throw new InvalidDeadlineException();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"averageandyyy"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"averageandyyy"},"content":"        // Parse deadlineBy as a LocalDateTime Object","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"averageandyyy"},"content":"        try {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"averageandyyy"},"content":"            LocalDate deadlineDate \u003d LocalDate.parse(deadlineBy, inputFormatter);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"averageandyyy"},"content":"            // Update String representation","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"averageandyyy"},"content":"            // deadlineBy \u003d date.format(saveFormatter);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"averageandyyy"},"content":"            Deadline toAdd \u003d new Deadline(deadlineName, deadlineDate);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"averageandyyy"},"content":"            tasks.addTask(toAdd);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"averageandyyy"},"content":"            if (fromUserInput) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"averageandyyy"},"content":"                ui.printAddTaskSuccessMessage(toAdd.toString(), tasks);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"averageandyyy"},"content":"            }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"averageandyyy"},"content":"            saveTask(storage, tasks, ui);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"averageandyyy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"averageandyyy"},"content":"            throw new InvalidDateFormatException();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"averageandyyy"},"content":"        }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"averageandyyy":87}},{"path":"src/main/java/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package commands;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"import exception.InvalidDateFormatException;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":"import exception.InvalidEventException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":"import exception.SaveFileErrorException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":"import storage.Storage;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":"import tasks.Event;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"import ui.Ui;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"import static constants.Command.EVENT_COMMAND;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"import static constants.Regex.FROM_PREFIX;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"import static constants.Regex.INPUT_DATE_FORMAT;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"import static constants.Regex.TO_PREFIX;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"averageandyyy"},"content":" * Represents a command that adds an Event task to Bento.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"averageandyyy"},"content":" * This class extends {@link Command} and handles the execution of the add Event command,","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"averageandyyy"},"content":" * which creates a new Event based on user input, including its date range.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"averageandyyy"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"averageandyyy"},"content":"    private String userInput;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"averageandyyy"},"content":"    private final boolean fromUserInput;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"averageandyyy"},"content":"    private final DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(INPUT_DATE_FORMAT);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"averageandyyy"},"content":"     * Constructs an AddEventCommand with the user\u0027s input for the Event and a flag indicating","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"averageandyyy"},"content":"     * if the input is from the user.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"averageandyyy"},"content":"     * @param userInput The input string for the Event task.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"averageandyyy"},"content":"     * @param fromUserInput Indicates if the input was provided by the user.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"averageandyyy"},"content":"    public AddEventCommand(String userInput, boolean fromUserInput) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"averageandyyy"},"content":"        super(EVENT_COMMAND);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"averageandyyy"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"averageandyyy"},"content":"        this.fromUserInput \u003d fromUserInput;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"averageandyyy"},"content":"     * Checks if the \u0027to\u0027 date is after or equal to the \u0027from\u0027 date.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"averageandyyy"},"content":"     * @param from The start date of the event.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"averageandyyy"},"content":"     * @param to The end date of the event.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"averageandyyy"},"content":"     * @return true if the \u0027to\u0027 date is valid; false otherwise.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"averageandyyy"},"content":"    public boolean isValidFromAndTo(LocalDate from, LocalDate to) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"averageandyyy"},"content":"        return (to.isAfter(from) || to.isEqual(from));","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"averageandyyy"},"content":"     * Executes the add Event command, creating a new Event and saving it to the task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"averageandyyy"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"averageandyyy"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"averageandyyy"},"content":"     * @param storage The storage object to handle file operations.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"averageandyyy"},"content":"     * @throws InvalidEventException If the Event input is invalid (e.g., missing dates or name).","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"averageandyyy"},"content":"     * @throws SaveFileErrorException If an error occurs while saving the task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"averageandyyy"},"content":"     * @throws InvalidDateFormatException If the date format is invalid.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"averageandyyy"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"averageandyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidEventException,","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"averageandyyy"},"content":"            SaveFileErrorException, InvalidDateFormatException {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"averageandyyy"},"content":"        userInput \u003d parser.removeEventPrefix(userInput);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"averageandyyy"},"content":"        int indexOfFrom \u003d userInput.indexOf(FROM_PREFIX);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"averageandyyy"},"content":"        int indexOfTo \u003d userInput.indexOf(TO_PREFIX);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"averageandyyy"},"content":"        if (indexOfFrom \u003d\u003d -1 || indexOfTo \u003d\u003d -1) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"averageandyyy"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"averageandyyy"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"averageandyyy"},"content":"        String eventName \u003d parser.extractEventName(userInput, indexOfFrom);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"averageandyyy"},"content":"        String fromString \u003d parser.extractFromString(userInput, indexOfFrom, indexOfTo);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"averageandyyy"},"content":"        String toString \u003d parser.extractToString(userInput, indexOfTo);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"averageandyyy"},"content":"        if (eventName.isEmpty() || fromString.isEmpty() || toString.isEmpty()) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"averageandyyy"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"averageandyyy"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"averageandyyy"},"content":"        try {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"averageandyyy"},"content":"            LocalDate fromDate \u003d LocalDate.parse(fromString, inputFormatter);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"averageandyyy"},"content":"            LocalDate toDate \u003d LocalDate.parse(toString, inputFormatter);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"averageandyyy"},"content":"            if (!isValidFromAndTo(fromDate, toDate)) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"averageandyyy"},"content":"                throw new InvalidEventException();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"averageandyyy"},"content":"            }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"averageandyyy"},"content":"            Event toAdd \u003d new Event(eventName, fromDate, toDate);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"averageandyyy"},"content":"            tasks.addTask(toAdd);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"averageandyyy"},"content":"            if (fromUserInput) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"averageandyyy"},"content":"                ui.printAddTaskSuccessMessage(toAdd.toString(), tasks);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"averageandyyy"},"content":"            }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"averageandyyy"},"content":"            saveTask(storage, tasks, ui);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"averageandyyy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"averageandyyy"},"content":"            throw new InvalidDateFormatException();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"averageandyyy"},"content":"        }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"averageandyyy":102}},{"path":"src/main/java/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package commands;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"import exception.InvalidToDoException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":"import exception.SaveFileErrorException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":"import storage.Storage;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":"import tasks.ToDo;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"import ui.Ui;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"import static constants.Command.TODO_COMMAND;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":" * Represents a command that adds a ToDo to Bento.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":" * This class extends {@link Command} and handles the execution of the add ToDo command,","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":" * which creates a new ToDo based on user input.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"    private String userInput;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"    private final boolean fromUserInput;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"averageandyyy"},"content":"     * Constructs an AddTodoCommand with the user\u0027s input for the ToDo and a flag indicating","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"averageandyyy"},"content":"     * if the input is from the user.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"averageandyyy"},"content":"     * @param userInput The input string for the To-Do task.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"averageandyyy"},"content":"     * @param fromUserInput Indicates if the input was provided by the user.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"averageandyyy"},"content":"    public AddTodoCommand(String userInput, boolean fromUserInput) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"averageandyyy"},"content":"        super(TODO_COMMAND);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"averageandyyy"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"averageandyyy"},"content":"        this.fromUserInput \u003d fromUserInput;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"averageandyyy"},"content":"     * Executes the add ToDo command, creating a new ToDo task and saving it to the task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"averageandyyy"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"averageandyyy"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"averageandyyy"},"content":"     * @param storage The storage object to handle file operations.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"averageandyyy"},"content":"     * @throws InvalidToDoException If the To-Do input is invalid (e.g., empty).","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"averageandyyy"},"content":"     * @throws SaveFileErrorException If an error occurs while saving the task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"averageandyyy"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"averageandyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidToDoException, SaveFileErrorException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"averageandyyy"},"content":"        userInput \u003d parser.getTodo(userInput);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"averageandyyy"},"content":"        if (userInput.isEmpty()) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"averageandyyy"},"content":"            throw new InvalidToDoException();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"averageandyyy"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"averageandyyy"},"content":"        ToDo toAdd \u003d new ToDo(userInput);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"averageandyyy"},"content":"        tasks.addTask(toAdd);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"averageandyyy"},"content":"        if (fromUserInput) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"averageandyyy"},"content":"            ui.printAddTaskSuccessMessage(toAdd.toString(), tasks);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"averageandyyy"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"averageandyyy"},"content":"        saveTask(storage, tasks, ui);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"averageandyyy":60}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package commands;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"import exception.SaveFileErrorException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":"import storage.Storage;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":"import ui.Ui;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"import static constants.Command.BYE_COMMAND;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":" * Represents a command that allows the user to exit Bento.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":" * This class extends {@link Command} and handles the execution of the bye command,","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":" * including saving tasks and displaying a farewell message to the user.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"     * Constructs a ByeCommand, initializing it with the bye command prefix.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"    public ByeCommand() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"averageandyyy"},"content":"        super(BYE_COMMAND);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"averageandyyy"},"content":"     * Executes the bye command, saving the task list and displaying a farewell message.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"averageandyyy"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"averageandyyy"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"averageandyyy"},"content":"     * @param storage The storage object to handle file operations.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"averageandyyy"},"content":"     * @throws SaveFileErrorException If an error occurs while saving the task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"averageandyyy"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"averageandyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SaveFileErrorException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"averageandyyy"},"content":"        saveTaskList(storage, tasks, ui);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"averageandyyy"},"content":"        ui.saySayonara();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"averageandyyy"},"content":"        setExit(true);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"averageandyyy":37}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package commands;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"import exception.BentoException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":"import exception.SaveFileErrorException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":"import storage.Storage;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":"import ui.Parser;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"import ui.Ui;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":" * Abstract class representing a generic command in Bento.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":" * This class serves as a blueprint for all commands that Bento can execute.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":" * Subclasses are expected to provide command-specific implementations.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"public abstract class Command {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"    protected Parser parser;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"    protected boolean isExit \u003d false;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"    private String commandPrefix;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"averageandyyy"},"content":"     * Constructs a Command with the specified command prefix.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"averageandyyy"},"content":"     * @param commandPrefix The prefix associated with this command.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"averageandyyy"},"content":"    public Command(String commandPrefix) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"averageandyyy"},"content":"        this.commandPrefix \u003d commandPrefix;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"averageandyyy"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"averageandyyy"},"content":"     * Retrieves the command prefix.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"averageandyyy"},"content":"     * @return The command prefix.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"averageandyyy"},"content":"    public String getCommandPrefix() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"averageandyyy"},"content":"        return commandPrefix;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"averageandyyy"},"content":"     * Sets a new command prefix.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"averageandyyy"},"content":"     * @param commandPrefix The new command prefix.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"averageandyyy"},"content":"    public void setCommandPrefix(String commandPrefix) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"averageandyyy"},"content":"        this.commandPrefix \u003d commandPrefix;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"averageandyyy"},"content":"     * Checks if the command signals an exit from the chatbot.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"averageandyyy"},"content":"     * @return True if this command indicates an exit; false otherwise.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"averageandyyy"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"averageandyyy"},"content":"        return isExit;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"averageandyyy"},"content":"     * Sets the exit status for this command.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"averageandyyy"},"content":"     * @param exit The exit status to set.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"averageandyyy"},"content":"    public void setExit(boolean exit) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"averageandyyy"},"content":"        isExit \u003d exit;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"averageandyyy"},"content":"     * Saves the current task list quietly without user feedback.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"averageandyyy"},"content":"     * @param storage The storage object to handle file operations.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"averageandyyy"},"content":"     * @param tasks The current task list to save.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"averageandyyy"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"averageandyyy"},"content":"     * @throws SaveFileErrorException If an error occurs while saving the task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"averageandyyy"},"content":"    public void saveTask(Storage storage, TaskList tasks, Ui ui) throws SaveFileErrorException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"averageandyyy"},"content":"        storage.saveTaskListQuiet(tasks, ui, parser);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"averageandyyy"},"content":"     * Saves the current task list with user feedback.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"averageandyyy"},"content":"     * @param storage The storage object to handle file operations.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"averageandyyy"},"content":"     * @param tasks The current task list to save.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"averageandyyy"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"averageandyyy"},"content":"     * @throws SaveFileErrorException If an error occurs while saving the task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"averageandyyy"},"content":"    public void saveTaskList(Storage storage, TaskList tasks, Ui ui) throws SaveFileErrorException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"averageandyyy"},"content":"        storage.saveTaskList(tasks, ui, parser);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"averageandyyy"},"content":"     * Abstract method to execute the command.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"averageandyyy"},"content":"     * Subclasses must provide their own implementation for how the command should be executed.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"averageandyyy"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"averageandyyy"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"averageandyyy"},"content":"     * @param storage The storage object to handle file operations.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"averageandyyy"},"content":"     * @throws BentoException If an error occurs while executing the command.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"averageandyyy"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws BentoException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"averageandyyy":100}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package commands;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"import exception.InvalidIndexException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":"import exception.MissingTaskException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":"import exception.SaveFileErrorException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":"import storage.Storage;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":"import tasks.Task;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"import ui.Ui;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"import static constants.Command.DELETE_COMMAND;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":" * Represents a command that deletes a specified task from Bento.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":" * This class extends {@link Command} and handles the execution of the delete command,","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":" * which removes a task from the task list based on user input.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"    private String userInput;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"averageandyyy"},"content":"     * Constructs a DeleteCommand with the user\u0027s input for the task to delete.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"averageandyyy"},"content":"     * @param userInput The input string indicating which task to delete.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"averageandyyy"},"content":"    public DeleteCommand(String userInput) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"averageandyyy"},"content":"        super(DELETE_COMMAND);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"averageandyyy"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"averageandyyy"},"content":"     * Executes the delete command, removing the specified task from the task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"averageandyyy"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"averageandyyy"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"averageandyyy"},"content":"     * @param storage The storage object to handle file operations.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"averageandyyy"},"content":"     * @throws InvalidIndexException If the task index is invalid.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"averageandyyy"},"content":"     * @throws MissingTaskException If the specified task does not exist.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"averageandyyy"},"content":"     * @throws SaveFileErrorException If an error occurs while saving the task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"averageandyyy"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"averageandyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException,","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"averageandyyy"},"content":"            MissingTaskException, SaveFileErrorException {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"averageandyyy"},"content":"        try {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"averageandyyy"},"content":"            userInput \u003d parser.removeDeletePrefix(userInput);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"averageandyyy"},"content":"            int index \u003d Integer.parseInt(userInput) - 1;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"averageandyyy"},"content":"            Task task \u003d tasks.retrieveTask(index);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"averageandyyy"},"content":"            tasks.deleteTask(index);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"averageandyyy"},"content":"            saveTask(storage, tasks, ui);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"averageandyyy"},"content":"            ui.printDeleteTaskSuccessMessage(task, tasks);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"averageandyyy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"averageandyyy"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"averageandyyy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"averageandyyy"},"content":"            throw new MissingTaskException();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"averageandyyy"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"averageandyyy":57}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package commands;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"import exception.NoTaskFoundException;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":"import storage.Storage;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":"import ui.Ui;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"import static constants.Command.FIND_COMMAND;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":" * Represents a command that finds and displays tasks containing a specified search phrase in Bento.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":" * This class extends {@link Command} and handles the execution of the find command,","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":" * which filters tasks based on user input and displays matching tasks.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"    private String userInput;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"averageandyyy"},"content":"     * Constructs a FindCommand with the user\u0027s input for the search phrase.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"averageandyyy"},"content":"     * @param userInput The input string indicating the keyword to search for.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"averageandyyy"},"content":"    public FindCommand(String userInput) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"averageandyyy"},"content":"        super(FIND_COMMAND);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"averageandyyy"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"averageandyyy"},"content":"     * Executes the find command, searching for tasks that contain the specified search phrase","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"averageandyyy"},"content":"     * and displaying it to the user.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"averageandyyy"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"averageandyyy"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"averageandyyy"},"content":"     * @param storage The storage object to handle file operations.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"averageandyyy"},"content":"     * @throws NoTaskFoundException If no tasks match the search criteria.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"averageandyyy"},"content":"    @Override","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"averageandyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws NoTaskFoundException {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"averageandyyy"},"content":"        userInput \u003d parser.removeFindPrefix(userInput);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"averageandyyy"},"content":"        TaskList tasksOfInterest \u003d new TaskList();","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"averageandyyy"},"content":"        tasks.getTasks().stream()","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"averageandyyy"},"content":"                .filter((t) -\u003e t.getTaskName().contains(userInput)).forEach(tasksOfInterest::addTask);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"averageandyyy"},"content":"        if (tasksOfInterest.getTaskCount() \u003d\u003d 0) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"averageandyyy"},"content":"            throw new NoTaskFoundException();","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"averageandyyy"},"content":"        }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"averageandyyy"},"content":"        ui.listTasksOfInterest(tasksOfInterest);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-23","isFullCredit":false}],"authorContributionMap":{"averageandyyy":49}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package commands;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"import storage.Storage;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":"import ui.Ui;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":"import static constants.Command.LIST_COMMAND;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":" * Represents a command that lists all tasks in Bento.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":" * This class extends {@link Command} and handles the execution of the list command,","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":" * which displays the current tasks to the user.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"     * Constructs a ListCommand, initializing it with the list command prefix.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"    public ListCommand() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"        super(LIST_COMMAND);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"averageandyyy"},"content":"     * Executes the list command, displaying the current tasks to the user.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"averageandyyy"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"averageandyyy"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"averageandyyy"},"content":"     * @param storage The storage object to handle file operations.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"averageandyyy"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"averageandyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"averageandyyy"},"content":"        ui.listTasks(tasks);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"averageandyyy":33}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package commands;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"import exception.InvalidIndexException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":"import exception.MissingTaskException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":"import exception.SaveFileErrorException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":"import storage.Storage;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"import ui.Ui;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"import static constants.Command.MARK_COMMAND;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":" * Represents a command that marks a task as completed or uncompleted in Bento.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":" * This class extends {@link Command} and handles the execution of the mark command,","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":" * including updating the task status based on the user\u0027s input.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"    private final boolean toMark;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"    private String taskIndex;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"averageandyyy"},"content":"     * Constructs a MarkCommand with the specified status and task index.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"averageandyyy"},"content":"     * @param toMark Indicates whether to mark the task as completed (true) or uncompleted (false).","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"averageandyyy"},"content":"     * @param taskIndex The index of the task to mark.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"averageandyyy"},"content":"    public MarkCommand(boolean toMark, String taskIndex) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"averageandyyy"},"content":"        super(MARK_COMMAND);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"averageandyyy"},"content":"        this.toMark \u003d toMark;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"averageandyyy"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"averageandyyy"},"content":"     * Executes the mark command, updating the task status and saving the task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"averageandyyy"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"averageandyyy"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"averageandyyy"},"content":"     * @param storage The storage object to handle file operations.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"averageandyyy"},"content":"     * @throws InvalidIndexException If the task index is invalid.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"averageandyyy"},"content":"     * @throws MissingTaskException If the specified task does not exist.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"averageandyyy"},"content":"     * @throws SaveFileErrorException If an error occurs while saving the task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"averageandyyy"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"averageandyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException,","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"averageandyyy"},"content":"            MissingTaskException, SaveFileErrorException {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"averageandyyy"},"content":"        try {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"averageandyyy"},"content":"            taskIndex \u003d parser.removeMarkPrefix(taskIndex);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"averageandyyy"},"content":"            int index \u003d Integer.parseInt(taskIndex) - 1;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"averageandyyy"},"content":"            tasks.updateTask(toMark, index);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"averageandyyy"},"content":"            ui.printMarkUpdate(tasks, toMark, index);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"averageandyyy"},"content":"            saveTask(storage, tasks, ui);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"averageandyyy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"averageandyyy"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"averageandyyy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"averageandyyy"},"content":"            throw new MissingTaskException();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"averageandyyy"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"averageandyyy":58}},{"path":"src/main/java/commands/ShowCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package commands;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"import exception.InvalidDateFormatException;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":"import storage.Storage;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":"import ui.Ui;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"import static constants.Command.SHOW_COMMAND;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"import static constants.Regex.INPUT_DATE_FORMAT;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":" * Represents a command that displays tasks for a specific date in Bento.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":" * This class extends {@link Command} and handles the execution of the show command,","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":" * including parsing the date input and listing tasks associated with that date.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"averageandyyy"},"content":"public class ShowCommand extends Command {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"averageandyyy"},"content":"    private String dateOfInterestString;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"averageandyyy"},"content":"    private final DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(INPUT_DATE_FORMAT);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"averageandyyy"},"content":"     * Constructs a ShowCommand with the user\u0027s input date.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"averageandyyy"},"content":"     * @param userInput The input string containing the date of interest.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"averageandyyy"},"content":"    public ShowCommand(String userInput) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"averageandyyy"},"content":"        super(SHOW_COMMAND);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"averageandyyy"},"content":"        this.dateOfInterestString \u003d userInput;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"averageandyyy"},"content":"     * Executes the show command, parsing the date and displaying tasks for that date.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"averageandyyy"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"averageandyyy"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"averageandyyy"},"content":"     * @param storage The storage object to handle file operations.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"averageandyyy"},"content":"     * @throws InvalidDateFormatException If the input date format is invalid.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"averageandyyy"},"content":"    @Override","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"averageandyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidDateFormatException {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"averageandyyy"},"content":"        try {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"averageandyyy"},"content":"            dateOfInterestString \u003d parser.removeShowPrefix(dateOfInterestString);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"averageandyyy"},"content":"            LocalDate dateOfInterest \u003d LocalDate.parse(dateOfInterestString, inputFormatter);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"averageandyyy"},"content":"            ui.listTasksOfInterest(dateOfInterest, tasks);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"averageandyyy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"averageandyyy"},"content":"            throw new InvalidDateFormatException();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"averageandyyy"},"content":"        }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-18","isFullCredit":false}],"authorContributionMap":{"averageandyyy":52}},{"path":"src/main/java/constants/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package constants;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":" * This class defines a set of constants used for handling commands","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":" * in Bento. Each constant represents a command string","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":" * or an index used in command processing.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"public class Command {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"    /** Command to exit the program. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"    public static final String BYE_COMMAND \u003d \"bye\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"    /** Command to list all tasks. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"    public static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"    /** Command to mark a task as done. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"    public static final String MARK_COMMAND \u003d \"mark\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"    /** Command to unmark a task as not done. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"averageandyyy"},"content":"    public static final String UNMARK_COMMAND \u003d \"unmark\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"averageandyyy"},"content":"    /** Command to add a to-do task. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"averageandyyy"},"content":"    public static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"averageandyyy"},"content":"    /** Command to add a deadline task. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"averageandyyy"},"content":"    public static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"averageandyyy"},"content":"    /** Command to add a deadline task. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"averageandyyy"},"content":"    public static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"averageandyyy"},"content":"    /** Command to delete a task. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"averageandyyy"},"content":"    public static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"averageandyyy"},"content":"    /** Command to show tasks based on a given date. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"averageandyyy"},"content":"    public static final String SHOW_COMMAND \u003d \"show\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"averageandyyy"},"content":"    /** Command to find tasks based on a search phrase. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"averageandyyy"},"content":"    public static final String FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"averageandyyy"},"content":"    /** Index position of the command in an input list. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"averageandyyy"},"content":"    public static final int COMMAND_INDEX \u003d 0;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"averageandyyy"},"content":"    /** Index position of the task in an input list. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"averageandyyy"},"content":"    public static final int TASK_INDEX \u003d 0;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"averageandyyy"},"content":"    /** Index position of the task status in an input list. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"averageandyyy"},"content":"    public static final int TASK_STATUS_INDEX \u003d 1;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"averageandyyy":48}},{"path":"src/main/java/constants/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package constants;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":" * This class defines a set of constants used for displaying messages","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":" * in Bento. Each constant represents a different message","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":" * that can be used for user interactions, such as greetings, task","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":" * confirmations, and error notifications.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"public class Message {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"    /** ASCII art logo for Bento. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"    public static final String LOGO \u003d \"\\t  ____             _        \\n\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"            + \"\\t | __ )  ___ _ __ | |_ ___  \\n\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"            + \"\\t |  _ \\\\ / _ \\\\ \u0027_ \\\\| __/ _ \\\\ \\n\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"            + \"\\t | |_) |  __/ | | | || (_) |\\n\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"            + \"\\t |____/ \\\\___|_| |_|\\\\__\\\\___/ \\n\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"            + \"\\t                            \\n\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"    /** Greeting message displayed at startup. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"    public static final String GREETING_MESSAGE \u003d \"\\tKonichiwa! I am Bento, your personal assistant!\\n\\t\" +","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"averageandyyy"},"content":"            \"How can I help you with your tasks today?\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"averageandyyy"},"content":"    /** Line divider message for visual clarity. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"averageandyyy"},"content":"    public static final String LINE_MESSAGE \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"averageandyyy"},"content":"    /** Farewell message when Bento exits. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"averageandyyy"},"content":"    public static final String SAYONARA_MESSAGE \u003d \"\\tThank you for working with me today! See you next time! Sayonara~\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"averageandyyy"},"content":"    /** Confirmation message for successfully adding a task. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"averageandyyy"},"content":"    public static final String ADD_TASK_SUCCESS_MESSAGE \u003d \"\\tRoger that! Successfully added task:\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"averageandyyy"},"content":"    /** Confirmation message for successfully deleting a task. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"averageandyyy"},"content":"    public static final String DELETE_TASK_SUCCESS_MESSAGE \u003d \"\\tThe following task has been removed successfully:\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"averageandyyy"},"content":"    /** Confirmation message for successfully saving tasks. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"averageandyyy"},"content":"    public static final String SAVE_TASK_LIST_SUCCESS_MESSAGE \u003d \"\\tBanzai! \" +","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"averageandyyy"},"content":"            \"I\u0027ve saved all our tasks for you to work on them next time!\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"averageandyyy"},"content":"    /** Message indicating the display of existing tasks. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"averageandyyy"},"content":"    public static final String EXISTING_TASKS_MESSAGE \u003d \"\\tHere is the list of your existing tasks!\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"averageandyyy"},"content":"    /** Message displayed when a task is not marked. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"averageandyyy"},"content":"    public static final String UNMARKED_MESSAGE \u003d \"\\tMaybe you\u0027re not quite ready for the task just yet. \" +","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"averageandyyy"},"content":"            \"No worries, I\u0027ll be here to make sure you clear it.\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"averageandyyy"},"content":"    /** Message displayed when a task is marked as done. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"averageandyyy"},"content":"    public static final String MARKED_MESSAGE \u003d \"\\tYou\u0027ve crushed this task! \" +","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"averageandyyy"},"content":"            \"I\u0027ve gone ahead and marked it as done for you.\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"averageandyyy"},"content":"    /** Message indicating the display of tasks of interest. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"averageandyyy"},"content":"    public static final String TASKS_OF_INTEREST_MESSAGE \u003d \"\\tHere are your tasks of interest!\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"averageandyyy"},"content":"    /** Message displayed when no tasks match the date of interest. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"averageandyyy"},"content":"    public static final String NO_TASK_OF_INTEREST_MESSAGE \u003d \"\\tI can\u0027t seem to find any tasks that \" +","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"averageandyyy"},"content":"            \"match your date of interest!\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"averageandyyy":55}},{"path":"src/main/java/constants/Regex.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package constants;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":" * This class defines a set of regular expressions and constants","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":" * used for parsing and processing user input in Bento.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":" * Each constant serves a specific purpose related to task management commands.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"public class Regex {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"    /** Regular expression for matching spaces in user input. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"    public static final String SPACE_REGEX \u003d \" \";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"    /** Regular expression representing an empty string. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"    public static final String EMPTY_REGEX \u003d \"\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"    /** Delimiter used to separate task statuses in the save file. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"    public static final String TASK_STATUS_DELIMITER \u003d \" | \";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"    /** Regular expression for matching the task status delimiter. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"    public static final String TASK_STATUS_DELIMITER_REGEX \u003d \" \\\\| \";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"averageandyyy"},"content":"    // Deadline","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"averageandyyy"},"content":"    /** Index for the task name in a Deadline input list. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"averageandyyy"},"content":"    public static final int DEADLINE_NAME_INDEX \u003d 0;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"averageandyyy"},"content":"    /** Index for the deadline date in a Deadline input list. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"averageandyyy"},"content":"    public static final int DEADLINE_BY_INDEX \u003d 1;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"averageandyyy"},"content":"    /** Prefix used to denote the deadline date in user input. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"averageandyyy"},"content":"    public static final String BY_PREFIX \u003d \"/by\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"averageandyyy"},"content":"    /** Regular expression for matching the \"/by\" prefix in user input. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"averageandyyy"},"content":"    public static final String BY_REGEX \u003d \" \" + BY_PREFIX + \" \";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"averageandyyy"},"content":"    // Event","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"averageandyyy"},"content":"    /** Prefix used to denote the start date in an Event input list. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"averageandyyy"},"content":"    public static final String FROM_PREFIX \u003d \"/from\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"averageandyyy"},"content":"    /** Prefix used to denote the end date in an Event input list. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"averageandyyy"},"content":"    public static final String TO_PREFIX \u003d \"/to\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"averageandyyy"},"content":"    /** Indicator for a completed task. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"averageandyyy"},"content":"    public static final String TASK_DONE_INDICATOR \u003d \"1\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"averageandyyy"},"content":"    /** Indicator for an incomplete task. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"averageandyyy"},"content":"    public static final String TASK_UNDONE_INDICATOR \u003d \"0\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"averageandyyy"},"content":"    /** Date format used for displaying dates in Bento. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"averageandyyy"},"content":"    public static final String DISPLAY_DATE_FORMAT \u003d \"dd MMM yyyy\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"averageandyyy"},"content":"    /** Date format expected from user input and for saving. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"averageandyyy"},"content":"    public static final String INPUT_DATE_FORMAT \u003d \"dd/MM/yyyy\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"averageandyyy":52}},{"path":"src/main/java/exception/BentoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package exception;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":" * This class provides custom exception handling for errors that occur during the","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":" * execution of Bento. It displays a default message or a user-defined message","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":" * when the exception is thrown.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"public class BentoException extends Exception {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"    /** The default error message displayed when no specific message is provided. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"    public static final String DEFAULT_MESSAGE \u003d \"\\tTASKETE\\n\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"    /** A line divider to format the error message output. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"    public static final String LINE_MESSAGE \u003d \"\\t____________________________________________________________\\n\";","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"     * Constructs a new BentoException with the default error message.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"    public BentoException() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"        super(LINE_MESSAGE + DEFAULT_MESSAGE + LINE_MESSAGE);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"averageandyyy"},"content":"     * Constructs a new BentoException with a specified error message.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"averageandyyy"},"content":"     * @param message The custom message to display when the exception is thrown.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"averageandyyy"},"content":"    public BentoException(String message) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"averageandyyy"},"content":"        super(LINE_MESSAGE + message + LINE_MESSAGE);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"averageandyyy":30}},{"path":"src/main/java/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package exception;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":" * Represents an exception thrown when an invalid command is issued to Bento.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":" * This class extends {@link BentoException} and provides a custom message when an invalid","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":" * command is encountered during the Bento\u0027s operation.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"public class InvalidCommandException extends BentoException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"    /** The default message displayed when an invalid command is detected. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"    public static final String INVALID_COMMAND_MESSAGE \u003d \"\\tHmm... Something seems wrong with your input. \" +","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"            \"Give it a closer look and try again!\\n\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"     * Constructs a new InvalidCommandException with the default error message.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"        super(INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"averageandyyy":19}},{"path":"src/main/java/exception/InvalidDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package exception;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":" * Represents an exception thrown when the user provides an invalid date format to Bento.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":" * This class extends {@link BentoException} and handles errors related to invalid date formatting.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":" * It prompts the user to use the correct date format of \"dd/MM/yyyy\".","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"public class InvalidDateFormatException extends BentoException {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"    /** The default message displayed when the user provides an incorrectly formatted date. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"    public static final String INVALID_DATE_FORMAT_MESSAGE \u003d \"\\tHmm... That doesn\u0027t seem quite right. \" +","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"            \"Make sure your date is of the form dd/MM/yyyy!\\n\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"     * Constructs a new InvalidDateFormatException with the default error message.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"    public InvalidDateFormatException() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"        super(INVALID_DATE_FORMAT_MESSAGE);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-18","isFullCredit":false}],"authorContributionMap":{"averageandyyy":19}},{"path":"src/main/java/exception/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package exception;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":" * Represents an exception thrown when the user provides an invalid deadline format to Bento.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":" * This class extends {@link BentoException} and is used to notify the user when the provided","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":" * deadline command does not follow the expected format.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"public class InvalidDeadlineException extends BentoException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"    /** The default message displayed when the user provides an invalid deadline command. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"    public static final String INVALID_DEADLINE_MESSAGE \u003d \"\\tHmm... That doesn\u0027t seem quite right. \" +","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"            \"Try \\\"deadline [DEADLINE_NAME] /by [DEADLINE_BY]\\\" instead!\\n\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"     * Constructs a new InvalidDeadlineException with the default error message.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"    public InvalidDeadlineException() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"        super(INVALID_DEADLINE_MESSAGE);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"averageandyyy":19}},{"path":"src/main/java/exception/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package exception;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":" * Represents an exception thrown when the user provides an invalid event format to Bento.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":" * This class extends {@link BentoException} and is used to notify the user when the provided","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":" * event command does not follow the expected format.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"public class InvalidEventException extends  BentoException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"    /** The default message displayed when the user provides an invalid event command. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"    public static final String INVALID_EVENT_MESSAGE \u003d \"\\tHmm... That doesn\u0027t seem quite right. \" +","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"            \"Try \\\"event [EVENT_NAME] /from [FROM] /to [TO]\\\" instead!\\n\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"     * Constructs a new InvalidEventException with the default error message.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"    public InvalidEventException() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"        super(INVALID_EVENT_MESSAGE);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"averageandyyy":19}},{"path":"src/main/java/exception/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package exception;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":" * Represents an exception thrown when the user provides an invalid index to Bento.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":" * This class extends {@link BentoException} and is used to notify the user when the provided","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":" * index is out of bounds or invalid.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"public class InvalidIndexException extends BentoException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"    /** The default message displayed when the user provides an invalid index. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"    public static final String INVALID_INDEX_MESSAGE \u003d \"\\tHey! Provide a valid index please!\\n\";","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"     * Constructs a new InvalidIndexException with the default error message.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"    public InvalidIndexException() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"        super(INVALID_INDEX_MESSAGE);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"averageandyyy":18}},{"path":"src/main/java/exception/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package exception;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":" * Represents an exception thrown when the user provides an invalid task command to Bento.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":" * This class extends {@link BentoException} and is used to notify the user when a task-related","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":" * command is missing or improperly formatted.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"public class InvalidTaskException extends BentoException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"    /** The default message displayed when the user provides an invalid task command. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"    public static final String INVALID_TASK_MESSAGE \u003d \"\\tHmm... That doesn\u0027t seem quite right. \" +","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"            \"Have you tried providing a task?\\n\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"     * Constructs a new InvalidTaskException with the default error message.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"    public InvalidTaskException() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"        super(INVALID_TASK_MESSAGE);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"averageandyyy":19}},{"path":"src/main/java/exception/InvalidToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package exception;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":" * Represents an exception thrown when the user provides an invalid to-do command to Bento.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":" * This class extends {@link BentoException} and is used to notify the user when a to-do command","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":" * does not follow the expected format.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"public class InvalidToDoException extends BentoException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"    /** The default message displayed when the user provides an invalid to-do command. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"    public static final String INVALID_TODO_MESSAGE \u003d \"\\tHmm... That doesn\u0027t seem quite right. \" +","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"            \"Try \\\"todo [TODO_NAME]\\\" instead!\\n\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"     * Constructs a new InvalidToDoException with the default error message.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"    public InvalidToDoException() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"        super(INVALID_TODO_MESSAGE);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"averageandyyy":19}},{"path":"src/main/java/exception/LoadFileErrorException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package exception;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":" * Represents an exception thrown when there is an error loading the save file for Bento.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":" * This class extends {@link BentoException} and is used to notify the user when a save file cannot","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":" * be found or accessed. A new file will be created if the save file is missing.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"public class LoadFileErrorException extends BentoException {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"    /** The default file path for the save file. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"    public static final String FILE_PATH \u003d \"./data/save.txt\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"    /** The default message displayed when the save file cannot be loaded. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"    public static final String LOAD_FILE_ERROR_MESSAGE \u003d \"\\tHmm... I can\u0027t seem to find a save file here. \" +","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"            \"Daijobu! I\u0027ll create a new one here: \" + FILE_PATH + \"\\n\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"     * Constructs a new LoadFileErrorException with the default error message.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"averageandyyy"},"content":"    public LoadFileErrorException() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"averageandyyy"},"content":"        super(LOAD_FILE_ERROR_MESSAGE);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"averageandyyy":23}},{"path":"src/main/java/exception/MissingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package exception;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":" * Represents an exception thrown when a requested task cannot be found in Bento.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":" * This class extends {@link BentoException} and is used to notify the user when they attempt to","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":" * access a task that does not exist.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"public class MissingTaskException extends BentoException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"    /** The default message displayed when a requested task cannot be found. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"    public static final String NO_TASK_FOUND_MESSAGE \u003d \"\\tHmm... I don\u0027t think that task exists... \" +","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"            \"Check again with list!\\n\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"     * Constructs a new MissingTaskException with the default error message.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"    public MissingTaskException() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"        super(NO_TASK_FOUND_MESSAGE);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"averageandyyy":19}},{"path":"src/main/java/exception/NoTaskFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package exception;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":" * Represents an exception thrown when no tasks are found matching the user\u0027s search criteria in Bento.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":" * This class extends {@link BentoException} and is used to notify the user","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":" * when their search for tasks yields no results.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"public class NoTaskFoundException extends BentoException {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"    /** The default message displayed when no tasks matching the search criteria are found. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"    public static final String NO_TASK_FOUND_MESSAGE \u003d \"\\tHmm... I couldn\u0027t find any of the tasks that you \" +","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"            \"were searching for, maybe they don\u0027t exist?\\n\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"     * Constructs a new NoTaskFoundException with the default error message.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"    public NoTaskFoundException() {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"        super(NO_TASK_FOUND_MESSAGE);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-23","isFullCredit":false}],"authorContributionMap":{"averageandyyy":19}},{"path":"src/main/java/exception/SaveFileErrorException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package exception;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":" * Represents an exception thrown when there is an error saving the file for the Bento chatbot.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":" * This class extends {@link BentoException} and is used to notify the user when an error occurs","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":" * during the file saving process.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"public class SaveFileErrorException extends BentoException {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"    /** The default message displayed when there is an error saving the file. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"    public static final String SAVE_FILE_ERROR_MESSAGE \u003d \"\\tSomething went wrong with saving the file! Sumimasen!\\n\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"     * Constructs a new SaveFileErrorException with the default error message.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"    public SaveFileErrorException() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"        super(SAVE_FILE_ERROR_MESSAGE);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"averageandyyy":18}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package storage;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"import commands.Command;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":"import exception.BentoException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":"import exception.LoadFileErrorException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":"import exception.SaveFileErrorException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":"import tasks.Task;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"import ui.Parser;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"import ui.Ui;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"import java.io.File;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"averageandyyy"},"content":"import static constants.Regex.TASK_DONE_INDICATOR;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"averageandyyy"},"content":"import static constants.Regex.TASK_STATUS_DELIMITER;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"averageandyyy"},"content":"import static constants.Regex.TASK_UNDONE_INDICATOR;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"averageandyyy"},"content":" * This class handles loading and saving of tasks to and from the save file.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"averageandyyy"},"content":"public class Storage {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"averageandyyy"},"content":"    /** Path to save file */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"averageandyyy"},"content":"    public static final String FILE_PATH \u003d \"./data/save.txt\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"averageandyyy"},"content":"    /** Directory where data is saved */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"averageandyyy"},"content":"    public static final Path DATA_DIRECTORY \u003d Paths.get(\"./data\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"averageandyyy"},"content":"     * Loads tasks from the saved file into the provided TaskList.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"averageandyyy"},"content":"     * @param tasks  The TaskList where tasks are loaded into.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"averageandyyy"},"content":"     * @param ui     The Ui instance to handle user interface display.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"averageandyyy"},"content":"     * @param parser The Parser instance to interpret the commands.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"averageandyyy"},"content":"     * @throws LoadFileErrorException if the file cannot be found or an error occurs during loading.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"averageandyyy"},"content":"    public void loadTaskList(TaskList tasks, Ui ui, Parser parser) throws LoadFileErrorException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"averageandyyy"},"content":"        try {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"averageandyyy"},"content":"            File saveFile \u003d new File(FILE_PATH);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"averageandyyy"},"content":"            Scanner fileScanner \u003d new Scanner(saveFile);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"averageandyyy"},"content":"            int currentTask \u003d 0;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"averageandyyy"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"averageandyyy"},"content":"                String line \u003d fileScanner.nextLine().trim();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"averageandyyy"},"content":"                boolean isTaskDone \u003d parser.getTaskDone(line);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"averageandyyy"},"content":"                String userCommandString \u003d parser.getCommandString(line);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"averageandyyy"},"content":"                Command userCommand \u003d parser.getCommand(userCommandString, false);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"averageandyyy"},"content":"                userCommand.execute(tasks, ui, this);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"averageandyyy"},"content":"                tasks.updateTask(isTaskDone, currentTask);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"averageandyyy"},"content":"                currentTask++;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"averageandyyy"},"content":"            }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"averageandyyy"},"content":"            ui.listTasks(tasks);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"averageandyyy"},"content":"        } catch (IndexOutOfBoundsException |","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"averageandyyy"},"content":"                 FileNotFoundException | BentoException e) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"averageandyyy"},"content":"            throw new LoadFileErrorException();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"averageandyyy"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"averageandyyy"},"content":"     * Saves tasks from the provided TaskList into the save file, without printing success message.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"averageandyyy"},"content":"     * @param tasks  The TaskList containing tasks to be saved.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"averageandyyy"},"content":"     * @param ui     The Ui instance to handle user interface display.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"averageandyyy"},"content":"     * @param parser The Parser instance to interpret the commands.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"averageandyyy"},"content":"     * @throws SaveFileErrorException if the file cannot be written or an error occurs during saving.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"averageandyyy"},"content":"    public void saveTaskListQuiet(TaskList tasks, Ui ui, Parser parser) throws SaveFileErrorException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"averageandyyy"},"content":"        try {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"averageandyyy"},"content":"            // Create data directory if it does not exist","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"averageandyyy"},"content":"            Files.createDirectories(DATA_DIRECTORY);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"averageandyyy"},"content":"            FileWriter saveWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"averageandyyy"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"averageandyyy"},"content":"                saveWriter.write(task.getTaskAsCommand());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"averageandyyy"},"content":"                saveWriter.write(TASK_STATUS_DELIMITER);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"averageandyyy"},"content":"                writeTaskStatus(task, saveWriter);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"averageandyyy"},"content":"                saveWriter.write(System.lineSeparator());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"averageandyyy"},"content":"            }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"averageandyyy"},"content":"            saveWriter.close();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"averageandyyy"},"content":"            // ui.printSaveTaskListSuccessMessage();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"averageandyyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"averageandyyy"},"content":"            throw new SaveFileErrorException();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"averageandyyy"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"averageandyyy"},"content":"     * Saves tasks from the provided TaskList into the save file and prints a success message.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"averageandyyy"},"content":"     * @param tasks  The TaskList containing tasks to be saved.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"averageandyyy"},"content":"     * @param ui     The Ui instance to handle user interface display.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"averageandyyy"},"content":"     * @param parser The Parser instance to interpret the commands.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"averageandyyy"},"content":"     * @throws SaveFileErrorException if the file cannot be written or an error occurs during saving.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"averageandyyy"},"content":"    public void saveTaskList(TaskList tasks, Ui ui, Parser parser) throws SaveFileErrorException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"averageandyyy"},"content":"        try {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"averageandyyy"},"content":"            // Create data directory if it does not exist","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"averageandyyy"},"content":"            Files.createDirectories(DATA_DIRECTORY);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"averageandyyy"},"content":"            FileWriter saveWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"averageandyyy"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"averageandyyy"},"content":"                saveWriter.write(task.getTaskAsCommand());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"averageandyyy"},"content":"                saveWriter.write(TASK_STATUS_DELIMITER);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"averageandyyy"},"content":"                writeTaskStatus(task, saveWriter);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"averageandyyy"},"content":"                saveWriter.write(System.lineSeparator());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"averageandyyy"},"content":"            }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"averageandyyy"},"content":"            saveWriter.close();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"averageandyyy"},"content":"            ui.printSaveTaskListSuccessMessage();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"averageandyyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"averageandyyy"},"content":"            throw new SaveFileErrorException();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"averageandyyy"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"averageandyyy"},"content":"     * Writes the task\u0027s status (done/undone) to the file.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"averageandyyy"},"content":"     * @param task       The task whose status is to be written.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"averageandyyy"},"content":"     * @param saveWriter The FileWriter to write the status to.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"averageandyyy"},"content":"     * @throws IOException if writing to the file fails.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"averageandyyy"},"content":"    public void writeTaskStatus(Task task, FileWriter saveWriter) throws IOException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"averageandyyy"},"content":"        if (task.isDone()) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"averageandyyy"},"content":"            saveWriter.write(TASK_DONE_INDICATOR);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"averageandyyy"},"content":"        } else {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"averageandyyy"},"content":"            saveWriter.write(TASK_UNDONE_INDICATOR);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"averageandyyy"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"averageandyyy":131}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package tasks;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":"import static constants.Regex.DISPLAY_DATE_FORMAT;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":"import static constants.Regex.INPUT_DATE_FORMAT;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":" * Represents a task with a deadline in Bento.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":" * A Deadline has a name and a due date represented by a {@link LocalDate}.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"    private LocalDate by;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"    private final DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(DISPLAY_DATE_FORMAT);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"    private final DateTimeFormatter saveFormatter \u003d DateTimeFormatter.ofPattern(INPUT_DATE_FORMAT);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"     * Constructs a Deadline with the specified task name and due date.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"averageandyyy"},"content":"     * @param taskName The name of the Deadline.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"averageandyyy"},"content":"     * @param by       The due date for the Deadline.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"averageandyyy"},"content":"    public Deadline(String taskName, LocalDate by) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"averageandyyy"},"content":"        super(taskName);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"averageandyyy"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"averageandyyy"},"content":"     * Returns the due date of the Deadline in a human-readable format.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"averageandyyy"},"content":"     * @return The due date formatted for display.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"averageandyyy"},"content":"    public String getByAsString() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"averageandyyy"},"content":"        return displayFormatter.format(by);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"averageandyyy"},"content":"     * Returns the due date in a command-friendly format, typically used for saving.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"averageandyyy"},"content":"     * @return The due date formatted for saving as a command.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"averageandyyy"},"content":"    public String getByAsCommand() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"averageandyyy"},"content":"        return saveFormatter.format(by);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"averageandyyy"},"content":"     * Returns the due date of the Deadline as a {@link LocalDate}.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"averageandyyy"},"content":"     * @return The due date.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"averageandyyy"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"averageandyyy"},"content":"        return by;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"averageandyyy"},"content":"     * Sets the due date for the Deadline.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"averageandyyy"},"content":"     * @param by The new due date for the Deadline.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"averageandyyy"},"content":"    public void setBy(LocalDate by) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"averageandyyy"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"averageandyyy"},"content":"     * Returns a string representation of the Deadline.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"averageandyyy"},"content":"     * The format includes the Deadline type indicator \"[D]\" followed by the Deadline\u0027s done marker,","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"averageandyyy"},"content":"     * Deadline name, and the due date in a human-readable format.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"averageandyyy"},"content":"     * @return A string representing the Deadline.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"averageandyyy"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"averageandyyy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"averageandyyy"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), getByAsString());","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"averageandyyy"},"content":"     * Returns the command string to recreate the Deadline.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"averageandyyy"},"content":"     * This is used for saving the Deadline in a format that can be reloaded later.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"averageandyyy"},"content":"     * @return The task as a command string.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"averageandyyy"},"content":"    @Override","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"averageandyyy"},"content":"    public String getTaskAsCommand() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"averageandyyy"},"content":"        return String.format(\"deadline %s /by %s\", getTaskName(), getByAsCommand());","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"averageandyyy":87}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package tasks;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":"import static constants.Regex.DISPLAY_DATE_FORMAT;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":"import static constants.Regex.INPUT_DATE_FORMAT;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":" * Represents an Event in the Bento chatbot.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":" * An Event has a name, a start date (\"from\"), and an end date (\"to\") represented by {@link LocalDate}.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"    private static final String COMMAND_FORMAT \u003d \"event %s /from %s /to %s\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"    private final DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(DISPLAY_DATE_FORMAT);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"    private final DateTimeFormatter saveFormatter \u003d DateTimeFormatter.ofPattern(INPUT_DATE_FORMAT);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"    private LocalDate from;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"    private LocalDate to;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"averageandyyy"},"content":"     * Constructs an Event with the specified task name, start date, and end date.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"averageandyyy"},"content":"     * @param taskName The name of the Event.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"averageandyyy"},"content":"     * @param from     The start date of the Event.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"averageandyyy"},"content":"     * @param to       The end date of the Event.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"averageandyyy"},"content":"    public Event(String taskName, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"averageandyyy"},"content":"        super(taskName);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"averageandyyy"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"averageandyyy"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"averageandyyy"},"content":"     * Returns the start date of the Event.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"averageandyyy"},"content":"     * @return The start date.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"averageandyyy"},"content":"    public LocalDate getFrom() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"averageandyyy"},"content":"        return from;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"averageandyyy"},"content":"     * Sets a new start date for the Event.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"averageandyyy"},"content":"     * @param from The new start date.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"averageandyyy"},"content":"    public void setFrom(LocalDate from) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"averageandyyy"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"averageandyyy"},"content":"     * Returns the end date of the Event.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"averageandyyy"},"content":"     * @return The end date.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"averageandyyy"},"content":"    public LocalDate getTo() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"averageandyyy"},"content":"        return to;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"averageandyyy"},"content":"     * Sets a new end date for the Event.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"averageandyyy"},"content":"     * @param to The new end date.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"averageandyyy"},"content":"    public void setTo(LocalDate to) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"averageandyyy"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"averageandyyy"},"content":"     * Returns the start date of the Event formatted for display.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"averageandyyy"},"content":"     * @return The formatted start date.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"averageandyyy"},"content":"    public String getFromAsString() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"averageandyyy"},"content":"        return displayFormatter.format(from);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"averageandyyy"},"content":"     * Returns the end date of the Event formatted for display.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"averageandyyy"},"content":"     * @return The formatted end date.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"averageandyyy"},"content":"    public String getToAsString() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"averageandyyy"},"content":"        return displayFormatter.format(to);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"averageandyyy"},"content":"     * Returns the start date of the Event in a command-friendly format, typically used for saving.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"averageandyyy"},"content":"     * @return The start date formatted for saving as a command.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"averageandyyy"},"content":"    public String getFromAsCommand() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"averageandyyy"},"content":"        return saveFormatter.format(from);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"averageandyyy"},"content":"     * Returns the end date of the Event in a command-friendly format, typically used for saving.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"averageandyyy"},"content":"     * @return The end date formatted for saving as a command.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"averageandyyy"},"content":"    public String getToAsCommand() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"averageandyyy"},"content":"        return saveFormatter.format(to);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"averageandyyy"},"content":"     * Returns a string representation of the Event.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"averageandyyy"},"content":"     * The format includes the Event type indicator \"[E]\" followed by the task\u0027s done marker,","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"averageandyyy"},"content":"     * task name, start date, and end date in a human-readable format.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"averageandyyy"},"content":"     * @return A string representing the Event.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"averageandyyy"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"averageandyyy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"averageandyyy"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), getFromAsString(), getToAsString());","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"averageandyyy"},"content":"     * Returns the command string to recreate the Event.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"averageandyyy"},"content":"     * This is used for saving the Event in a format that can be reloaded later.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"averageandyyy"},"content":"     * @return The task as a command string.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"averageandyyy"},"content":"    @Override","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"averageandyyy"},"content":"    public String getTaskAsCommand() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"averageandyyy"},"content":"        return String.format(COMMAND_FORMAT, getTaskName(), getFromAsCommand(), getToAsCommand());","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"averageandyyy":127}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package tasks;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":" * Abstract class representing a generic task in Bento.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":" * Each task has a name and a status indicating whether it is done or not.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":" * Subclasses are expected to provide task-specific implementations.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"public abstract class Task {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"    private String taskName;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"     * Constructs a Task with the specified task name.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"    public Task(String taskName) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"averageandyyy"},"content":"     * Returns the name of the task.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"averageandyyy"},"content":"     * @return The task\u0027s name.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"averageandyyy"},"content":"    public String getTaskName() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"averageandyyy"},"content":"        return taskName;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"averageandyyy"},"content":"     * Sets the task\u0027s name.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"averageandyyy"},"content":"     * @param taskName The new name for the task.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"averageandyyy"},"content":"    public void setTaskName(String taskName) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"averageandyyy"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"averageandyyy"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"averageandyyy"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"averageandyyy"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"averageandyyy"},"content":"        return isDone;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"averageandyyy"},"content":"     * Marks the task as done or undone.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"averageandyyy"},"content":"     * @param done True to mark the task as done, false to mark it as undone.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"averageandyyy"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"averageandyyy"},"content":"        isDone \u003d done;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"averageandyyy"},"content":"     * Returns a string marker indicating whether the task is done or not.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"averageandyyy"},"content":"     * A done task is marked with \"[x]\", and an undone task is marked with \"[ ]\".","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"averageandyyy"},"content":"     * @return The done marker as a string.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"averageandyyy"},"content":"    public String getDoneMarker() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"averageandyyy"},"content":"        if (isDone) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"averageandyyy"},"content":"            return \"[x]\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"averageandyyy"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"averageandyyy"},"content":"        return \"[ ]\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"averageandyyy"},"content":"     * Returns a string representation of the task, including its done marker and task name.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"averageandyyy"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"averageandyyy"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"averageandyyy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"averageandyyy"},"content":"        return String.format(\"%s %s\", getDoneMarker(), getTaskName());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"averageandyyy"},"content":"     * Abstract method to return the task in a command-friendly format for saving or processing.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"averageandyyy"},"content":"     * Subclasses must provide their own implementation for how the task should be represented as a command.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"averageandyyy"},"content":"     * @return The task as a command string.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"averageandyyy"},"content":"    public abstract String getTaskAsCommand();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"averageandyyy":88}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package tasks;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":" * Represents a list of tasks that Bento manages.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":" * It provides methods to add, retrieve, delete, and update tasks.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"public class TaskList {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"    public TaskList() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"averageandyyy"},"content":"     * Retrieves the task at the specified index from the task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"averageandyyy"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"averageandyyy"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"averageandyyy"},"content":"    public Task retrieveTask(int index) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"averageandyyy"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"averageandyyy"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"averageandyyy"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"averageandyyy"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"averageandyyy"},"content":"        tasks.add(task);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"averageandyyy"},"content":"     * Deletes the task at the specified index from the task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"averageandyyy"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"averageandyyy"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"averageandyyy"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"averageandyyy"},"content":"     * Updates the completion status of the task at the specified index.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"averageandyyy"},"content":"     * @param isDone The completion status to set (true if done, false otherwise).","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"averageandyyy"},"content":"     * @param index  The index of the task to update.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"averageandyyy"},"content":"    public void updateTask(boolean isDone, int index) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"averageandyyy"},"content":"        retrieveTask(index).setDone(isDone);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"averageandyyy"},"content":"     * Returns the total number of tasks in the task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"averageandyyy"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"averageandyyy"},"content":"    public int getTaskCount() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"averageandyyy"},"content":"        return tasks.size();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"averageandyyy"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"averageandyyy"},"content":"     * @return The ArrayList containing all tasks.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"averageandyyy"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"averageandyyy"},"content":"        return tasks;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"averageandyyy":74}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package tasks;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":" * Represents a ToDo task in Bento.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":" * A ToDo is a simple task with a name, without any associated deadlines or timeframes.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"    private static final String COMMAND_FORMAT \u003d \"todo %s\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"     * Constructs a ToDo task with the specified task name.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"     * @param taskName The name of the ToDo task.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"        super(taskName);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"averageandyyy"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"averageandyyy"},"content":"     * The format includes the task type indicator \"[T]\" followed by the task\u0027s done marker and name.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"averageandyyy"},"content":"     * @return A string representing the ToDo task.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"averageandyyy"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"averageandyyy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"averageandyyy"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"averageandyyy"},"content":"     * Returns the command string to recreate the ToDo task.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"averageandyyy"},"content":"     * This is used for saving the task in a format that can be reloaded later.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"averageandyyy"},"content":"     * @return The task as a command string.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"averageandyyy"},"content":"    @Override","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"averageandyyy"},"content":"    public String getTaskAsCommand() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"averageandyyy"},"content":"        return String.format(COMMAND_FORMAT, getTaskName());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"averageandyyy":40}},{"path":"src/main/java/ui/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package ui;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"import commands.AddDeadlineCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":"import commands.AddEventCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":"import commands.AddTodoCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":"import commands.ByeCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":"import commands.Command;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"import commands.FindCommand;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"import commands.ListCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"import commands.MarkCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"import commands.ShowCommand;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"import exception.InvalidCommandException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"import static constants.Command.BYE_COMMAND;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"import static constants.Command.COMMAND_INDEX;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"import static constants.Command.DEADLINE_COMMAND;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"import static constants.Command.DELETE_COMMAND;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"import static constants.Command.EVENT_COMMAND;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"averageandyyy"},"content":"import static constants.Command.FIND_COMMAND;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"averageandyyy"},"content":"import static constants.Command.LIST_COMMAND;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"averageandyyy"},"content":"import static constants.Command.MARK_COMMAND;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"averageandyyy"},"content":"import static constants.Command.SHOW_COMMAND;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"averageandyyy"},"content":"import static constants.Command.TASK_INDEX;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"averageandyyy"},"content":"import static constants.Command.TASK_STATUS_INDEX;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"averageandyyy"},"content":"import static constants.Command.TODO_COMMAND;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"averageandyyy"},"content":"import static constants.Command.UNMARK_COMMAND;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"averageandyyy"},"content":"import static constants.Regex.BY_REGEX;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"averageandyyy"},"content":"import static constants.Regex.DEADLINE_BY_INDEX;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"averageandyyy"},"content":"import static constants.Regex.DEADLINE_NAME_INDEX;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"averageandyyy"},"content":"import static constants.Regex.EMPTY_REGEX;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"averageandyyy"},"content":"import static constants.Regex.FROM_PREFIX;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"averageandyyy"},"content":"import static constants.Regex.SPACE_REGEX;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"averageandyyy"},"content":"import static constants.Regex.TASK_DONE_INDICATOR;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"averageandyyy"},"content":"import static constants.Regex.TASK_STATUS_DELIMITER_REGEX;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"averageandyyy"},"content":"import static constants.Regex.TO_PREFIX;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"averageandyyy"},"content":" * This class is responsible for parsing user inputs and converting them into","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"averageandyyy"},"content":" * appropriate command objects for execution in Bento.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"averageandyyy"},"content":" * It handles input string parsing, command identification, and extracting necessary details.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"averageandyyy"},"content":"public class Parser {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"averageandyyy"},"content":"     * Parses the input string and returns the appropriate command based on the input.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"averageandyyy"},"content":"     * Throws an InvalidCommandException if the command is not recognized.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"averageandyyy"},"content":"     * @param input The raw user input string.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"averageandyyy"},"content":"     * @param fromUserInput Flag indicating if the input comes from the user or another source, such as a save file.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"averageandyyy"},"content":"     * @return A Command object corresponding to the user input.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"averageandyyy"},"content":"     * @throws InvalidCommandException if the input does not match any known command.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"averageandyyy"},"content":"    public Command getCommand(String input, boolean fromUserInput) throws InvalidCommandException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"averageandyyy"},"content":"        String trimmedInput \u003d input.trim();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"averageandyyy"},"content":"        String[] inputList \u003d getInputList(trimmedInput);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"averageandyyy"},"content":"        return switch (inputList[COMMAND_INDEX]) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"averageandyyy"},"content":"        case BYE_COMMAND -\u003e new ByeCommand();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"averageandyyy"},"content":"        case LIST_COMMAND -\u003e new ListCommand();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"averageandyyy"},"content":"        case MARK_COMMAND -\u003e new MarkCommand(true, trimmedInput);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"averageandyyy"},"content":"        case UNMARK_COMMAND -\u003e new MarkCommand(false, trimmedInput);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"averageandyyy"},"content":"        case TODO_COMMAND -\u003e new AddTodoCommand(trimmedInput, fromUserInput);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"averageandyyy"},"content":"        case DEADLINE_COMMAND -\u003e new AddDeadlineCommand(trimmedInput, fromUserInput);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"averageandyyy"},"content":"        case EVENT_COMMAND -\u003e new AddEventCommand(trimmedInput, fromUserInput);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"averageandyyy"},"content":"        case DELETE_COMMAND -\u003e new DeleteCommand(trimmedInput);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"averageandyyy"},"content":"        case SHOW_COMMAND -\u003e new ShowCommand(trimmedInput);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"averageandyyy"},"content":"        case FIND_COMMAND -\u003e new FindCommand(trimmedInput);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"averageandyyy"},"content":"        default -\u003e throw new InvalidCommandException();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"averageandyyy"},"content":"        };","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"averageandyyy"},"content":"     * Splits the input string into an array of words based on spaces.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"averageandyyy"},"content":"     * @param input The raw input string to split.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"averageandyyy"},"content":"     * @return A string array containing individual words from the input.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"averageandyyy"},"content":"    public String[] getInputList(String input) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"averageandyyy"},"content":"        return input.split(SPACE_REGEX);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"averageandyyy"},"content":"     * Removes the \"mark\" or \"unmark\" prefix from the input string and trims the result.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"averageandyyy"},"content":"     * @param input The input string containing a mark or unmark command.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"averageandyyy"},"content":"     * @return The input string without the \"mark\" or \"unmark\" prefix.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"averageandyyy"},"content":"    public String removeMarkPrefix(String input) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"averageandyyy"},"content":"        return input.replace(UNMARK_COMMAND, EMPTY_REGEX).replace(MARK_COMMAND, EMPTY_REGEX).trim();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"averageandyyy"},"content":"     * Extracts the task name of a ToDo from the input string.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"averageandyyy"},"content":"     * @param input The raw input string containing a to-do command.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"averageandyyy"},"content":"     * @return The description of the to-do task.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"averageandyyy"},"content":"    public String getTodo(String input) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"averageandyyy"},"content":"        return input.replace(TODO_COMMAND, EMPTY_REGEX).trim();","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"averageandyyy"},"content":"     * Removes the \"deadline\" prefix from the input string and trims the result.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"averageandyyy"},"content":"     * @param input The input string containing a deadline command.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"averageandyyy"},"content":"     * @return The input string without the \"deadline\" prefix.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"averageandyyy"},"content":"    public String removeDeadlinePrefix(String input) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"averageandyyy"},"content":"        return input.replace(DEADLINE_COMMAND, EMPTY_REGEX);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"averageandyyy"},"content":"     * Extracts the task name of a Deadline from the input string.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"averageandyyy"},"content":"     * @param input The raw input string containing a deadline command.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"averageandyyy"},"content":"     * @return The name of the Deadline.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"averageandyyy"},"content":"    public String extractDeadlineName(String input) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"averageandyyy"},"content":"        return input.split(BY_REGEX)[DEADLINE_NAME_INDEX].trim();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"averageandyyy"},"content":"     * Extracts the due date of a Deadline from the input string.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"averageandyyy"},"content":"     * @param input The raw input string containing a deadline command.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"averageandyyy"},"content":"     * @return The due date of the Deadline.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"averageandyyy"},"content":"    public String extractDeadlineBy(String input) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"averageandyyy"},"content":"        String[] inputList \u003d input.split(BY_REGEX);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"averageandyyy"},"content":"        if (inputList.length \u003d\u003d 1) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"averageandyyy"},"content":"            return \"\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"averageandyyy"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"averageandyyy"},"content":"        return inputList[DEADLINE_BY_INDEX].trim();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"averageandyyy"},"content":"     * Removes the \"event\" prefix from the input string and trims the result.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"averageandyyy"},"content":"     * @param input The input string containing an event command.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"averageandyyy"},"content":"     * @return The input string without the \"event\" prefix.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"averageandyyy"},"content":"    public String removeEventPrefix(String input) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"averageandyyy"},"content":"        return input.replace(EVENT_COMMAND, EMPTY_REGEX);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"averageandyyy"},"content":"     * Extracts the name of an Event from the input string based on the position of \"from\".","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"averageandyyy"},"content":"     * @param input The raw input string containing an event command.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"averageandyyy"},"content":"     * @param indexOfFrom The index of the \"from\" prefix in the input string.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"averageandyyy"},"content":"     * @return The name of the Event.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"averageandyyy"},"content":"    public String extractEventName(String input, int indexOfFrom) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"averageandyyy"},"content":"        return input.substring(0, indexOfFrom).trim();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"averageandyyy"},"content":"     * Extracts the \"from\" date of an Event from the input string.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"averageandyyy"},"content":"     * @param input The raw input string containing an event command.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"averageandyyy"},"content":"     * @param indexOfFrom The index of the \"from\" prefix in the input string.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"averageandyyy"},"content":"     * @param indexOfTo The index of the \"to\" prefix in the input string.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"averageandyyy"},"content":"     * @return The \"from\" date of the event.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"averageandyyy"},"content":"    public String extractFromString(String input, int indexOfFrom, int indexOfTo) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"averageandyyy"},"content":"        return input.substring(indexOfFrom, indexOfTo).replace(FROM_PREFIX, EMPTY_REGEX).trim();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"averageandyyy"},"content":"     * Extracts the \"to\" date of an Event from the input string.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"averageandyyy"},"content":"     * @param input The raw input string containing an event command.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"averageandyyy"},"content":"     * @param indexOfTo The index of the \"to\" prefix in the input string.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"averageandyyy"},"content":"     * @return The \"to\" date of the Event.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"averageandyyy"},"content":"    public String extractToString(String input, int indexOfTo) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"averageandyyy"},"content":"        return input.substring(indexOfTo).replace(TO_PREFIX, EMPTY_REGEX).trim();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"averageandyyy"},"content":"     * Removes the \"delete\" prefix from the input string and trims the result.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"averageandyyy"},"content":"     * @param input The input string containing a delete command.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"averageandyyy"},"content":"     * @return The input string without the \"delete\" prefix.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"averageandyyy"},"content":"    public String removeDeletePrefix(String input) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"averageandyyy"},"content":"        return input.replace(DELETE_COMMAND, EMPTY_REGEX).trim();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"averageandyyy"},"content":"     * Checks if a task is marked as done based on the saved task status string.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"averageandyyy"},"content":"     * @param line The line from the save file containing task status.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"averageandyyy"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"averageandyyy"},"content":"    public boolean getTaskDone(String line) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"averageandyyy"},"content":"        return line.split(TASK_STATUS_DELIMITER_REGEX)[TASK_STATUS_INDEX].equals(TASK_DONE_INDICATOR);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"averageandyyy"},"content":"     * Extracts the command string from a saved line of task data.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"averageandyyy"},"content":"     * @param line The line from the save file containing task data.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"averageandyyy"},"content":"     * @return The command string.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"averageandyyy"},"content":"    public String getCommandString(String line) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"averageandyyy"},"content":"        return line.split(TASK_STATUS_DELIMITER_REGEX)[TASK_INDEX];","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"averageandyyy"},"content":"     * Removes the \"show\" prefix from the input string and trims the result.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"averageandyyy"},"content":"     * @param input The input string containing a show command.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"averageandyyy"},"content":"     * @return The input string without the \"show\" prefix.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"averageandyyy"},"content":"    public String removeShowPrefix(String input) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"averageandyyy"},"content":"        return input.replace(SHOW_COMMAND, EMPTY_REGEX).trim();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"averageandyyy"},"content":"     * Removes the \"find\" prefix from the input string and trims the result.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"averageandyyy"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"averageandyyy"},"content":"     * @param input The input string containing a find command.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"averageandyyy"},"content":"     * @return The input string without the \"find\" prefix.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"averageandyyy"},"content":"    public String removeFindPrefix(String input) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"averageandyyy"},"content":"        return input.replace(FIND_COMMAND, EMPTY_REGEX).trim();","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"averageandyyy":229}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"package ui;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":"import tasks.Event;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":"import tasks.Task;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"import static constants.Message.ADD_TASK_SUCCESS_MESSAGE;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"import static constants.Message.DELETE_TASK_SUCCESS_MESSAGE;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"import static constants.Message.EXISTING_TASKS_MESSAGE;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"import static constants.Message.GREETING_MESSAGE;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"import static constants.Message.LINE_MESSAGE;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"import static constants.Message.LOGO;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"import static constants.Message.MARKED_MESSAGE;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"import static constants.Message.NO_TASK_OF_INTEREST_MESSAGE;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"import static constants.Message.SAVE_TASK_LIST_SUCCESS_MESSAGE;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"averageandyyy"},"content":"import static constants.Message.SAYONARA_MESSAGE;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"averageandyyy"},"content":"import static constants.Message.TASKS_OF_INTEREST_MESSAGE;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"averageandyyy"},"content":"import static constants.Message.UNMARKED_MESSAGE;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"averageandyyy"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"averageandyyy"},"content":" * This class is responsible for handling the user interface of Bento.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"averageandyyy"},"content":" * It includes methods for displaying messages to the user and getting user input.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"averageandyyy"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"averageandyyy"},"content":"public class Ui {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"averageandyyy"},"content":"    /** Scanner for reading user input. */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"averageandyyy"},"content":"    private Scanner inputScanner;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"averageandyyy"},"content":"     * Constructor for Ui.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"averageandyyy"},"content":"     * Initializes the input scanner to read user input.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"averageandyyy"},"content":"    public Ui() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"averageandyyy"},"content":"        inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"averageandyyy"},"content":"     * Prints the Bento logo.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"averageandyyy"},"content":"    public void printLogo() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"averageandyyy"},"content":"        System.out.print(LOGO);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"averageandyyy"},"content":"     * Prints a line divider for visual clarity.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"averageandyyy"},"content":"    public void printLine() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"averageandyyy"},"content":"        System.out.println(LINE_MESSAGE);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"averageandyyy"},"content":"     * Displays the greeting message and Bento logo to the user.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"averageandyyy"},"content":"    public void sayKonichiwa() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"averageandyyy"},"content":"        printLine();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"averageandyyy"},"content":"        printLogo();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"averageandyyy"},"content":"        System.out.println(GREETING_MESSAGE);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"averageandyyy"},"content":"        printLine();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"averageandyyy"},"content":"     * Displays the farewell message to the user.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"averageandyyy"},"content":"    public void saySayonara() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"averageandyyy"},"content":"        printLine();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"averageandyyy"},"content":"        System.out.println(SAYONARA_MESSAGE);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"averageandyyy"},"content":"        printLine();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"averageandyyy"},"content":"     * Retrieves input from the user.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"averageandyyy"},"content":"     * @return The user\u0027s input as a string.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"averageandyyy"},"content":"    public String getUserInput() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"averageandyyy"},"content":"        return inputScanner.nextLine();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"averageandyyy"},"content":"     * Displays a message indicating a task has been added, along with the current task count.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"averageandyyy"},"content":"     * @param task The task that was added.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"averageandyyy"},"content":"     * @param tasks The list of tasks to display the current task count.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"averageandyyy"},"content":"    public void printAddTaskSuccessMessage(String task, TaskList tasks) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"averageandyyy"},"content":"        printLine();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"averageandyyy"},"content":"        System.out.printf(\"%s\\n\\t\\t%s\\n%s\", ADD_TASK_SUCCESS_MESSAGE, task, getTaskCountMessage(tasks));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"averageandyyy"},"content":"        printLine();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"averageandyyy"},"content":"     * Displays a message indicating the task list was saved successfully.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"averageandyyy"},"content":"    public void printSaveTaskListSuccessMessage() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"averageandyyy"},"content":"        printLine();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"averageandyyy"},"content":"        System.out.println(SAVE_TASK_LIST_SUCCESS_MESSAGE);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"averageandyyy"},"content":"        printLine();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"averageandyyy"},"content":"     * Displays the list of tasks in the task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"averageandyyy"},"content":"     * @param tasks The task list to display.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"averageandyyy"},"content":"    public void listTasks(TaskList tasks) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"averageandyyy"},"content":"        printLine();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"averageandyyy"},"content":"        System.out.println(EXISTING_TASKS_MESSAGE);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"averageandyyy"},"content":"        for (int i \u003d 0; i \u003c tasks.getTaskCount(); i++) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"averageandyyy"},"content":"            System.out.printf(\"\\t%d. %s\\n\", i + 1, tasks.retrieveTask(i));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"averageandyyy"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"averageandyyy"},"content":"        printLine();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"averageandyyy"},"content":"     * Displays tasks of interest (Deadlines or Events) that occur on a specific date.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"averageandyyy"},"content":"     * @param dateOfInterest The date to filter tasks by.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"averageandyyy"},"content":"     * @param tasks The task list to search through.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"averageandyyy"},"content":"    public void listTasksOfInterest(LocalDate dateOfInterest, TaskList tasks) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"averageandyyy"},"content":"        printLine();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"averageandyyy"},"content":"        int currentTask \u003d 0;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"averageandyyy"},"content":"        for (int i \u003d 0; i \u003c tasks.getTaskCount(); i++) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"averageandyyy"},"content":"            Task task \u003d tasks.retrieveTask(i);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"averageandyyy"},"content":"            if (isDeadlineOfInterest(dateOfInterest, task) || isEventOfInterest(dateOfInterest, task)) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"averageandyyy"},"content":"                if (currentTask \u003d\u003d 0) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"averageandyyy"},"content":"                    System.out.println(TASKS_OF_INTEREST_MESSAGE);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"averageandyyy"},"content":"                }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"averageandyyy"},"content":"                System.out.printf(\"\\t%d. %s\\n\", currentTask + 1, task);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"averageandyyy"},"content":"                currentTask++;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"averageandyyy"},"content":"            }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"averageandyyy"},"content":"        }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"averageandyyy"},"content":"        if (currentTask \u003d\u003d 0) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"averageandyyy"},"content":"            System.out.println(NO_TASK_OF_INTEREST_MESSAGE);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"averageandyyy"},"content":"        }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"averageandyyy"},"content":"        printLine();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"averageandyyy"},"content":"     * Displays all tasks of interest in a given task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"averageandyyy"},"content":"     * @param tasks The task list to display.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"averageandyyy"},"content":"    public void listTasksOfInterest(TaskList tasks) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"averageandyyy"},"content":"        printLine();","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"averageandyyy"},"content":"        System.out.println(TASKS_OF_INTEREST_MESSAGE);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"averageandyyy"},"content":"        for (int i \u003d 0; i \u003c tasks.getTaskCount(); i++) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"averageandyyy"},"content":"            System.out.printf(\"\\t%d. %s\\n\", i + 1, tasks.retrieveTask(i));","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"averageandyyy"},"content":"        }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"averageandyyy"},"content":"        printLine();","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"averageandyyy"},"content":"     * Checks if a task is an event that occurs on the specified date.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"averageandyyy"},"content":"     * @param dateOfInterest The date to check.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"averageandyyy"},"content":"     * @param task The task to check.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"averageandyyy"},"content":"     * @return True if the task is an event on the specified date, false otherwise.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"averageandyyy"},"content":"    public boolean isEventOfInterest(LocalDate dateOfInterest, Task task) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"averageandyyy"},"content":"        return task instanceof Event \u0026\u0026 (((Event) task).getFrom().equals(dateOfInterest) ||","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"averageandyyy"},"content":"                ((Event) task).getTo().equals(dateOfInterest));","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"averageandyyy"},"content":"     * Checks if a task is a deadline that is due on the specified date.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"averageandyyy"},"content":"     * @param dateOfInterest The date to check.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"averageandyyy"},"content":"     * @param task The task to check.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"averageandyyy"},"content":"     * @return True if the task is a deadline on the specified date, false otherwise.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"averageandyyy"},"content":"    public boolean isDeadlineOfInterest(LocalDate dateOfInterest, Task task) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"averageandyyy"},"content":"        return task instanceof Deadline \u0026\u0026 ((Deadline) task).getBy().equals(dateOfInterest);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"averageandyyy"},"content":"     * Displays a message indicating a task has been unmarked as not done.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"averageandyyy"},"content":"     * @param tasks The task list that contains the task.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"averageandyyy"},"content":"     * @param index The index of the task to display.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"averageandyyy"},"content":"    public void printUnmarked(TaskList tasks, int index) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"averageandyyy"},"content":"        System.out.println(UNMARKED_MESSAGE);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"averageandyyy"},"content":"        System.out.printf(\"\\t\\t%s\\n\", tasks.retrieveTask(index));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"averageandyyy"},"content":"     * Displays a message indicating a task has been marked as done.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"averageandyyy"},"content":"     * @param tasks The task list that contains the task.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"averageandyyy"},"content":"     * @param index The index of the task to display.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"averageandyyy"},"content":"    public void printMarked(TaskList tasks, int index) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"averageandyyy"},"content":"        System.out.println(MARKED_MESSAGE);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"averageandyyy"},"content":"        System.out.printf(\"\\t\\t%s\\n\", tasks.retrieveTask(index));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"averageandyyy"},"content":"     * Displays an update message depending on whether a task is marked as done or unmarked as not done.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"averageandyyy"},"content":"     * @param tasks The task list that contains the task.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"averageandyyy"},"content":"     * @param isDone True if the task is done, false otherwise.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"averageandyyy"},"content":"     * @param index The index of the task.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"averageandyyy"},"content":"    public void printMarkUpdate(TaskList tasks, boolean isDone, int index) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"averageandyyy"},"content":"        printLine();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"averageandyyy"},"content":"        if (isDone) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"averageandyyy"},"content":"            printMarked(tasks, index);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"averageandyyy"},"content":"        } else {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"averageandyyy"},"content":"            printUnmarked(tasks, index);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"averageandyyy"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"averageandyyy"},"content":"        printLine();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"averageandyyy"},"content":"     * Displays a message indicating a task has been deleted, along with the current task count.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"averageandyyy"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"averageandyyy"},"content":"     * @param tasks The task list to display the current task count.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"averageandyyy"},"content":"    public void printDeleteTaskSuccessMessage(Task task, TaskList tasks) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"averageandyyy"},"content":"        printLine();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"averageandyyy"},"content":"        System.out.printf(\"%s\\n\\t\\t%s\\n%s\", DELETE_TASK_SUCCESS_MESSAGE, task, getTaskCountMessage(tasks));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"averageandyyy"},"content":"        printLine();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"averageandyyy"},"content":"     * Retrieves the number of tasks currently in the task list as a message.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"averageandyyy"},"content":"     * @param tasks The task list to get the task count.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"averageandyyy"},"content":"     * @return A string message showing the current task count.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"averageandyyy"},"content":"    public String getTaskCountMessage(TaskList tasks) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"averageandyyy"},"content":"        return String.format(\"\\tYou currently have %d tasks! Way to go, you busy bee!\\n\", tasks.getTaskCount());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"averageandyyy"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"averageandyyy"},"content":"     * Displays a given error message.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"averageandyyy"},"content":"     * @param errorMessage The error message to display.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"averageandyyy"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"averageandyyy"},"content":"    public void displayErrorMessage(String errorMessage) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"averageandyyy"},"content":"        System.out.print(errorMessage);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"averageandyyy"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"averageandyyy"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"averageandyyy":236}},{"path":"text-ui-test/generate_expected.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":"then","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":"    mkdir ../bin","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":"fi","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"# delete output from previous run","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"if [ -e \"./EXPECTED.TXT\" ]","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"then","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"    rm EXPECTED.TXT","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"fi","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"# delete data folder from previous run","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"if [ -e \"./data\" ]","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"then","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"\trm -rf data","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"fi","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"averageandyyy"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"averageandyyy"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"averageandyyy"},"content":"then","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"averageandyyy"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"averageandyyy"},"content":"    exit 1","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"averageandyyy"},"content":"fi","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"averageandyyy"},"content":"# generate EXPECTED.TXT","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"averageandyyy"},"content":"java -classpath ../bin Main \u003c input.txt \u003e EXPECTED.TXT","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"averageandyyy"},"content":"# exit program","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"averageandyyy"},"content":"echo \"EXPECTED.TXT generated\"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"averageandyyy"},"content":"exit 0","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"averageandyyy":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"borrow book","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"list","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"todo borrow book","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":"list","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":"deadline read book /by Moday 2359","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":"list","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":"deadline read book /by 12/12/2024","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"mark 1","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"event return book /from Tuesday 1200 /to Tuesday 1300","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"list","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"event return book /from 13/12/2024 /to /14/12/2024","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"mark 2","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"list","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"unmark 1","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"list","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"unmark 1","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"mark 1","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"list","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"unmark 2","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"averageandyyy"},"content":"list","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"averageandyyy"},"content":"mark 1","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"averageandyyy"},"content":"mark 2","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"averageandyyy"},"content":"mark 3","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"averageandyyy"},"content":"list","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"averageandyyy"},"content":"mark 500","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"averageandyyy"},"content":"list","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"averageandyyy"},"content":"deadline submit form \\by Wednesday 2359","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"averageandyyy"},"content":"deadline submit form /by 25/12/2024","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"averageandyyy"},"content":"list","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"averageandyyy"},"content":"event formal dinner /f 30/12/2024 \\to 31/12/2024","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"averageandyyy"},"content":"event formal dinner /from 30/12/2024 /to 31/12/2024","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"averageandyyy"},"content":"list","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"averageandyyy"},"content":"mark 4","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"averageandyyy"},"content":"mark 5","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"averageandyyy"},"content":"list","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"averageandyyy"},"content":"show 30/12/2024","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"averageandyyy"},"content":"show 31/12/2024","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"averageandyyy"},"content":"show 01/01/2024","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"averageandyyy"},"content":"find book","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"averageandyyy"},"content":"bye","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"averageandyyy":40}},{"path":"text-ui-test/runtest_bento.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"averageandyyy"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"averageandyyy"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"averageandyyy"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"averageandyyy"},"content":"then","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"averageandyyy"},"content":"    mkdir ../bin","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"averageandyyy"},"content":"fi","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"averageandyyy"},"content":"# delete output from previous run","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"averageandyyy"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"averageandyyy"},"content":"then","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"averageandyyy"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"averageandyyy"},"content":"fi","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"averageandyyy"},"content":"# delete data folder from previous run","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"averageandyyy"},"content":"if [ -e \"./data\" ]","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"averageandyyy"},"content":"then","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"averageandyyy"},"content":"    rm -rf data ","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"averageandyyy"},"content":"fi","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"averageandyyy"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"averageandyyy"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"averageandyyy"},"content":"then","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"averageandyyy"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"averageandyyy"},"content":"    exit 1","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"averageandyyy"},"content":"fi","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"averageandyyy"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"averageandyyy"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"averageandyyy"},"content":"# compare the output to the expected output","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"averageandyyy"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"averageandyyy"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"averageandyyy"},"content":"then","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"averageandyyy"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"averageandyyy"},"content":"    exit 0","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"averageandyyy"},"content":"else","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"averageandyyy"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"averageandyyy"},"content":"    exit 1","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"averageandyyy"},"content":"fi","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"averageandyyy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"averageandyyy":41}}]
