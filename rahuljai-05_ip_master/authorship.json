[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"rahuljai-05"},"content":"# Fenix User Guide","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahuljai-05"},"content":"![img.png](img.png)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahuljai-05"},"content":"Fenix is a refined task management assistant that helps you track your to-dos, deadlines, and events. With its gentlemanly tone, Fenix offers a polite, professional experience as you add, edit and complete tasks through simple commands.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahuljai-05"},"content":"## Adding To-dos","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahuljai-05"},"content":"To add a simple task without a deadline, use the `todo` command followed by the task name.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahuljai-05"},"content":"**Example Input:**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahuljai-05"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahuljai-05"},"content":"todo swim","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahuljai-05"},"content":"**Expected Output:**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahuljai-05"},"content":"The task has been duly noted and added to your list.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahuljai-05"},"content":"        **************************************************************","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahuljai-05"},"content":"        added: 1. [T][ ] swim","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahuljai-05"},"content":"        **************************************************************","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahuljai-05"},"content":"You now have 1 tasks awaiting your attention.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahuljai-05"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahuljai-05"},"content":"## Adding Deadlines","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahuljai-05"},"content":"To add a task with a specific deadline, use the `deadline` command followed by the task name along with the `/by` argument to specify when the deadline is due.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rahuljai-05"},"content":"**Example Input:** ","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rahuljai-05"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rahuljai-05"},"content":"deadline run /by 9pm","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rahuljai-05"},"content":"**Expected Output:**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rahuljai-05"},"content":"The task has been duly noted and added to your list.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rahuljai-05"},"content":"\t**************************************************************","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rahuljai-05"},"content":"\tadded: 2. [D][ ] run  (by: 9pm)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rahuljai-05"},"content":"\t**************************************************************","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rahuljai-05"},"content":"You now have 2 tasks awaiting your attention.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rahuljai-05"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rahuljai-05"},"content":"## Adding Events","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rahuljai-05"},"content":"To add an event with start and end times, use the `event` command followed by the task name along with the `/from` and `/to` arguments to indicate the times.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rahuljai-05"},"content":"**Example Input:** ","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rahuljai-05"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rahuljai-05"},"content":"event attend hackathon /from Monday 2pm /to 8pm","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rahuljai-05"},"content":"**Expected Output:**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rahuljai-05"},"content":"The task has been duly noted and added to your list.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rahuljai-05"},"content":"\t**************************************************************","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rahuljai-05"},"content":"\tadded: 3. [E][ ] attend hackathon  (from: Monday 2pm to: 8pm)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rahuljai-05"},"content":"\t**************************************************************","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rahuljai-05"},"content":"You now have 3 tasks awaiting your attention.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rahuljai-05"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rahuljai-05"},"content":"## Marking Tasks","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rahuljai-05"},"content":"To mark a task as complete, use the `mark` command followed by the number of the task in the list.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rahuljai-05"},"content":"**Example Input:**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rahuljai-05"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rahuljai-05"},"content":"mark 2","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rahuljai-05"},"content":"**Expected Output:**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rahuljai-05"},"content":"Task successfully completed. A job well executed.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rahuljai-05"},"content":"\t**************************************************************","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rahuljai-05"},"content":"\tmarked: 2. [D][X] run  (by: 9pm)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rahuljai-05"},"content":"\t**************************************************************","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rahuljai-05"},"content":"You now have 2 tasks awaiting your attention.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rahuljai-05"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rahuljai-05"},"content":"## Unmarking Tasks","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rahuljai-05"},"content":"To unmark a task as complete, use the `unmark` command followed by the number of the task in the list.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rahuljai-05"},"content":"**Example Input:**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rahuljai-05"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rahuljai-05"},"content":"unmark 2","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rahuljai-05"},"content":"**Expected Output:**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rahuljai-05"},"content":"Understood. This task has been marked as not done yet.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rahuljai-05"},"content":"\t**************************************************************","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rahuljai-05"},"content":"\tunmarked: 2. [D][ ] run  (by: 9pm)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rahuljai-05"},"content":"\t**************************************************************","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rahuljai-05"},"content":"You now have 3 tasks awaiting your attention.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rahuljai-05"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rahuljai-05"},"content":"## Viewing the Task List","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rahuljai-05"},"content":"To display all tasks in your list, use the `list` command.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rahuljai-05"},"content":"**Example Input:**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rahuljai-05"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rahuljai-05"},"content":"list","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rahuljai-05"},"content":"**Expected Output:**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rahuljai-05"},"content":"    1. [T][ ] swim","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rahuljai-05"},"content":"    2. [D][ ] run  (by: 9pm)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rahuljai-05"},"content":"    3. [E][ ] attend hackathon  (from: Monday 2pm to: 8pm)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rahuljai-05"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rahuljai-05"},"content":"## Deleting Tasks","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rahuljai-05"},"content":"To remove a task from your list, use the `delete` command followed by the number of the task in the list.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"rahuljai-05"},"content":"**Example Input:**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"rahuljai-05"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"rahuljai-05"},"content":"delete 1","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rahuljai-05"},"content":"**Expected Output:**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rahuljai-05"},"content":"The task has been removed from your list as per your request.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"rahuljai-05"},"content":"\t**************************************************************","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"rahuljai-05"},"content":"\tdeleted: [T][ ] swim","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"rahuljai-05"},"content":"\t**************************************************************","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"rahuljai-05"},"content":"You now have 2 tasks awaiting your attention.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"rahuljai-05"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"rahuljai-05"},"content":"## Searching for Tasks","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"rahuljai-05"},"content":"To search for tasks in the list by the task name, use the `find` command followed by the keyword.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"rahuljai-05"},"content":"**Example Input:**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"rahuljai-05"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"rahuljai-05"},"content":"find hackathon","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"rahuljai-05"},"content":"**Expected Output:**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"rahuljai-05"},"content":"Here are the tasks that align with your request","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"rahuljai-05"},"content":"\t1. [E][ ] attend hackathon  (from: Monday 2pm to: 8pm)","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"rahuljai-05"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"rahuljai-05"},"content":"## Exiting the Program","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"rahuljai-05"},"content":"To close the application, use the bye command. Fenix will save your task list and bid you a courteous farewell, ensuring that your tasks are securely stored before exiting.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"rahuljai-05"},"content":"**Example Input:**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"rahuljai-05"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"rahuljai-05"},"content":"bye","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"rahuljai-05"},"content":"**Expected Output:**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"rahuljai-05"},"content":"It has been a pleasure assisting you. Farewell.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"rahuljai-05"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"rahuljai-05"},"content":"## Invalid Commands","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"rahuljai-05"},"content":"Any invalid syntax will prompt Fenix to courteously provide feedback, pinpointing the exact nature of the error and guiding you towards the correct format.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"rahuljai-05"},"content":"**Example Input:**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"rahuljai-05"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"rahuljai-05"},"content":"hello","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"rahuljai-05"},"content":"**Expected Output:**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"rahuljai-05"},"content":"Please provide a valid command","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"rahuljai-05"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"rahuljai-05"},"content":"**Example Input:**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"rahuljai-05"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"rahuljai-05"},"content":"todo","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"rahuljai-05"},"content":"**Expected Output:**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"rahuljai-05"},"content":"Please provide a task","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"rahuljai-05"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"rahuljai-05"},"content":"**Example Input:**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"rahuljai-05"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"rahuljai-05"},"content":"event meeting /by 9pm","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"rahuljai-05"},"content":"**Expected Output:**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"rahuljai-05"},"content":"Task input must be in the format \u0027{taskName} /from {Time} /to {Time}\u0027","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"rahuljai-05"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"rahuljai-05"},"content":"```","lastModifiedDate":"2024-10-11","isFullCredit":false}],"authorContributionMap":{"rahuljai-05":175,"-":23}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahuljai-05"},"content":"/**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahuljai-05"},"content":" * The Deadline class represents a task that has a deadline.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahuljai-05"},"content":" * It is a subclass of Task and includes additional information about when the task is due.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahuljai-05"},"content":" */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahuljai-05"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahuljai-05"},"content":"    protected String deadline;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahuljai-05"},"content":"    protected String[] inputArray;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahuljai-05"},"content":"     * Constructs a new Deadline task by parsing the input to extract the task name and deadline.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahuljai-05"},"content":"     * The input should follow the format \"{taskName} /by {Time}\".","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahuljai-05"},"content":"     * @param input The input string containing the task name and deadline.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahuljai-05"},"content":"     * @throws FenixException if the task name is blank or the input format is invalid.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahuljai-05"},"content":"    public Deadline(String input) throws FenixException {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahuljai-05"},"content":"        super();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahuljai-05"},"content":"        splitInput(input);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahuljai-05"},"content":"        // Assign the task name","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahuljai-05"},"content":"        this.taskName \u003d getTaskName(inputArray);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahuljai-05"},"content":"        // Assign the deadline","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahuljai-05"},"content":"        this.deadline \u003d getDeadline(inputArray);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahuljai-05"},"content":"     * Constructs a new Deadline task with the specified completion status and formatted task information.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahuljai-05"},"content":"     * @param isDone           Boolean value indicating whether the task is done.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rahuljai-05"},"content":"     * @param formattedTaskInfo A string representing the formatted task information.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rahuljai-05"},"content":"    public Deadline(boolean isDone, String formattedTaskInfo) {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rahuljai-05"},"content":"        super(isDone, formattedTaskInfo);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rahuljai-05"},"content":"     * Splits the input string into components: the task name and the deadline.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rahuljai-05"},"content":"     * The input must be in the format \"{taskName} /by {Time}\".","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rahuljai-05"},"content":"     * @param input The input string containing the task name and deadline.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rahuljai-05"},"content":"     * @throws IllegalArgumentException if the input format is invalid.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rahuljai-05"},"content":"    private void splitInput(String input) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rahuljai-05"},"content":"        this.inputArray \u003d input.split(\"/\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rahuljai-05"},"content":"        // Validate input length","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rahuljai-05"},"content":"        if (this.inputArray.length \u003c 2) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rahuljai-05"},"content":"            throw new IllegalArgumentException(\"Task input must be in the format \u0027{taskName} /by {Time}\u0027\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rahuljai-05"},"content":"     * Extracts the task name from the input array.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rahuljai-05"},"content":"     * @param inputArray The array containing the task name and deadline.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rahuljai-05"},"content":"     * @return The task name.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rahuljai-05"},"content":"     * @throws FenixException if the task name is blank.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rahuljai-05"},"content":"    public String getTaskName(String[] inputArray) throws FenixException {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rahuljai-05"},"content":"        if (inputArray[0].isBlank()) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rahuljai-05"},"content":"            throw new FenixException(\"Task name cannot be blank\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rahuljai-05"},"content":"        return inputArray[0];","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rahuljai-05"},"content":"     * Extracts the deadline from the input array.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rahuljai-05"},"content":"     * @param inputArray The array containing the task name and deadline.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rahuljai-05"},"content":"     * @return The deadline as a string.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rahuljai-05"},"content":"    public String getDeadline(String[] inputArray) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rahuljai-05"},"content":"        return inputArray[1];","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rahuljai-05"},"content":"     * Returns the string representation of the Deadline task, including its type, completion status,","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rahuljai-05"},"content":"     * task name, and deadline.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rahuljai-05"},"content":"     * The format includes a \"[D]\" to indicate the task is a Deadline, followed by a \"[X]\" if the task is done,","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rahuljai-05"},"content":"     * or \"[ ]\" if it is not done, and the deadline information.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rahuljai-05"},"content":"     * @return A string representing the Deadline task.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rahuljai-05"},"content":"    @Override","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rahuljai-05"},"content":"    public String toString() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rahuljai-05"},"content":"        String taskStatus \u003d \"[D][\" + (isDone ? \"X\" : \" \") + \"] \";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rahuljai-05"},"content":"        if (formattedTaskInfo.isBlank()) {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rahuljai-05"},"content":"            String deadlineInfo \u003d \" (by: \" + deadline.replaceFirst(\"^by\\\\s+\", \"\") + \")\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rahuljai-05"},"content":"            return taskStatus + taskName + deadlineInfo;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rahuljai-05"},"content":"        return taskStatus + formattedTaskInfo;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rahuljai-05"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"rahuljai-05":91}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahuljai-05"},"content":"/**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahuljai-05"},"content":" * The Event class represents a task that spans a specific duration of time.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahuljai-05"},"content":" * It is a subclass of Deadline, with additional information for the start and end times.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahuljai-05"},"content":" */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahuljai-05"},"content":"public class Event extends Deadline {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahuljai-05"},"content":"    protected String deadlineTill;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahuljai-05"},"content":"     * Constructs a new Event task by parsing the input to extract the task name, start time, and end time.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahuljai-05"},"content":"     * The input should follow the format \"{taskName} /from {Time} /to {Time}\".","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahuljai-05"},"content":"     * @param input The input string containing the task name, start time, and end time.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahuljai-05"},"content":"     * @throws FenixException if the task name is blank or the input format is invalid.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahuljai-05"},"content":"     * @throws IllegalArgumentException if the input does not include both start and end times.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahuljai-05"},"content":"    public Event(String input) throws FenixException {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahuljai-05"},"content":"        super(input);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahuljai-05"},"content":"        if (this.inputArray.length \u003c 3) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahuljai-05"},"content":"            throw new IllegalArgumentException(\"Task input must be in the format \u0027{taskName} /from {Time} /to {Time}\u0027\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahuljai-05"},"content":"        this.deadlineTill \u003d getDeadlineTill(inputArray);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahuljai-05"},"content":"     * Constructs a new Event task with the specified completion status and formatted task information.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahuljai-05"},"content":"     * @param isDone           Boolean value indicating whether the task is done.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahuljai-05"},"content":"     * @param formattedTaskInfo A string representing the formatted task information.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rahuljai-05"},"content":"    public Event(boolean isDone, String formattedTaskInfo) {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rahuljai-05"},"content":"        super(isDone, formattedTaskInfo);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rahuljai-05"},"content":"     * Extracts the end time (\"/to {Time}\") from the input array.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rahuljai-05"},"content":"     * @param inputArray The array containing the task name, start time, and end time.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rahuljai-05"},"content":"     * @return The end time as a string.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rahuljai-05"},"content":"    public String getDeadlineTill(String[] inputArray) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rahuljai-05"},"content":"        return inputArray[2];","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rahuljai-05"},"content":"     * Returns the string representation of the Event task, including its type, completion status,","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rahuljai-05"},"content":"     * task name, start time, and end time.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rahuljai-05"},"content":"     * The format includes a \"[E]\" to indicate the task is an Event, followed by a \"[X]\" if the task is done,","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rahuljai-05"},"content":"     * or \"[ ]\" if it is not done, along with the start and end times.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rahuljai-05"},"content":"     * @return A string representing the Event task.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rahuljai-05"},"content":"    @Override","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rahuljai-05"},"content":"    public String toString() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rahuljai-05"},"content":"        String taskStatus \u003d \"[E][\" + (isDone ? \"X\" : \" \") + \"] \";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rahuljai-05"},"content":"        if (formattedTaskInfo.isBlank()) {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rahuljai-05"},"content":"            String from \u003d \" (from: \" + deadline.replaceFirst(\"^from\\\\s+\", \"\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rahuljai-05"},"content":"            String to \u003d \"to: \" + deadlineTill.replaceFirst(\"^to\\\\s+\", \"\") + \")\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rahuljai-05"},"content":"            return taskStatus + taskName + from + to;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rahuljai-05"},"content":"        return taskStatus + formattedTaskInfo;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rahuljai-05"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"rahuljai-05":62}},{"path":"src/main/java/Fenix.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahuljai-05"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahuljai-05"},"content":"import java.util.List;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahuljai-05"},"content":"/**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahuljai-05"},"content":" * Fenix is the main controller class of the application.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahuljai-05"},"content":" * It manages task handling, user commands, storage, and interaction with the user.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahuljai-05"},"content":" * Fenix processes user inputs and delegates tasks to the appropriate handlers.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahuljai-05"},"content":" */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahuljai-05"},"content":"public class Fenix implements SampleStrings {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahuljai-05"},"content":"    private TaskHandler taskHandler;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahuljai-05"},"content":"    private UserInterface ui;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahuljai-05"},"content":"    private Parser parser;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahuljai-05"},"content":"    private Storage storage;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahuljai-05"},"content":"    private boolean isExit;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahuljai-05"},"content":"    ","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahuljai-05"},"content":"     * Constructs a new instance of Fenix, initializing the necessary components for task management.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahuljai-05"},"content":"     * This includes setting up storage, user interface, parser, and task handler objects.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahuljai-05"},"content":"    public Fenix() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahuljai-05"},"content":"        storage \u003d new Storage(this);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahuljai-05"},"content":"        ui \u003d new UserInterface(this);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahuljai-05"},"content":"        parser \u003d new Parser(this);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahuljai-05"},"content":"        taskHandler \u003d new TaskHandler(this);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahuljai-05"},"content":"     * Returns the total number of tasks currently in the list.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rahuljai-05"},"content":"     * @return the number of tasks in the task list.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rahuljai-05"},"content":"    public int getSize() {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rahuljai-05"},"content":"        return taskHandler.getTaskArrayList().size();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rahuljai-05"},"content":"     * Retrieves the number of unfinished tasks from the task handler.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rahuljai-05"},"content":"     * @return The number of tasks that are not marked as done.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rahuljai-05"},"content":"    public int getNumberOfUnfinishedTasks() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rahuljai-05"},"content":"        return taskHandler.getNumberOfUnfinishedTasks();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rahuljai-05"},"content":"     * Retrieves the index of the specified task in the task list.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rahuljai-05"},"content":"     * @param task The task whose index is to be found.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rahuljai-05"},"content":"     * @return the index of the task, or -1 if the task is not found.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rahuljai-05"},"content":"    public int indexOfTask(Task task) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rahuljai-05"},"content":"        return taskHandler.getTaskArrayList().indexOf(task);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rahuljai-05"},"content":"     * Processes the user input to determine and return the task index.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rahuljai-05"},"content":"     * If the input is invalid or blank, appropriate messages are shown.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rahuljai-05"},"content":"     * @param taskNumber the user input for the task number.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rahuljai-05"},"content":"     * @return the index of the task, or -1 if the input is invalid.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rahuljai-05"},"content":"    public int getTaskIndexFromInput(String taskNumber) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rahuljai-05"},"content":"        if (taskNumber.isBlank()) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rahuljai-05"},"content":"            ui.requestForTask();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rahuljai-05"},"content":"            return -1;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rahuljai-05"},"content":"        if (!parser.isValidTaskNumber(taskNumber)) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rahuljai-05"},"content":"            ui.requestForValidTask();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rahuljai-05"},"content":"            return -1;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rahuljai-05"},"content":"        return parser.parseInteger(taskNumber) - 1;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rahuljai-05"},"content":"     * Returns an unmodifiable view of the task list.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rahuljai-05"},"content":"     * @return a list of tasks that cannot be modified.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rahuljai-05"},"content":"    public List\u003cTask\u003e getTaskArrayList() {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rahuljai-05"},"content":"        return taskHandler.getTaskArrayList();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rahuljai-05"},"content":"     * Handles the \u0027bye\u0027 command, which ends the user session.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rahuljai-05"},"content":"     * It displays a farewell message and sets the exit flag to true.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rahuljai-05"},"content":"    public void handleBye() {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rahuljai-05"},"content":"        ui.bidFarewell();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rahuljai-05"},"content":"        isExit \u003d true;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rahuljai-05"},"content":"     * Handles the \u0027list\u0027 command by displaying all tasks in the task list.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rahuljai-05"},"content":"    public void handleList() {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rahuljai-05"},"content":"        ui.showAllTasks(getTaskArrayList());","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rahuljai-05"},"content":"     * Handles the \u0027mark\u0027 command, marking the specified task as done.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rahuljai-05"},"content":"     * @param commandInfo the task number provided by the user to mark as done.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rahuljai-05"},"content":"    public void handleMark(String commandInfo) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rahuljai-05"},"content":"        Task task \u003d taskHandler.markAsDone(commandInfo);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rahuljai-05"},"content":"        ui.showFenixModification(MARK, task);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rahuljai-05"},"content":"     * Handles the \u0027unmark\u0027 command, marking the specified task as not done.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rahuljai-05"},"content":"     * @param commandInfo the task number provided by the user to unmark as not done.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rahuljai-05"},"content":"    public void handleUnmark(String commandInfo) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rahuljai-05"},"content":"        Task task \u003d taskHandler.unmarkAsDone(commandInfo);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rahuljai-05"},"content":"        ui.showFenixModification(UNMARK, task);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rahuljai-05"},"content":"     * Handles the addition of tasks such as to-dos, deadlines, or events based on user input.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"rahuljai-05"},"content":"     * If the command type or task details are invalid, prompts are shown to request valid input.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"rahuljai-05"},"content":"     * @param commandType the type of task (todo, deadline, event).","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"rahuljai-05"},"content":"     * @param commandInfo the details of the task to be added.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rahuljai-05"},"content":"    public void handleAddTask(String commandType, String commandInfo) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rahuljai-05"},"content":"        if (commandType \u003d\u003d null || commandType.isBlank()) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rahuljai-05"},"content":"            ui.requestForCommand();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"rahuljai-05"},"content":"            return;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"rahuljai-05"},"content":"        } else if (commandInfo \u003d\u003d null || commandInfo.isBlank()) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"rahuljai-05"},"content":"            ui.requestForTask();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"rahuljai-05"},"content":"            return;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"rahuljai-05"},"content":"        Task task \u003d parser.returnTaskObject(commandType, commandInfo);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"rahuljai-05"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"rahuljai-05"},"content":"            return;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"rahuljai-05"},"content":"        taskHandler.storeTask(task);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"rahuljai-05"},"content":"        ui.showFenixModification(ADD, task);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"rahuljai-05"},"content":"     * Handles the \u0027delete\u0027 command, removing the specified task from the task list.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"rahuljai-05"},"content":"     * @param commandInfo the task number provided by the user to be deleted.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"rahuljai-05"},"content":"    public void handleDelete(String commandInfo) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"rahuljai-05"},"content":"        Task task \u003d taskHandler.deleteTask(commandInfo);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"rahuljai-05"},"content":"        ui.showFenixModification(DELETE, task);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"rahuljai-05"},"content":"     * Handles the \u0027find\u0027 command by searching for tasks that match the given input.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"rahuljai-05"},"content":"     * It retrieves a list of matching tasks and displays them to the user.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"rahuljai-05"},"content":"     * @param commandInfo The search keyword used to find matching tasks.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"rahuljai-05"},"content":"    public void handleFind(String commandInfo) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"rahuljai-05"},"content":"        ArrayList\u003cTask\u003e foundArrayList \u003d taskHandler.findTasks(commandInfo);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"rahuljai-05"},"content":"        ui.printMatchedTasks();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"rahuljai-05"},"content":"        ui.showAllTasks(foundArrayList);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"rahuljai-05"},"content":"     * Handles invalid commands by prompting the user to enter a valid command.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"rahuljai-05"},"content":"    public void handleInvalidCommand() {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"rahuljai-05"},"content":"        ui.requestForValidCommand();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"rahuljai-05"},"content":"     * Adds tasks from storage during the loading phase. The task\u0027s type, status,","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"rahuljai-05"},"content":"     * and details are used to recreate tasks from stored data.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"rahuljai-05"},"content":"     * @param taskType the type of task (todo, deadline, event).","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"rahuljai-05"},"content":"     * @param taskStatus the completion status of the task.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"rahuljai-05"},"content":"     * @param taskInfo the details of the task.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"rahuljai-05"},"content":"    public void addTaskFromStorage(String taskType, String taskStatus, String taskInfo) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"rahuljai-05"},"content":"        taskHandler.storeTask(parser.returnTaskObject(taskType, taskStatus, taskInfo));","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"rahuljai-05"},"content":"     * Runs the Fenix application by loading tasks from storage, greeting the user,","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"rahuljai-05"},"content":"     * and continuously processing user input until the exit command is issued.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"rahuljai-05"},"content":"     * On exit, all tasks are saved back to storage.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"rahuljai-05"},"content":"    public void run() {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"rahuljai-05"},"content":"        storage.loadAllInfo();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"rahuljai-05"},"content":"        ui.greet();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"rahuljai-05"},"content":"        while (!isExit) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"rahuljai-05"},"content":"            String userInput \u003d ui.getUserInput();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"rahuljai-05"},"content":"            parser.processUserInput(userInput);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"rahuljai-05"},"content":"        storage.writeAllTasks();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"rahuljai-05"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"rahuljai-05":197}},{"path":"src/main/java/FenixException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahuljai-05"},"content":"public class FenixException extends Exception {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahuljai-05"},"content":"    public FenixException(String message) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahuljai-05"},"content":"        super(message);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahuljai-05"},"content":"}","lastModifiedDate":"2024-09-14","isFullCredit":false}],"authorContributionMap":{"rahuljai-05":5}},{"path":"src/main/java/FileHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahuljai-05"},"content":"import java.io.File;","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahuljai-05"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahuljai-05"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahuljai-05"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahuljai-05"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahuljai-05"},"content":"/**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahuljai-05"},"content":" * The FileHandler class is responsible for handling file operations, such as reading from and writing to files.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahuljai-05"},"content":" * It ensures that the storage file and its parent directories are created if they do not exist.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahuljai-05"},"content":" */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahuljai-05"},"content":"public class FileHandler {","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahuljai-05"},"content":"    private File f;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahuljai-05"},"content":"    private String path;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahuljai-05"},"content":"     * Constructs a FileHandler instance and initializes the storage file path.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahuljai-05"},"content":"     * The file is located at \"data/FenixStorage.txt\".","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahuljai-05"},"content":"    public FileHandler() {","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahuljai-05"},"content":"        this.f \u003d new File(\"data/FenixStorage.txt\");","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahuljai-05"},"content":"        this.path \u003d this.f.getAbsolutePath();","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahuljai-05"},"content":"     * Loads the content of the file and returns it as a string.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahuljai-05"},"content":"     * @return The content of the file as a single string.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahuljai-05"},"content":"     * @throws FileNotFoundException if the file does not exist.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rahuljai-05"},"content":"    public String loadFileContents() throws FileNotFoundException {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rahuljai-05"},"content":"        Scanner s \u003d new Scanner(this.f);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rahuljai-05"},"content":"        StringBuilder fileContent \u003d new StringBuilder();","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rahuljai-05"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rahuljai-05"},"content":"            fileContent.append(s.nextLine());","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rahuljai-05"},"content":"            fileContent.append(\"\\n\");","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rahuljai-05"},"content":"        return fileContent.toString();","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rahuljai-05"},"content":"     * Writes the provided text to the file, overwriting any existing content.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rahuljai-05"},"content":"     * If the file does not exist, it is created.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rahuljai-05"},"content":"     * @param textToWrite The text to write to the file.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rahuljai-05"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rahuljai-05"},"content":"    public void writeToFile(String textToWrite) throws IOException {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rahuljai-05"},"content":"        ensureFileExists();","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rahuljai-05"},"content":"        FileWriter fw \u003d new FileWriter(this.path);","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rahuljai-05"},"content":"        fw.write(textToWrite);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rahuljai-05"},"content":"        fw.close();","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rahuljai-05"},"content":"     * Appends the provided text to the file, keeping the existing content intact.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rahuljai-05"},"content":"     * If the file does not exist, it is created.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rahuljai-05"},"content":"     * @param textToAppend The text to append to the file.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rahuljai-05"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rahuljai-05"},"content":"    public void appendToFile(String textToAppend) throws IOException {","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rahuljai-05"},"content":"        FileWriter fw \u003d new FileWriter(this.path, true); // create a FileWriter in append mode","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rahuljai-05"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rahuljai-05"},"content":"        fw.close();","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rahuljai-05"},"content":"     * Ensures that the file and its parent directories exist. If the file or its parent directories","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rahuljai-05"},"content":"     * do not exist, they are created.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rahuljai-05"},"content":"     * @throws IOException if an I/O error occurs when creating the file or directories.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rahuljai-05"},"content":"    private void ensureFileExists() throws IOException {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rahuljai-05"},"content":"        if (!f.exists()) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rahuljai-05"},"content":"            f.getParentFile().mkdirs();  // Create the parent directory if it doesn\u0027t exist","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rahuljai-05"},"content":"            f.createNewFile();           // Create the file if it doesn\u0027t exist","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rahuljai-05"},"content":"}","lastModifiedDate":"2024-09-19","isFullCredit":false}],"authorContributionMap":{"rahuljai-05":79}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahuljai-05"},"content":"/**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahuljai-05"},"content":" * The Main class serves as the entry point for the Fenix application.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahuljai-05"},"content":" * It creates an instance of Fenix and starts the application by calling the run() method.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahuljai-05"},"content":" */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahuljai-05"},"content":"public class Main {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahuljai-05"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahuljai-05"},"content":"        Fenix fenix \u003d new Fenix();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahuljai-05"},"content":"        fenix.run();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahuljai-05"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"rahuljai-05":10}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahuljai-05"},"content":"/**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahuljai-05"},"content":" * The Parser class is responsible for interpreting user input and executing the corresponding commands.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahuljai-05"},"content":" * It also provides methods to create task objects based on user input and validates task numbers.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahuljai-05"},"content":" */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahuljai-05"},"content":"public class Parser {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahuljai-05"},"content":"    private Fenix fenix;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahuljai-05"},"content":"     * Constructs a Parser object and associates it with a given Fenix instance.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahuljai-05"},"content":"     * @param fenix The Fenix instance that this parser will communicate with.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahuljai-05"},"content":"    public Parser(Fenix fenix) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahuljai-05"},"content":"        this.fenix \u003d fenix;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahuljai-05"},"content":"     * Processes the user\u0027s input by determining the command type and invoking the relevant method in Fenix.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahuljai-05"},"content":"     * Splits the input into a command and optional information, then handles the command accordingly.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahuljai-05"},"content":"     * @param userInput The raw input from the user.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahuljai-05"},"content":"    public void processUserInput(String userInput) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahuljai-05"},"content":"        String[] words \u003d userInput.trim().split(\" \", 2);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahuljai-05"},"content":"        String commandType \u003d words[0];","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahuljai-05"},"content":"        String commandInfo \u003d (words.length \u003e 1) ? words[1] : \"\";","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahuljai-05"},"content":"        switch (commandType) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rahuljai-05"},"content":"        case \"bye\":","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rahuljai-05"},"content":"            fenix.handleBye();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rahuljai-05"},"content":"            break;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rahuljai-05"},"content":"        case \"list\":","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rahuljai-05"},"content":"            fenix.handleList();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rahuljai-05"},"content":"            break;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rahuljai-05"},"content":"        case \"mark\":","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rahuljai-05"},"content":"            fenix.handleMark(commandInfo);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rahuljai-05"},"content":"            break;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rahuljai-05"},"content":"        case \"unmark\":","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rahuljai-05"},"content":"            fenix.handleUnmark(commandInfo);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rahuljai-05"},"content":"            break;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rahuljai-05"},"content":"        case \"todo\":","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rahuljai-05"},"content":"        case \"deadline\":","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rahuljai-05"},"content":"        case \"event\":","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rahuljai-05"},"content":"            fenix.handleAddTask(commandType, commandInfo);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rahuljai-05"},"content":"            break;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rahuljai-05"},"content":"        case \"delete\":","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rahuljai-05"},"content":"            fenix.handleDelete(commandInfo);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rahuljai-05"},"content":"            break;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rahuljai-05"},"content":"        case \"find\":","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rahuljai-05"},"content":"            fenix.handleFind(commandInfo);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rahuljai-05"},"content":"            break;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rahuljai-05"},"content":"        default:","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rahuljai-05"},"content":"            fenix.handleInvalidCommand();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rahuljai-05"},"content":"     * Creates and returns a task object (Todo, Deadline, or Event) based on the provided type and information.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rahuljai-05"},"content":"     * For deadlines and events, it handles exceptions when the provided information is invalid.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rahuljai-05"},"content":"     * @param type The type of the task (todo, deadline, or event).","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rahuljai-05"},"content":"     * @param information The task details.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rahuljai-05"},"content":"     * @return A Task object corresponding to the given type, or null if invalid.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rahuljai-05"},"content":"    public Task returnTaskObject(String type, String information) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rahuljai-05"},"content":"        switch (type) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rahuljai-05"},"content":"        case \"todo\":","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rahuljai-05"},"content":"            return new Todo(information);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rahuljai-05"},"content":"        case \"deadline\":","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rahuljai-05"},"content":"            try {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rahuljai-05"},"content":"                return new Deadline(information);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rahuljai-05"},"content":"            } catch (IllegalArgumentException | FenixException e) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rahuljai-05"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rahuljai-05"},"content":"                return null;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rahuljai-05"},"content":"            }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rahuljai-05"},"content":"        case \"event\":","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rahuljai-05"},"content":"            try {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rahuljai-05"},"content":"                return new Event(information);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rahuljai-05"},"content":"            } catch (IllegalArgumentException | FenixException e) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rahuljai-05"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rahuljai-05"},"content":"                return null;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rahuljai-05"},"content":"            }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rahuljai-05"},"content":"        default:","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rahuljai-05"},"content":"            return null;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rahuljai-05"},"content":"     * Creates and returns a task object based on the task type, status, and information provided.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rahuljai-05"},"content":"     * Used when reconstructing tasks from storage, with the task\u0027s completion status taken into account.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rahuljai-05"},"content":"     * @param taskType The type of the task (T for Todo, D for Deadline, E for Event).","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rahuljai-05"},"content":"     * @param taskStatus The completion status of the task (X for done, any other value for not done).","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rahuljai-05"},"content":"     * @param taskInfo The task details.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rahuljai-05"},"content":"     * @return A Task object corresponding to the provided parameters, or null if invalid.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rahuljai-05"},"content":"    public Task returnTaskObject(String taskType, String taskStatus, String taskInfo) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rahuljai-05"},"content":"        boolean isDone \u003d (taskStatus.equals(\"X\"));","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rahuljai-05"},"content":"        return switch (taskType) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rahuljai-05"},"content":"            case \"T\" -\u003e new Todo(isDone, taskInfo);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rahuljai-05"},"content":"            case \"D\" -\u003e new Deadline(isDone, taskInfo);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rahuljai-05"},"content":"            case \"E\" -\u003e new Event(isDone, taskInfo);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rahuljai-05"},"content":"            default -\u003e null;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rahuljai-05"},"content":"        };","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rahuljai-05"},"content":"     * Validates whether the provided task number is valid by checking if it is a valid integer","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rahuljai-05"},"content":"     * and if it lies within the bounds of the task list.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rahuljai-05"},"content":"     * @param taskNumber The task number to validate.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rahuljai-05"},"content":"     * @return true if the task number is valid, false otherwise.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rahuljai-05"},"content":"    public boolean isValidTaskNumber(String taskNumber) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rahuljai-05"},"content":"        try {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rahuljai-05"},"content":"            int index \u003d parseInteger(taskNumber);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rahuljai-05"},"content":"            return index \u003e 0 \u0026\u0026 index \u003c\u003d fenix.getSize();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rahuljai-05"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rahuljai-05"},"content":"            return false;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"rahuljai-05"},"content":"     * Parses the input string to an integer.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rahuljai-05"},"content":"     * @param inputInteger The input string representing an integer.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rahuljai-05"},"content":"     * @return The parsed integer value.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rahuljai-05"},"content":"     * @throws NumberFormatException if the input string cannot be parsed as an integer.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"rahuljai-05"},"content":"    public int parseInteger(String inputInteger) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"rahuljai-05"},"content":"        return Integer.parseInt(inputInteger);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"rahuljai-05"},"content":"}","lastModifiedDate":"2024-10-02","isFullCredit":false}],"authorContributionMap":{"rahuljai-05":133}},{"path":"src/main/java/SampleStrings.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahuljai-05"},"content":"public interface SampleStrings {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahuljai-05"},"content":"    int HORIZONTAL_LINE_USER_COMMAND_LENGTH \u003d 70;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahuljai-05"},"content":"    int HORIZONTAL_LINE_FENIX_MODIFICATION_LENGTH \u003d 62;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahuljai-05"},"content":"    String HORIZONTAL_LINE_USER_COMMAND \u003d \"~\".repeat(HORIZONTAL_LINE_USER_COMMAND_LENGTH);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahuljai-05"},"content":"    String HORIZONTAL_LINE_FENIX_MODIFICATION \u003d \"\\t\\t\" + \"*\".repeat(HORIZONTAL_LINE_FENIX_MODIFICATION_LENGTH);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahuljai-05"},"content":"    String GREETING \u003d \"Greetings. I am Fenix, your digital assistant.\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahuljai-05"},"content":"    String SERVICE_PROMPT \u003d \"How may I be of service to you today?\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahuljai-05"},"content":"    String COMMAND_REQUEST \u003d \"Please provide a command\";","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahuljai-05"},"content":"    String VALID_COMMAND_REQUEST \u003d \"Please provide a valid command\";","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahuljai-05"},"content":"    String TASK_REQUEST \u003d \"Please provide a task\";","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahuljai-05"},"content":"    String VALID_TASK_REQUEST \u003d \"Please provide a valid task\";","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahuljai-05"},"content":"    String ALL_TASKS_COMPLETED \u003d \"All tasks are completed. Your diligence is commendable.\";","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahuljai-05"},"content":"    String MATCHED_TASKS \u003d \"Here are the tasks that align with your request\";","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahuljai-05"},"content":"    String FAREWELL \u003d \"It has been a pleasure assisting you. Farewell.\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahuljai-05"},"content":"    String[] ADD \u003d {\"The task has been duly noted and added to your list.\", \"added: \"};","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahuljai-05"},"content":"    String[] DELETE \u003d {\"The task has been removed from your list as per your request.\", \"deleted: \"};","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahuljai-05"},"content":"    String[] MARK \u003d {\"Task successfully completed. A job well executed.\", \"marked: \"};","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahuljai-05"},"content":"    String[] UNMARK \u003d {\"Understood. This task has been marked as not done yet.\", \"unmarked: \"};","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahuljai-05"},"content":"}","lastModifiedDate":"2024-09-14","isFullCredit":false}],"authorContributionMap":{"rahuljai-05":19}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahuljai-05"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahuljai-05"},"content":"import java.io.IOException;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahuljai-05"},"content":"/**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahuljai-05"},"content":" * The Storage class handles loading and saving tasks to and from a file.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahuljai-05"},"content":" * It interacts with the FileHandler to perform file operations and Fenix to","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahuljai-05"},"content":" * load and store tasks.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahuljai-05"},"content":" */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahuljai-05"},"content":"public class Storage {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahuljai-05"},"content":"    private Fenix fenix;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahuljai-05"},"content":"    private FileHandler fileHandler;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahuljai-05"},"content":"     * Constructs a Storage instance associated with the given Fenix instance.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahuljai-05"},"content":"     * Initializes the file handler to manage file operations.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahuljai-05"},"content":"     * @param fenix The Fenix instance that this Storage interacts with.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahuljai-05"},"content":"    public Storage(Fenix fenix) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahuljai-05"},"content":"        this.fenix \u003d fenix;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahuljai-05"},"content":"        fileHandler \u003d new FileHandler();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahuljai-05"},"content":"     * Loads all task information from the file.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahuljai-05"},"content":"     * If the file contains task data, it is parsed and loaded into Fenix.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahuljai-05"},"content":"    public void loadAllInfo() {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rahuljai-05"},"content":"        try {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rahuljai-05"},"content":"            String fileContent \u003d getFileInfo();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rahuljai-05"},"content":"            if (!fileContent.isBlank()) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rahuljai-05"},"content":"                decipherAllInfo(fileContent);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rahuljai-05"},"content":"            }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rahuljai-05"},"content":"        } catch (FileNotFoundException ignored) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rahuljai-05"},"content":"     * Reads and returns the contents of the task file.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rahuljai-05"},"content":"     * @return A string representing the file contents.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rahuljai-05"},"content":"     * @throws FileNotFoundException if the file cannot be found.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rahuljai-05"},"content":"    private String getFileInfo() throws FileNotFoundException {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rahuljai-05"},"content":"        String fileContent \u003d \"\";","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rahuljai-05"},"content":"        fileContent \u003d fileHandler.loadFileContents();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rahuljai-05"},"content":"        return fileContent;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rahuljai-05"},"content":"     * Parses the file content and loads each task into Fenix.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rahuljai-05"},"content":"     * The file content is split into individual tasks, and each task is added to the task list.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rahuljai-05"},"content":"     * @param fileContent The file content containing task information.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rahuljai-05"},"content":"    private void decipherAllInfo(String fileContent) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rahuljai-05"},"content":"        String[] arrayOfTasks \u003d fileContent.split(\"\\n\");","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rahuljai-05"},"content":"        for (String task : arrayOfTasks) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rahuljai-05"},"content":"            String[] stringArray \u003d task.split(\"\\\\|\");","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rahuljai-05"},"content":"            String taskType \u003d stringArray[1];","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rahuljai-05"},"content":"            String taskStatus \u003d stringArray[2];","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rahuljai-05"},"content":"            String taskInfo \u003d stringArray[3].trim();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rahuljai-05"},"content":"            fenix.addTaskFromStorage(taskType, taskStatus, taskInfo);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rahuljai-05"},"content":"     * Saves all tasks to the file by first clearing the file, then writing all tasks.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rahuljai-05"},"content":"    public void writeAllTasks() {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rahuljai-05"},"content":"        clearAllInfo();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rahuljai-05"},"content":"        saveAllInfo();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rahuljai-05"},"content":"     * Clears all task information from the file by overwriting it with an empty string.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rahuljai-05"},"content":"    private void clearAllInfo() {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rahuljai-05"},"content":"        try {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rahuljai-05"},"content":"            fileHandler.writeToFile(\"\");","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rahuljai-05"},"content":"        } catch (IOException | NullPointerException ignored) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rahuljai-05"},"content":"     * Saves all current tasks in Fenix to the file.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rahuljai-05"},"content":"     * Each task is formatted and appended to the file.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rahuljai-05"},"content":"    private void saveAllInfo() {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rahuljai-05"},"content":"        for (Task task : fenix.getTaskArrayList()) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rahuljai-05"},"content":"            try {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rahuljai-05"},"content":"                String taskToWrite \u003d task.toString();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rahuljai-05"},"content":"                taskToWrite \u003d taskToWrite.replaceAll(\"\\\\[\", \"|\");","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rahuljai-05"},"content":"                taskToWrite \u003d taskToWrite.replaceAll(\"]\", \"|\");","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rahuljai-05"},"content":"                taskToWrite \u003d taskToWrite.replace(\"||\", \"|\");","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rahuljai-05"},"content":"                fileHandler.appendToFile(taskToWrite);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rahuljai-05"},"content":"                fileHandler.appendToFile(\"\\n\");","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rahuljai-05"},"content":"            } catch (IOException | NullPointerException e) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rahuljai-05"},"content":"                return;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rahuljai-05"},"content":"            }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rahuljai-05"},"content":"}","lastModifiedDate":"2024-10-02","isFullCredit":false}],"authorContributionMap":{"rahuljai-05":103}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahuljai-05"},"content":"/**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahuljai-05"},"content":" * The Task class is an abstract class that represents a generic task.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahuljai-05"},"content":" * It contains common attributes and behaviors for tasks, such as marking tasks","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahuljai-05"},"content":" * as done or undone. Specific types of tasks should extend this class and provide","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahuljai-05"},"content":" * additional functionality.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahuljai-05"},"content":" */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahuljai-05"},"content":"public abstract class Task {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahuljai-05"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahuljai-05"},"content":"    protected String taskName \u003d \"\";","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahuljai-05"},"content":"    protected String formattedTaskInfo \u003d \"\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahuljai-05"},"content":"     * Default constructor for the Task class.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahuljai-05"},"content":"     * Initializes an empty task.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahuljai-05"},"content":"    public Task() {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahuljai-05"},"content":"     * Constructs a new Task with the specified task name.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahuljai-05"},"content":"     * The task is initialized as not done by default.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahuljai-05"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahuljai-05"},"content":"    public Task(String taskName) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahuljai-05"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahuljai-05"},"content":"        this.isDone \u003d false; // Default to not done","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rahuljai-05"},"content":"     * Constructs a new Task with the specified completion status and task information.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rahuljai-05"},"content":"     * @param isDone           Boolean value indicating whether the task is done.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rahuljai-05"},"content":"     * @param formattedTaskInfo A string representing the formatted task information.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rahuljai-05"},"content":"    public Task(boolean isDone, String formattedTaskInfo) {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rahuljai-05"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rahuljai-05"},"content":"        this.formattedTaskInfo \u003d formattedTaskInfo;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rahuljai-05"},"content":"     * Retrieves the name of the task.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rahuljai-05"},"content":"     * @return The name of the task.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rahuljai-05"},"content":"    public String getTaskName() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rahuljai-05"},"content":"        return taskName;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rahuljai-05"},"content":"     * Retrieves the formatted task information, which may include additional details about the task.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rahuljai-05"},"content":"     * @return The formatted task information.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rahuljai-05"},"content":"    public String getFormattedTaskInfo() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rahuljai-05"},"content":"        return formattedTaskInfo;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rahuljai-05"},"content":"     * Retrieves the completion status of the task.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rahuljai-05"},"content":"     * @return true if the task is marked as done, false otherwise.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rahuljai-05"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rahuljai-05"},"content":"        return isDone;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rahuljai-05"},"content":"     * Marks the task as done by setting the isDone flag to true.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rahuljai-05"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rahuljai-05"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rahuljai-05"},"content":"     * Marks the task as not done by setting the isDone flag to false.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rahuljai-05"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rahuljai-05"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rahuljai-05"},"content":"     * Abstract method to return the string representation of the task.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rahuljai-05"},"content":"     * Must be implemented by subclasses to provide task-specific details.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rahuljai-05"},"content":"     * @return A string representing the task.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rahuljai-05"},"content":"    @Override","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rahuljai-05"},"content":"    public abstract String toString();","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rahuljai-05"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"rahuljai-05":91}},{"path":"src/main/java/TaskHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahuljai-05"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahuljai-05"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahuljai-05"},"content":"import java.util.Collections;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahuljai-05"},"content":"import java.util.List;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahuljai-05"},"content":"/**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahuljai-05"},"content":" * The TaskHandler class manages the list of tasks, including adding, removing,","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahuljai-05"},"content":" * marking as done, and unmarking tasks. It interacts with the Fenix class","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahuljai-05"},"content":" * to validate and retrieve task indices based on user input.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahuljai-05"},"content":" */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahuljai-05"},"content":"public class TaskHandler {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahuljai-05"},"content":"    private Fenix fenix;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahuljai-05"},"content":"    private ArrayList\u003cTask\u003e taskArrayList;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahuljai-05"},"content":"     * Constructs a TaskHandler associated with the given Fenix instance.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahuljai-05"},"content":"     * Initializes an empty list of tasks.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahuljai-05"},"content":"     * @param fenix The Fenix instance that this TaskHandler interacts with.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahuljai-05"},"content":"    public TaskHandler(Fenix fenix) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahuljai-05"},"content":"        this.fenix \u003d fenix;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahuljai-05"},"content":"        this.taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahuljai-05"},"content":"     * Returns an unmodifiable view of the task list to prevent external modification.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rahuljai-05"},"content":"     * @return an unmodifiable list of tasks.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rahuljai-05"},"content":"    public List\u003cTask\u003e getTaskArrayList() {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rahuljai-05"},"content":"        return Collections.unmodifiableList(taskArrayList);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rahuljai-05"},"content":"     * Marks the task specified by the task number as done.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rahuljai-05"},"content":"     * Retrieves the task index from Fenix and marks the corresponding task.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rahuljai-05"},"content":"     * @param taskNumber The task number provided by the user.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rahuljai-05"},"content":"     * @return The task that was marked as done, or null if the task number is invalid.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rahuljai-05"},"content":"    public Task markAsDone(String taskNumber) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rahuljai-05"},"content":"        int taskIndex \u003d fenix.getTaskIndexFromInput(taskNumber);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rahuljai-05"},"content":"        if (taskIndex \u003d\u003d -1) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rahuljai-05"},"content":"            return null;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rahuljai-05"},"content":"        return markTaskAsDone(taskIndex);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rahuljai-05"},"content":"     * Marks the task at the specified index as done.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rahuljai-05"},"content":"     * @param taskNumber The index of the task to mark as done.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rahuljai-05"},"content":"     * @return The task that was marked as done.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rahuljai-05"},"content":"    private Task markTaskAsDone(int taskNumber) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rahuljai-05"},"content":"        Task task \u003d taskArrayList.get(taskNumber);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rahuljai-05"},"content":"        task.markAsDone();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rahuljai-05"},"content":"        return task;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rahuljai-05"},"content":"     * Unmarks the task specified by the task number, setting it as not done.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rahuljai-05"},"content":"     * Retrieves the task index from Fenix and unmarks the corresponding task.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rahuljai-05"},"content":"     * @param taskNumber The task number provided by the user.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rahuljai-05"},"content":"     * @return The task that was unmarked, or null if the task number is invalid.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rahuljai-05"},"content":"    public Task unmarkAsDone(String taskNumber) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rahuljai-05"},"content":"        int taskIndex \u003d fenix.getTaskIndexFromInput(taskNumber);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rahuljai-05"},"content":"        if (taskIndex \u003d\u003d -1) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rahuljai-05"},"content":"            return null;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rahuljai-05"},"content":"        return unmarkTaskAsDone(taskIndex);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rahuljai-05"},"content":"     * Unmarks the task at the specified index, setting it as not done.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rahuljai-05"},"content":"     * @param taskNumber The index of the task to unmark.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rahuljai-05"},"content":"     * @return The task that was unmarked.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rahuljai-05"},"content":"    private Task unmarkTaskAsDone(int taskNumber) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rahuljai-05"},"content":"        Task task \u003d taskArrayList.get(taskNumber);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rahuljai-05"},"content":"        task.unmarkAsDone();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rahuljai-05"},"content":"        return task;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rahuljai-05"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rahuljai-05"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rahuljai-05"},"content":"    public void storeTask(Task task) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rahuljai-05"},"content":"        taskArrayList.add(task);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rahuljai-05"},"content":"     * Deletes the task specified by the task number from the task list.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rahuljai-05"},"content":"     * Retrieves the task index from Fenix and removes the corresponding task.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rahuljai-05"},"content":"     * @param taskNumber The task number provided by the user.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rahuljai-05"},"content":"     * @return The task that was deleted, or null if the task number is invalid.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rahuljai-05"},"content":"    public Task deleteTask(String taskNumber) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rahuljai-05"},"content":"        int taskIndex \u003d fenix.getTaskIndexFromInput(taskNumber);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rahuljai-05"},"content":"        if (taskIndex \u003d\u003d -1) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rahuljai-05"},"content":"            return null;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rahuljai-05"},"content":"        Task task \u003d taskArrayList.get(taskIndex);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rahuljai-05"},"content":"        taskArrayList.remove(taskIndex);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rahuljai-05"},"content":"        return task;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rahuljai-05"},"content":"    public ArrayList\u003cTask\u003e findTasks(String commandInfo) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rahuljai-05"},"content":"        ArrayList\u003cTask\u003e foundArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rahuljai-05"},"content":"        for (Task task : taskArrayList) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rahuljai-05"},"content":"            String taskName \u003d task.getTaskName();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rahuljai-05"},"content":"            String formattedTaskInfo \u003d task.getFormattedTaskInfo();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rahuljai-05"},"content":"            String formattedTaskName \u003d formattedTaskInfo.split(\"\\\\(\", 2)[0];","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"rahuljai-05"},"content":"            if (taskName.contains(commandInfo) || formattedTaskName.contains(commandInfo)) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rahuljai-05"},"content":"                foundArrayList.add(task);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"rahuljai-05"},"content":"            }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rahuljai-05"},"content":"        return foundArrayList;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rahuljai-05"},"content":"    public int getNumberOfUnfinishedTasks() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"rahuljai-05"},"content":"        int numberOfUnfinishedTasks \u003d 0;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"rahuljai-05"},"content":"        for (Task task : taskArrayList) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"rahuljai-05"},"content":"            boolean isDone \u003d task.getIsDone();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"rahuljai-05"},"content":"            if (!isDone) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"rahuljai-05"},"content":"                numberOfUnfinishedTasks++;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"rahuljai-05"},"content":"            }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"rahuljai-05"},"content":"        return numberOfUnfinishedTasks;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"rahuljai-05"},"content":"}","lastModifiedDate":"2024-10-02","isFullCredit":false}],"authorContributionMap":{"rahuljai-05":138}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahuljai-05"},"content":"/**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahuljai-05"},"content":" * The Todo class represents a task that needs to be done.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahuljai-05"},"content":" * It is a subclass of the Task class, specifically for tasks that don\u0027t have deadlines or events.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahuljai-05"},"content":" */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahuljai-05"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahuljai-05"},"content":"     * Constructs a new Todo task with the specified task name.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahuljai-05"},"content":"     * The task is initialized as not done by default.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahuljai-05"},"content":"     * @param taskName The name of the todo task.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahuljai-05"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahuljai-05"},"content":"        super(taskName);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahuljai-05"},"content":"     * Constructs a new Todo task with the specified completion status and formatted task information.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahuljai-05"},"content":"     * @param isDone           Boolean value indicating whether the task is done.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahuljai-05"},"content":"     * @param formattedTaskInfo A string representing the formatted task information.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahuljai-05"},"content":"    public Todo(boolean isDone, String formattedTaskInfo) {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahuljai-05"},"content":"        super(isDone, formattedTaskInfo);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahuljai-05"},"content":"     * Returns the string representation of the Todo task, including its type and completion status.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rahuljai-05"},"content":"     * The format includes a \"[T]\" to indicate the task is a Todo, followed by a \"[X]\" if the task is done,","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rahuljai-05"},"content":"     * or \"[ ]\" if it is not done.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rahuljai-05"},"content":"     * @return A string representing the Todo task.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rahuljai-05"},"content":"    @Override","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rahuljai-05"},"content":"    public String toString() {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rahuljai-05"},"content":"        String taskStatus \u003d \"[T][\" + (isDone ? \"X\" : \" \") + \"] \";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rahuljai-05"},"content":"        if (formattedTaskInfo.isBlank()) {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rahuljai-05"},"content":"            return taskStatus + taskName;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rahuljai-05"},"content":"        return taskStatus + formattedTaskInfo;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rahuljai-05"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"rahuljai-05":42}},{"path":"src/main/java/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahuljai-05"},"content":"import java.util.List;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahuljai-05"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahuljai-05"},"content":"/**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahuljai-05"},"content":" * The UserInterface class handles interactions between the user and the Fenix application.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahuljai-05"},"content":" * It manages input and output, displaying information and prompts to the user,","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahuljai-05"},"content":" * and collecting user input through the console.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahuljai-05"},"content":" */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahuljai-05"},"content":"public class UserInterface implements SampleStrings {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahuljai-05"},"content":"    private Fenix fenix;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahuljai-05"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahuljai-05"},"content":"     * Constructs a UserInterface for a given Fenix instance.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahuljai-05"},"content":"     * Initializes the scanner to read user input.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahuljai-05"},"content":"     * @param fenix The Fenix instance that this UserInterface interacts with.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahuljai-05"},"content":"    public UserInterface(Fenix fenix) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahuljai-05"},"content":"        this.fenix \u003d fenix;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahuljai-05"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahuljai-05"},"content":"     * Displays a greeting message to the user when the application starts.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahuljai-05"},"content":"    public void greet() {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahuljai-05"},"content":"        System.out.println(HORIZONTAL_LINE_USER_COMMAND);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rahuljai-05"},"content":"        System.out.println(GREETING);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rahuljai-05"},"content":"        System.out.println(SERVICE_PROMPT);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rahuljai-05"},"content":"     * Reads and returns the user\u0027s input from the console.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rahuljai-05"},"content":"     * @return The user input as a string.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rahuljai-05"},"content":"    public String getUserInput() {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rahuljai-05"},"content":"        System.out.println(HORIZONTAL_LINE_USER_COMMAND);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rahuljai-05"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rahuljai-05"},"content":"     * Displays all tasks to the user.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rahuljai-05"},"content":"     * The tasks are displayed with their index in the list and formatted accordingly.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rahuljai-05"},"content":"     * @param taskArrayList The list of tasks to be displayed.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rahuljai-05"},"content":"    public void showAllTasks(List\u003cTask\u003e taskArrayList) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rahuljai-05"},"content":"        String space \u003d \"\\t\";","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rahuljai-05"},"content":"        for (Task task : taskArrayList) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rahuljai-05"},"content":"            String index \u003d (taskArrayList.indexOf(task) + 1) + \". \";","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rahuljai-05"},"content":"            System.out.println(space + index + task);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rahuljai-05"},"content":"     * Displays a message to indicate a task modification by Fenix (e.g., task added, marked, or deleted).","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rahuljai-05"},"content":"     * @param modification Array containing messages to display for the modification.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rahuljai-05"},"content":"     * @param task The task that has been modified.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rahuljai-05"},"content":"    public void showFenixModification(String[] modification, Task task) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rahuljai-05"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rahuljai-05"},"content":"            return;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rahuljai-05"},"content":"        String modificationMessage \u003d modification[0];","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rahuljai-05"},"content":"        String modificationType \u003d modification[1];","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rahuljai-05"},"content":"        System.out.println(modificationMessage);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rahuljai-05"},"content":"        printFenixModification(modificationType, task);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rahuljai-05"},"content":"     * Prints the details of the task modification, including the modification type and the task itself.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rahuljai-05"},"content":"     * Also displays the number of unfinished tasks remaining and a special message if all tasks are done.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rahuljai-05"},"content":"     *","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rahuljai-05"},"content":"     * @param modificationType The type of modification (e.g., \"added\", \"deleted\").","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rahuljai-05"},"content":"     * @param task The task that has been modified.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rahuljai-05"},"content":"    private void printFenixModification(String modificationType, Task task) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rahuljai-05"},"content":"        int taskIndex \u003d fenix.indexOfTask(task) + 1;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rahuljai-05"},"content":"        // taskIndex \u003d\u003d 0 when task has been deleted","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rahuljai-05"},"content":"        String taskNumber \u003d (taskIndex \u003d\u003d 0 ? \"\" : taskIndex + \". \");","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rahuljai-05"},"content":"        System.out.println(HORIZONTAL_LINE_FENIX_MODIFICATION);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rahuljai-05"},"content":"        System.out.println(\"\\t\\t\" + modificationType + taskNumber + task);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rahuljai-05"},"content":"        System.out.println(HORIZONTAL_LINE_FENIX_MODIFICATION);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rahuljai-05"},"content":"        int numberOfUnfinishedTasks \u003d fenix.getNumberOfUnfinishedTasks();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rahuljai-05"},"content":"        System.out.println(\"You now have \" + numberOfUnfinishedTasks + \" tasks awaiting your attention.\");","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rahuljai-05"},"content":"        if (numberOfUnfinishedTasks \u003d\u003d 0) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rahuljai-05"},"content":"            printAllTasksDone();","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rahuljai-05"},"content":"        }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rahuljai-05"},"content":"    private void printAllTasksDone() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rahuljai-05"},"content":"        System.out.println(ALL_TASKS_COMPLETED);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rahuljai-05"},"content":"    public void printMatchedTasks() {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rahuljai-05"},"content":"        System.out.println(MATCHED_TASKS);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rahuljai-05"},"content":"     * Requests the user to provide a command.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rahuljai-05"},"content":"    public void requestForCommand() {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rahuljai-05"},"content":"        System.out.println(COMMAND_REQUEST);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rahuljai-05"},"content":"     * Requests the user to provide a valid command when the given command is invalid.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rahuljai-05"},"content":"    public void requestForValidCommand() {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rahuljai-05"},"content":"        System.out.println(VALID_COMMAND_REQUEST);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rahuljai-05"},"content":"     * Requests the user to provide a task description when it is missing.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rahuljai-05"},"content":"    public void requestForTask() {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rahuljai-05"},"content":"        System.out.println(TASK_REQUEST);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"rahuljai-05"},"content":"     * Requests the user to provide a valid task number when the input is invalid.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rahuljai-05"},"content":"    public void requestForValidTask() {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rahuljai-05"},"content":"        System.out.println(VALID_TASK_REQUEST);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"rahuljai-05"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"rahuljai-05"},"content":"    /**","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"rahuljai-05"},"content":"     * Bids farewell to the user when the application is closed.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"rahuljai-05"},"content":"     * Closes the scanner to release resources.","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"rahuljai-05"},"content":"     */","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"rahuljai-05"},"content":"    public void bidFarewell() {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"rahuljai-05"},"content":"        System.out.println(FAREWELL);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"rahuljai-05"},"content":"        System.out.println(HORIZONTAL_LINE_USER_COMMAND);","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"rahuljai-05"},"content":"        scanner.close();","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"rahuljai-05"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"rahuljai-05"},"content":"}","lastModifiedDate":"2024-10-02","isFullCredit":false}],"authorContributionMap":{"rahuljai-05":139}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rahuljai-05"},"content":"list","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahuljai-05"},"content":"run","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahuljai-05"},"content":"todo","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahuljai-05"},"content":"todo","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahuljai-05"},"content":"todo borrow book","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahuljai-05"},"content":"list","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahuljai-05"},"content":"deadline","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahuljai-05"},"content":"deadline","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahuljai-05"},"content":"deadline /by","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahuljai-05"},"content":"deadline study","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahuljai-05"},"content":"deadline study /by 5pm","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahuljai-05"},"content":"event  /from 5pm /to 7pm","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahuljai-05"},"content":"event run /from 5pm","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahuljai-05"},"content":"event run /from 5pm /to 7pm","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahuljai-05"},"content":"list","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahuljai-05"},"content":"mark 2","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahuljai-05"},"content":"mark 4","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahuljai-05"},"content":"mark 0","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahuljai-05"},"content":"mark -1","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahuljai-05"},"content":"unmark 4","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahuljai-05"},"content":"unmark 0","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahuljai-05"},"content":"unmark 2","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahuljai-05"},"content":"unmark -3","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahuljai-05"},"content":"event Career fair /from Monday 2pm /to Wednesday 5pm","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahuljai-05"},"content":"todo swim","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahuljai-05"},"content":"mark 4","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahuljai-05"},"content":"list","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahuljai-05"},"content":"bye","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"rahuljai-05":28}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahuljai-05"},"content":"javac -classpath ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahuljai-05"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"rahuljai-05":2,"-":19}}]
